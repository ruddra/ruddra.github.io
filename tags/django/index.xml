<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on Ruddra</title><link>https://ruddra.com/tags/django/</link><description>Recent content in Django on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 22 Apr 2020 00:00:00 +0600</lastBuildDate><atom:link href="https://ruddra.com/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>Create an Application with JWT based Authentication in 10 Minutes using Django</title><link>https://ruddra.com/posts/django-jwt-auth-app-in-10-mins/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0600</pubDate><guid>https://ruddra.com/posts/django-jwt-auth-app-in-10-mins/</guid><description>Let us say, you need an authentication service in a rush, which needs to be cutting edge and uses JWT based authentication. Or you need a stand alone authentication service to be plugged in with other microservices. Do not worry, you can create one in 10 minutes. All you need to have is Python and Docker installed in your machine.</description></item><item><title>Django Access URL Arguments Through Middleware</title><link>https://ruddra.com/posts/django-store-url-argument-through-middleware/</link><pubDate>Wed, 02 Oct 2019 22:06:21 +0600</pubDate><guid>https://ruddra.com/posts/django-store-url-argument-through-middleware/</guid><description>Lets say you have an API which is being used by many stores. Now for a specific store ABC, they want to have a different response format. So how would you make this implementation generic without making different views for store ABC? Simple, use middleware.Table of contents&amp;nbsp; How it works Usage Another usage scenario</description></item><item><title>Django Serialize ForeignKey, ManyToMany, Instance, Property Method</title><link>https://ruddra.com/posts/django-serialize-foreignkey-m2m-property-instance-fields/</link><pubDate>Thu, 13 Jun 2019 23:12:26 +0600</pubDate><guid>https://ruddra.com/posts/django-serialize-foreignkey-m2m-property-instance-fields/</guid><description>Django’s serialization framework provides a mechanism for “translating” Django models into other formats. Usually they are in json, yaml, XML, GeoJSON etc text based formats.
Here, we are going to supercharge these serializers to do more things, even try to render properties and instance methods.
This article will be useful to you if you are:</description></item><item><title>Deploy Django App in Sub Directory Using OpenShift</title><link>https://ruddra.com/posts/deploy-django-subpath-openshift/</link><pubDate>Wed, 24 Apr 2019 20:36:44 +0600</pubDate><guid>https://ruddra.com/posts/deploy-django-subpath-openshift/</guid><description>When you are using OpenShift, you will be using routes to expose a route from a service. Let&amp;rsquo;s say you want to expose a path in example.com/dummy. When you do that for a django application(without any reverse proxy server), it usually becomes a problem, because the sub directory does not work well with Django&amp;rsquo;s urls.</description></item><item><title>Do Extra in S3 Using Django Storage and Boto3</title><link>https://ruddra.com/posts/aws-boto3-useful-functions/</link><pubDate>Sat, 06 Apr 2019 01:49:10 +0600</pubDate><guid>https://ruddra.com/posts/aws-boto3-useful-functions/</guid><description>Today, I am going to write about few useful snippets/functionalities which I have used for Amazon S3 or any S3 compitable storage using Boto3 and Django Storage. FYI, this post focuses on using S3 with Django.
So without further ado, let us begin. Table of contents&amp;nbsp; Configuring S3 Using S3 which it does not belong to AWS Serve S3 in different domain(through cloudFront or varnish) Create new bucket See all buckets Change access control to a bucket Delete objects from a bucket(also bucket itself) Use different folders when storing media and static contents Make &amp;lsquo;collect static&amp;rsquo; faster Check ACL status In conclusion</description></item><item><title>Django: Save Unknown Object in Database</title><link>https://ruddra.com/posts/django-save-unknown-object-in-database/</link><pubDate>Sun, 10 Feb 2019 00:38:04 +0600</pubDate><guid>https://ruddra.com/posts/django-save-unknown-object-in-database/</guid><description>Suppose you are dealing with a poorly written API, which returns different type of objects at different scenarios. For example, sometimes it returns a string(ie. abcd), sometimes it returns a list(ie. [1,2,3,4]), or maybe None. Now, you are suppose to save that data, which you can&amp;rsquo;t predict. As you can&amp;rsquo;t predict the data type of object, you can&amp;rsquo;t design your Django Model accordingly.</description></item><item><title>Django: Ordering by Linked List for Model Objects</title><link>https://ruddra.com/posts/django-model-linked-list/</link><pubDate>Sat, 26 Jan 2019 14:58:58 +0600</pubDate><guid>https://ruddra.com/posts/django-model-linked-list/</guid><description>Linked list is a data structure where each object has points to next. In django, linked list can provide an interesting solution when it comes to custom ordering/grouping issues.
Lets think of an example like this= you are making a blog site, and you have made a Post Model like this:</description></item><item><title>Django: Changing User Model in Mid-Project</title><link>https://ruddra.com/posts/django-custom-user-migration-mid-phase-project/</link><pubDate>Thu, 03 Jan 2019 02:00:00 +0000</pubDate><guid>https://ruddra.com/posts/django-custom-user-migration-mid-phase-project/</guid><description>Every now and then I see some questions pop up in StackOverflow with title:
ValueError: Related model &amp;lsquo;app.User&amp;rsquo; cannot be resolved
This is a very common issue and pops up when the user tries to run the migration. So, lets talk more about what is this problem and how can we solve it.</description></item><item><title>Testing for Django Rest Framework with Factory Boy and Faker</title><link>https://ruddra.com/posts/tdd-drf-factory-boy-faker/</link><pubDate>Sat, 22 Dec 2018 02:00:00 +0000</pubDate><guid>https://ruddra.com/posts/tdd-drf-factory-boy-faker/</guid><description>“I&amp;rsquo;m not a great programmer; I&amp;rsquo;m just a good programmer with great habits.” ― Kent Beck
Test Driven Development - in short TDD is a practice where you write the tests first then the actual code. It makes the code less vulnerable and it makes a testable software rather than writing the software, then test it.</description></item><item><title>Boilerplate For Angular 1.X and Django(Powered by Webpack2, Docker, Yarn, DRF)</title><link>https://ruddra.com/posts/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/</link><pubDate>Sun, 29 Apr 2018 10:00:52 +0000</pubDate><guid>https://ruddra.com/posts/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/</guid><description>This post is deprecated. Use it at your own risk
Simple and clean boilerplate for using django and angular 1.x togather, with basic structure comes built-in. Table of contents&amp;nbsp; Tech Stack Prerequisite Setup frontend Setup docker Setup backend Usage Local settings sample Screenshots
Tech Stack Python3 Django 1.</description></item><item><title>Deploy Django to OpenShift 3 Powered by MySQL and Gunicorn</title><link>https://ruddra.com/posts/deploy-django-to-openshift-3/</link><pubDate>Sat, 24 Feb 2018 13:32:11 +0000</pubDate><guid>https://ruddra.com/posts/deploy-django-to-openshift-3/</guid><description>If you want to use OpenShift for deploying Django, you can follow this post and simply do that. You don&amp;rsquo;t need to learn Kubernetes. We will use docker file only. No other fancy stuff.
Also, before starting, I am also hoping you are little bit familiar with OpenShift 3 and oc tools.</description></item><item><title>Documentation Of Django Encrypt File</title><link>https://ruddra.com/posts/documentation-of-django-encrypt-file/</link><pubDate>Fri, 24 Feb 2017 18:52:20 +0000</pubDate><guid>https://ruddra.com/posts/documentation-of-django-encrypt-file/</guid><description>This is no longer maintained. Use it at your own risk.
Django Encrypt File is a simple Library which can be used to encrypt uploaded files and store them.Table of contents&amp;nbsp; Installation Basic usage Using in the view Advance example(with models) Model defination Encrypt view Decrypt view Notes</description></item><item><title>Docker: Use Celery in Django(Redis as Broker)</title><link>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</link><pubDate>Mon, 14 Nov 2016 15:43:31 +0000</pubDate><guid>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</guid><description>In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.Table of contents&amp;nbsp; Add &amp;lsquo;Celery&amp;rsquo; to django Make a simple async task Explanations Need proof that this works</description></item><item><title>Serve Static Files by Nginx from Django using Docker</title><link>https://ruddra.com/posts/serve-static-files-by-nginx-from-django-using-docker/</link><pubDate>Wed, 02 Nov 2016 17:24:56 +0000</pubDate><guid>https://ruddra.com/posts/serve-static-files-by-nginx-from-django-using-docker/</guid><description>This is more of a follow up post of my previous blog.
Before I start, I am assuming you have successfully deployed django using docker and nginx, but having some problems serving static files.Table of contents&amp;nbsp; Steps Update
Steps No worries, it is easy. Just follow these steps:</description></item><item><title>Deploy Django, Gunicorn, NGINX, Postgresql using Docker</title><link>https://ruddra.com/posts/docker-django-nginx-postgres/</link><pubDate>Tue, 09 Aug 2016 13:47:22 +0000</pubDate><guid>https://ruddra.com/posts/docker-django-nginx-postgres/</guid><description>This post mainly based on this blog: https://docs.docker.com/compose/django/.
I will be extending this post by serving django+gunicorn using Nginx, also I will using Postgresql docker container to use it as database.Table of contents&amp;nbsp; Steps Create django project Add &amp;lsquo;requirement.pip&amp;rsquo; Create &amp;lsquo;Dockerfile&amp;rsquo; Install &amp;lsquo;docker-compose&amp;rsquo; Add configuration to &amp;lsquo;docker-compose.yml&amp;rsquo; Create NGINX config Database configuration Almost done Start and stop docker compose Shell access Example source code In conclusion Update</description></item><item><title>Django 1.7 and Scrapy</title><link>https://ruddra.com/posts/django-1-7-scrapy/</link><pubDate>Sun, 03 Jan 2016 15:45:51 +0000</pubDate><guid>https://ruddra.com/posts/django-1-7-scrapy/</guid><description>This post is deprecated. Use it at your own risk.
Today I am going to share how to use Scrapy and Django together to crawl to a website and store scraped data to Database using Django.Table of contents&amp;nbsp; Project Setup: Django Project Setup: Scrapy Screenshots</description></item><item><title>Make a Blog using Django Part 2</title><link>https://ruddra.com/posts/make-a-blog-using-django-part-2/</link><pubDate>Thu, 17 Sep 2015 21:29:09 +0000</pubDate><guid>https://ruddra.com/posts/make-a-blog-using-django-part-2/</guid><description>This post is now deprecated. Please follow the official tutorial for creating your first django application.
From previous post, you have configured and ran django, also added admin site to the django.
To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog/
Table of contents&amp;nbsp; Create entry in database Templates Separating views Create entry in database Now click on the myblog section and click add to add new blog.</description></item><item><title>Make a Blog using Django Part 1</title><link>https://ruddra.com/posts/make-a-blog-using-django-part-1/</link><pubDate>Thu, 17 Sep 2015 21:29:08 +0000</pubDate><guid>https://ruddra.com/posts/make-a-blog-using-django-part-1/</guid><description>This post is now deprecated. Please follow the official tutorial for creating your first django application.
&amp;ldquo;Making a blog using django&amp;rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django&amp;rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use.</description></item><item><title>Change Column Headers in Django Tables 2</title><link>https://ruddra.com/posts/change-column-headers-django-tables2/</link><pubDate>Thu, 17 Sep 2015 21:15:04 +0000</pubDate><guid>https://ruddra.com/posts/change-column-headers-django-tables2/</guid><description>Django Tables2 is a package which displays table directly from queryset. It shows column header based on object&amp;rsquo;s attribute name. But if someone wants to override it, how can he/she do that? Here is a easy solution.Table of contents&amp;nbsp; Model class Table class View class
Model class Suppose we have a model class like this:</description></item><item><title>How to configure Django and Tornado in PyCharm Community Edition</title><link>https://ruddra.com/posts/how-to-configure-django-tornado-in-pycharm-community-edition/</link><pubDate>Thu, 17 Sep 2015 21:11:18 +0000</pubDate><guid>https://ruddra.com/posts/how-to-configure-django-tornado-in-pycharm-community-edition/</guid><description>I think, Pycharm is THE best IDE for developing python. But unfortunately, the professional edition is not free. But community edition is good enough for doing debugging, integrating GIT etc.
Normally its easy to use the community edition for django and tornado&amp;rsquo;s debugging/running if you know how to configure.Table of contents&amp;nbsp; Django configuration Tornado configuration PyCharm 2016</description></item><item><title>Some Useful Tools/Function for Django</title><link>https://ruddra.com/posts/some-useful-tools-function/</link><pubDate>Thu, 17 Sep 2015 20:56:54 +0000</pubDate><guid>https://ruddra.com/posts/some-useful-tools-function/</guid><description>This post is deprecated as its based on Django 1.6 mostly.
I am going to share some useful Django tools/functions which are very useful(were for me atleast) to get things done.Table of contents&amp;nbsp; Return any model class and its properties Distance calculator Dynamic relational operations Get week list Get month list</description></item><item><title>Working with Formsets</title><link>https://ruddra.com/posts/working-with-formset/</link><pubDate>Thu, 17 Sep 2015 17:49:58 +0000</pubDate><guid>https://ruddra.com/posts/working-with-formset/</guid><description>This post is deprecated and may not be useful.
As documentation says:
A formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid.
So here I am going to show a very simple django formset implementation example.</description></item><item><title>Sample Ajax GET/POST Request in Django</title><link>https://ruddra.com/posts/sample-ajax-get-post-request-in-django/</link><pubDate>Thu, 17 Sep 2015 17:29:45 +0000</pubDate><guid>https://ruddra.com/posts/sample-ajax-get-post-request-in-django/</guid><description>Let us make a test scenario here: A dropdown field which on change we are going to send a Get/Post request to Django and return response.
Let us start coding&amp;hellip;.Table of contents&amp;nbsp; HTML code Create an Ajax request Handle AJAX request in django view In conclusion</description></item><item><title>Using IntellijIdea/Pycharm Within An Exisiting Virtualenv</title><link>https://ruddra.com/posts/using-intellijidea-within-an-exisiting-virtualenv/</link><pubDate>Thu, 17 Sep 2015 17:24:52 +0000</pubDate><guid>https://ruddra.com/posts/using-intellijidea-within-an-exisiting-virtualenv/</guid><description>To add a virtual environment to Intellij Idea, You have added Python from virtualenv folder to project SDK. Which means that virtualenv directory&amp;rsquo;s python( for example venv/bin/python2.7) needs to be added to Intellij Idea project path. Table of contents&amp;nbsp; For PyCharm &amp;gt;= 2018 For Pycharm 2016 and later For older versions</description></item><item><title>Implementation of Forgot/Reset Password Feature in Django</title><link>https://ruddra.com/posts/implementation-of-forgot-reset-password-feature-in-django/</link><pubDate>Tue, 21 Oct 2014 18:13:05 +0000</pubDate><guid>https://ruddra.com/posts/implementation-of-forgot-reset-password-feature-in-django/</guid><description>This post is deprecated in favour of django authentication views
Django has its own implementation for reset/forgot password for its admin site. We are going to use that piece of code as reference to implement similar feature for a non admin-site authentication page. Although there are tons of good packages which will allow user to use their password reseting system.</description></item><item><title>Perodic Tasks By Celery 3.1 Example</title><link>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</link><pubDate>Mon, 01 Sep 2014 18:03:07 +0000</pubDate><guid>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</guid><description>This post is deprecated. It is no longer compatible with latest Celery versions.
I am assuming you have read celery docs from Celery Documentation.
As we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example.</description></item><item><title>Syncdb vs Migration</title><link>https://ruddra.com/posts/syncdb-vs-migration/</link><pubDate>Fri, 04 Jul 2014 17:34:00 +0000</pubDate><guid>https://ruddra.com/posts/syncdb-vs-migration/</guid><description>While surfing through Stackoverflow, I find a common question among Django users that, database not working properly; fields attribute changed, yet not working etc. Clearly because most of them used syncdb after altering fields. Well, lets make some things clear here about django syncdb and migration.Table of contents&amp;nbsp; What is &amp;lsquo;syncdb&amp;rsquo; What is &amp;lsquo;migration&amp;rsquo; What if you mess-up in production server with &amp;lsquo;syncdb&amp;rsquo; and &amp;lsquo;migration&amp;rsquo;</description></item><item><title>RichText Editor in Django Admin Site</title><link>https://ruddra.com/posts/richtext-editor-in-django-admin-site/</link><pubDate>Tue, 29 Apr 2014 10:44:30 +0000</pubDate><guid>https://ruddra.com/posts/richtext-editor-in-django-admin-site/</guid><description>I wanted to add a rich text editor within django administrator. It is not that hard to add a rich text editor, as there are editors like CKeditor, Tinymce.Table of contents&amp;nbsp; Download ckeditor file Writing forms.py Generated text
Download ckeditor file There are multiple plugins for django like django-ckeditor or django-tinymce etc.</description></item><item><title>Django Translation Using .PO File</title><link>https://ruddra.com/posts/django-translation-using-po-file/</link><pubDate>Mon, 16 Dec 2013 10:51:47 +0000</pubDate><guid>https://ruddra.com/posts/django-translation-using-po-file/</guid><description>This post is deprecated. Please follow the official documentation.
When comes to using multiple languages in one single site, Django is very handy. You can use .po file to do your translation for you.Table of contents&amp;nbsp; How to do that
How to do that Process is very simple: First create .</description></item></channel></rss>