/*! lozad.js - v1.15.0 - 2020-05-23
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){"use strict";function t(t){t.setAttribute("data-loaded",!0)}/**
   * Detect IE browser
   * @const {boolean}
   * @private
   */
var e="undefined"!=typeof document&&document.documentMode,r={rootMargin:"0px",threshold:0,load:function(t){if("picture"===t.nodeName.toLowerCase()){var r=document.createElement("img");e&&t.getAttribute("data-iesrc")&&(r.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(r.alt=t.getAttribute("data-alt")),t.append(r)}if("video"===t.nodeName.toLowerCase()&&!t.getAttribute("data-src")&&t.children){for(var a=t.children,i=void 0,o=0;o<=a.length-1;o++)(i=a[o].getAttribute("data-src"))&&(a[o].src=i);t.load()}t.getAttribute("data-poster")&&(t.poster=t.getAttribute("data-poster")),t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset"));var n=",";if(t.getAttribute("data-background-delimiter")&&(n=t.getAttribute("data-background-delimiter")),t.getAttribute("data-background-image"))t.style.backgroundImage="url('"+t.getAttribute("data-background-image").split(n).join("'),url('")+"')";else if(t.getAttribute("data-background-image-set")){var d=t.getAttribute("data-background-image-set").split(n),u=d[0].substr(0,d[0].indexOf(" "))||d[0];// Substring before ... 1x
u=-1===u.indexOf("url(")?"url("+u+")":u,1===d.length?t.style.backgroundImage=u:t.setAttribute("style",(t.getAttribute("style")||"")+"background-image: "+u+"; background-image: -webkit-image-set("+d+"); background-image: image-set("+d+")")}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded:function(){}},a=function(t){return"true"===t.getAttribute("data-loaded")};return function(){var e,i,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},d=Object.assign({},r,n),u=d.root,g=d.rootMargin,s=d.threshold,c=d.load,l=d.loaded,b=void 0;return"undefined"!=typeof window&&window.IntersectionObserver&&(b=new IntersectionObserver((e=c,i=l,function(r,o){r.forEach(function(r){(0<r.intersectionRatio||r.isIntersecting)&&(o.unobserve(r.target),a(r.target)||(e(r.target),t(r.target),i(r.target)))})}),{root:u,rootMargin:g,threshold:s})),{observe:function(){for(var e=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)}(o,u),r=0;r<e.length;r++)a(e[r])||(b?b.observe(e[r]):(c(e[r]),t(e[r]),l(e[r])))},triggerLoad:function(e){a(e)||(c(e),t(e),l(e))},observer:b}}});