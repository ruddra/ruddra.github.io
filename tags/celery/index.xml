<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Celery on Ruddra</title><link>https://ruddra.com/tags/celery/</link><description>Recent content in Celery on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 14 Nov 2016 15:43:31 +0000</lastBuildDate><atom:link href="https://ruddra.com/tags/celery/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker: Use Celery in Django(Redis as Broker)</title><link>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</link><pubDate>Mon, 14 Nov 2016 15:43:31 +0000</pubDate><guid>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</guid><description>In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later. Table of contents Add &amp;lsquo;Celery&amp;rsquo; to django Make a simple async task Explanations Need proof that this works</description></item><item><title>Perodic Tasks By Celery 3.1 Example</title><link>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</link><pubDate>Mon, 01 Sep 2014 18:03:07 +0000</pubDate><guid>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</guid><description>This post is deprecated. It is no longer compatible with latest Celery versions.
I am assuming you have read celery docs from Celery Documentation.
As we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example.</description></item></channel></rss>