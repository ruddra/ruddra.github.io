<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Ruddra</title><link>https://ruddra.com/tags/docker/</link><description>Recent content in Docker on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 24 May 2020 00:36:27 +0600</lastBuildDate><atom:link href="https://ruddra.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Reduce Build Time for Docker Image with Data Science Packages</title><link>https://ruddra.com/docker-reduce-build-time-for-data-science-packages/</link><pubDate>Sun, 24 May 2020 00:36:27 +0600</pubDate><guid>https://ruddra.com/docker-reduce-build-time-for-data-science-packages/</guid><description>If you want to use data science packages like numpy, scipy, pandas etc with your docker container and using pip to install them, then it will take forever to build the images. Because pip compiles the C extended code and that compilation needs a lot of time. For numpy it took me around 4 minutes.</description></item><item><title>Create an Application with JWT based Authentication in 10 Minutes using Django</title><link>https://ruddra.com/django-jwt-auth-app-in-10-mins/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0600</pubDate><guid>https://ruddra.com/django-jwt-auth-app-in-10-mins/</guid><description>Let us say, you need an authentication service in a rush, which needs to be cutting edge and uses JWT based authentication. Or you need a stand alone authentication service to be plugged in with other microservices. Do not worry, you can create one in 10 minutes. All you need to have is Python and Docker installed in your machine.</description></item><item><title>Ship Application with Database Inside Docker Container</title><link>https://ruddra.com/docker-ship-database-with-container/</link><pubDate>Fri, 28 Feb 2020 00:53:28 +0600</pubDate><guid>https://ruddra.com/docker-ship-database-with-container/</guid><description>DISCLAIMER: This is not the recommended process. Ideally you should have the database running in a separate container and use network to interact with that container.
Usually, we donâ€™t ship application with the database inside the same container. But sometimes we are forced to do that. In this article we are going to see a minimalist way of shipping application with database built-in inside docker container.</description></item><item><title>Use Docker for Accessing Database in AWS CodeBuild</title><link>https://ruddra.com/aws-codebuild-use-database/</link><pubDate>Fri, 31 Jan 2020 19:08:29 +0600</pubDate><guid>https://ruddra.com/aws-codebuild-use-database/</guid><description>AWS CodeBuild is an extraordinary tool for building your code. Recently I have been using it to build projects and store docker images in AWS ECR. During those CodeBuild processes, I needed Database for running tests. As the need of the Database was for a limited time and I didn&amp;rsquo;t want to pay extra for it(that is why I did not use AWS RDS), I decided to create database using docker inside CodeBuild.</description></item><item><title>Basic Networking in Docker</title><link>https://ruddra.com/networking-with-docker/</link><pubDate>Wed, 15 Jan 2020 00:50:56 +0600</pubDate><guid>https://ruddra.com/networking-with-docker/</guid><description>We already know that Docker is used for containerization. But networking in docker makes it even better tool for deployment. You can make standalone deployments in containers and communicate between them, or make containers act as host, or even assign mac addresses to containers and act them as devices. It does not matter which host machine you are in, you can make dockers communicate in-between them.</description></item><item><title>Tips on Using Volume, Entrypoint and Ignore Files in Docker</title><link>https://ruddra.com/docker-volume-entrypoint-ignorefile/</link><pubDate>Sat, 09 Nov 2019 00:56:04 +0600</pubDate><guid>https://ruddra.com/docker-volume-entrypoint-ignorefile/</guid><description>Have you worked with Docker before? Do you think you have trouble with it, like when you are developing an application, you need to build every time to see the results, or thinking of the best way to load data in DB, or may be you are annoyed because there are lots of markdown files, screenshots etc that are taking a lot of space in your container.</description></item><item><title>Tips on Using Docker Compose, Build Argument and Environment Variable</title><link>https://ruddra.com/docker-compose-arg-env/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0600</pubDate><guid>https://ruddra.com/docker-compose-arg-env/</guid><description>Imagine, you have some microservices and you want to use API from one service to another, how can you do that if all of them are running in different docker container? Docker Compose has a solution for you.
Suppose you want to deploy a project in test, stage and production environment with same Dockerfile for all of them through a single Dockerfile.</description></item><item><title>Tips on Writing Dockerfile, Reduce Sizes and Build Time of Docker Image</title><link>https://ruddra.com/docker-write-dockerfile-and-reduce-size-build-time-for-image/</link><pubDate>Fri, 08 Nov 2019 00:15:22 +0600</pubDate><guid>https://ruddra.com/docker-write-dockerfile-and-reduce-size-build-time-for-image/</guid><description>For the past couple of years, I have been creating Dockerfile for different projects. based on those experiences I am going to share some tips on writing docker files to communication between containers.
_FYI: before reading this article, please read the article from official docker blog site to learn about best practices for creating Dockerfile.</description></item><item><title>Build and Configure Plugins Inside Solr Using Docker</title><link>https://ruddra.com/solr-docker-plugin-install/</link><pubDate>Tue, 01 Oct 2019 00:16:34 +0600</pubDate><guid>https://ruddra.com/solr-docker-plugin-install/</guid><description>Adding a plugin to Solr is relatively simple process. In this article, we are going to see how to add a plugin by creating a jar file using a docker container, then add that to a Solr which also runs inside docker container.Table of contents&amp;nbsp; Building the plugin Workflow for building the plugin Example of solr image Explanation Run solr Without docker-compose With docker-compose Configure plugin inside docker In conclusion</description></item><item><title>Use VS Code Inside Docker Container for Development</title><link>https://ruddra.com/vs-code-remote-docker-development/</link><pubDate>Tue, 06 Aug 2019 18:54:21 +0600</pubDate><guid>https://ruddra.com/vs-code-remote-docker-development/</guid><description>VS Code is the most popular IDE at the moment. You can use it for developing applications in almost any programming language. In addition to that, you can do remote development in Docker,VM etc. In this post, we are going to discuss about how to use Docker Environment in VS Code.</description></item><item><title>Migration from Ghost 0.11 to 1.XX Using Docker</title><link>https://ruddra.com/migrating-from-ghost-11-to-1-xx-using-docker/</link><pubDate>Sun, 29 Apr 2018 07:37:24 +0000</pubDate><guid>https://ruddra.com/migrating-from-ghost-11-to-1-xx-using-docker/</guid><description>Ghost had formulated lots changes when they released version 1.XX. So, when you try to upgrade from 0.11 to 1.XX, you can follow the following steps.Table of contents&amp;nbsp; Steps Export backup Rename old content Copy to a seperate directory Create cocker compose file Start docker containers Setup ghost admin Import file Change Theme Regarding updating handlebar files In conclusion</description></item><item><title>Docker: Use Celery in Django(Redis as Broker)</title><link>https://ruddra.com/docker-do-stuff-using-celery-using-redis-as-broker/</link><pubDate>Mon, 14 Nov 2016 15:43:31 +0000</pubDate><guid>https://ruddra.com/docker-do-stuff-using-celery-using-redis-as-broker/</guid><description>In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.Table of contents&amp;nbsp; Add &amp;lsquo;Celery&amp;rsquo; to django Make a simple async task Explanations Need proof that this works</description></item><item><title>Serve Static Files by Nginx from Django using Docker</title><link>https://ruddra.com/serve-static-files-by-nginx-from-django-using-docker/</link><pubDate>Wed, 02 Nov 2016 17:24:56 +0000</pubDate><guid>https://ruddra.com/serve-static-files-by-nginx-from-django-using-docker/</guid><description>This is more of a follow up post of my previous article.
Before I start, I am assuming you have successfully deployed django using docker and nginx, but having some problems serving static files.Table of contents&amp;nbsp; Steps Update
Steps No worries, it is easy. Just follow these steps:</description></item><item><title>Deploy Django, Gunicorn, NGINX, Postgresql using Docker</title><link>https://ruddra.com/docker-django-nginx-postgres/</link><pubDate>Tue, 09 Aug 2016 13:47:22 +0000</pubDate><guid>https://ruddra.com/docker-django-nginx-postgres/</guid><description>This post mainly based on this article on docker documentation.
I will be extending this post by serving django+gunicorn using Nginx, also I will using Postgresql docker container to use it as database.Table of contents&amp;nbsp; Steps Create django project Add &amp;lsquo;requirement.pip&amp;rsquo; Create &amp;lsquo;Dockerfile&amp;rsquo; Install &amp;lsquo;docker-compose&amp;rsquo; Add configuration to &amp;lsquo;docker-compose.</description></item></channel></rss>