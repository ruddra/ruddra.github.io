{"version":"https://jsonfeed.org/version/1","title":"Blog by Arnab Kumar Shil","description":"Coding blogs by Arnab Kumar Shil,  @  https://ruddra.com/","home_page_url":"https://ruddra.com","feed_url":"https://ruddra.com/index.json","author":{"name":"Arnab Kumar Shil","url":"https://ruddra.com","avatar":"https://ruddra.com/avatar.jpg"},"items":[{"date_published":"2022-07-28T17:31:33+02:00","date_modified":"2022-07-28T22:03:00+02:00","date":"July 28, 2022","id":"https://ruddra.com/things-you-should-know-before-starting-a-professional-project/","url":"https://ruddra.com/things-you-should-know-before-starting-a-professional-project/","title":"Useful Tips to Help You with Starting Your First Professional Project","image":"https://ruddra.com/content/images/2022/07/running.jpg","tags":["SW Development","Git"],"content_html":"\u003cp\u003eIf you have a CS background, then you are bound to have encounters with professional projects. Before starting one, you should keep a few things in mind; otherwise, working could be a bit difficult. Here are some tips for a jump start in your professional project development.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#knowing-your-stakeholders\"\u003eKnowing your stakeholders\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#all-ides-are-good-ides\"\u003eAll IDEs are good IDEs\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#git-is-your-friend\"\u003eGit is your friend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#keeping-only-one-copy-of-the-project\"\u003eKeeping only one copy of the project\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#knowing-your-project-environment\"\u003eKnowing your project environment\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#checking-the-test-cases\"\u003eChecking the test cases\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#being-aware-of-the-culture\"\u003eBeing aware of the culture\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#not-being-afraid\"\u003eNot being afraid\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"knowing-your-stakeholders\"\u003eKnowing your stakeholders\u003c/h2\u003e\n\u003cp\u003eBefore starting the project, it is a good idea to talk with the stakeholders of this project. It can be a client, a product owner, or a team leader. Talking with them will help you understand the purpose of the project and what is your expected role.\u003c/p\u003e\n\u003ch2 id=\"all-ides-are-good-ides\"\u003eAll IDEs are good IDEs\u003c/h2\u003e\n\u003cp\u003eChoosing an IDE or text editor is essential, but there is no need to dwindle between IDEs considering which one is the best. Every IDE is good and has specific good things about them. But not one can have all the features. So choose which one is most suitable for your project.\u003c/p\u003e\n\u003ch2 id=\"git-is-your-friend\"\u003eGit is your friend\u003c/h2\u003e\n\u003cp\u003eVersion control is the next important thing you need to consider. Otherwise, you can\u0026rsquo;t access the source code. As a beginner, version control tools like Git can look complicated. But rest assured, it is a very sophisticated tool. Git is here to save your time and make your life easy. Knowing Git in detail will help you understand how to maintain the source code. Rather than using GUI-based tools, it is better to use the command line for Git, but in the beginning, it is unnecessary. A few basic things you might want to study are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGit fetch/reset\u003c/li\u003e\n\u003cli\u003eGit pull\u003c/li\u003e\n\u003cli\u003eGit push\u003c/li\u003e\n\u003cli\u003eGit merge\u003c/li\u003e\n\u003cli\u003eGit rebase\u003c/li\u003e\n\u003cli\u003eGit conflict during pull or rebase\u003c/li\u003e\n\u003cli\u003eGit flow.\u003c/li\u003e\n\u003cli\u003eGit branch\u003c/li\u003e\n\u003cli\u003eGit commit\u003c/li\u003e\n\u003cli\u003eGit tag\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHere are some helpful git commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git fetch/reset\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit fetch origin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit reset --hard origin/master\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git push\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit push origin master\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git rebase\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit rebase origin/master\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git branch\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit checkout -b develop\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# git add\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit add filename.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git commit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit commit -m \u003cspan class=\"s2\"\u003e\u0026#34;new commit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Git tag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit tag -a v1.4 -m \u003cspan class=\"s2\"\u003e\u0026#34;my version 1.4\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"keeping-only-one-copy-of-the-project\"\u003eKeeping only one copy of the project\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s a wrong idea to keep multiple copies of the same project in your development machine. If you need multiple copies, use the Git branch for it. If you own multiple copies, it will become difficult for you to keep track of where you made your changes. Hence let Git take care of source changes. No need to do things manually.\u003c/p\u003e\n\u003ch2 id=\"knowing-your-project-environment\"\u003eKnowing your project environment\u003c/h2\u003e\n\u003cp\u003eThe next important thing is to set up the environment for running the project. It is necessary to run the project before starting working on it. Usually, there should be a document (or create the document if it is a new project) on how to set up the project. Many modern projects come with a Docker file, which already has the docker environment configured. In that case, use docker to set up your project.\u003c/p\u003e\n\u003ch2 id=\"checking-the-test-cases\"\u003eChecking the test cases\u003c/h2\u003e\n\u003cp\u003eBefore building essential features, it is better to start with simple things like running test cases. If it is a new project, look into how to write tests for your project, and if possible, add some test cases. Running test cases or writing test cases will give you a glimpse of what the module is supposed to do and help you understand the purpose of the code.\u003c/p\u003e\n\u003ch2 id=\"being-aware-of-the-culture\"\u003eBeing aware of the culture\u003c/h2\u003e\n\u003cp\u003eBy culture, I meant the language\u0026rsquo;s design guidelines, git branching strategies, framework structures, design patterns, etc. Each project is different, and the culture behind it could be different, and you should know them before you start to contribute. If you are writing a new project, better follow the philosophy of the framework and language you will use for development. Also, remember that in professional projects, it is essential to have better readability than efficiency. In most cases, we achieve faster performance through a better system architecture. For example, it is possible to achieve better performance using a cache system, load balancer, message broker, etc.\u003c/p\u003e\n\u003ch2 id=\"not-being-afraid\"\u003eNot being afraid\u003c/h2\u003e\n\u003cp\u003eEvery great tool is like a double-edged sword; if you misuse it, it will cause you trouble. But do not be afraid of making mistakes. It is better to make mistakes and learn to use the tool properly now than later. You can seek help from anywhere. Luckily, the software community is beneficial. You can ask questions on Stack Overflow (do not worry about downvotes 😄), or create issues in the library\u0026rsquo;s repository (if it is open source).\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eCoding in a professional project is different from academic or competitive programming. But this difference is significant, making the professional projects more focused on maintainability, longevity, and readability. I hope the above tips help you start your professional career. Cheers!!\u003c/p\u003e\n","content":"If you have a CS background, then you are bound to have encounters with professional projects. Before starting one, you should keep a few things in mind; otherwise, working could be a bit difficult. Here are some tips for a jump start in your professional project development.Table of contents\u0026nbsp;  Knowing your stakeholders All IDEs are good IDEs Git is your friend Keeping only one copy of the project Knowing your project environment Checking the test cases Being aware of the culture Not being afraid In conclusion   \nKnowing your stakeholders Before starting the project, it is a good idea to talk with the stakeholders of this project. It can be a client, a product owner, or a team leader. Talking with them will help you understand the purpose of the project and what is your expected role.\nAll IDEs are good IDEs Choosing an IDE or text editor is essential, but there is no need to dwindle between IDEs considering which one is the best. Every IDE is good and has specific good things about them. But not one can have all the features. So choose which one is most suitable for your project.\nGit is your friend Version control is the next important thing you need to consider. Otherwise, you can\u0026rsquo;t access the source code. As a beginner, version control tools like Git can look complicated. But rest assured, it is a very sophisticated tool. Git is here to save your time and make your life easy. Knowing Git in detail will help you understand how to maintain the source code. Rather than using GUI-based tools, it is better to use the command line for Git, but in the beginning, it is unnecessary. A few basic things you might want to study are:\n Git fetch/reset Git pull Git push Git merge Git rebase Git conflict during pull or rebase Git flow. Git branch Git commit Git tag  Here are some helpful git commands:\n# Git fetch/reset git fetch origin git reset --hard origin/master # Git push git push origin master # Git rebase git rebase origin/master # Git branch git checkout -b develop # git add git add filename.py # Git commit git commit -m \u0026#34;new commit\u0026#34; # Git tag git tag -a v1.4 -m \u0026#34;my version 1.4\u0026#34; Keeping only one copy of the project It\u0026rsquo;s a wrong idea to keep multiple copies of the same project in your development machine. If you need multiple copies, use the Git branch for it. If you own multiple copies, it will become difficult for you to keep track of where you made your changes. Hence let Git take care of source changes. No need to do things manually.\nKnowing your project environment The next important thing is to set up the environment for running the project. It is necessary to run the project before starting working on it. Usually, there should be a document (or create the document if it is a new project) on how to set up the project. Many modern projects come with a Docker file, which already has the docker environment configured. In that case, use docker to set up your project.\nChecking the test cases Before building essential features, it is better to start with simple things like running test cases. If it is a new project, look into how to write tests for your project, and if possible, add some test cases. Running test cases or writing test cases will give you a glimpse of what the module is supposed to do and help you understand the purpose of the code.\nBeing aware of the culture By culture, I meant the language\u0026rsquo;s design guidelines, git branching strategies, framework structures, design patterns, etc. Each project is different, and the culture behind it could be different, and you should know them before you start to contribute. If you are writing a new project, better follow the philosophy of the framework and language you will use for development. Also, remember that in professional projects, it is essential to have better readability than efficiency. In most cases, we achieve faster performance through a better system architecture. For example, it is possible to achieve better performance using a cache system, load balancer, message broker, etc.\nNot being afraid Every great tool is like a double-edged sword; if you misuse it, it will cause you trouble. But do not be afraid of making mistakes. It is better to make mistakes and learn to use the tool properly now than later. You can seek help from anywhere. Luckily, the software community is beneficial. You can ask questions on Stack Overflow (do not worry about downvotes 😄), or create issues in the library\u0026rsquo;s repository (if it is open source).\nIn conclusion Coding in a professional project is different from academic or competitive programming. But this difference is significant, making the professional projects more focused on maintainability, longevity, and readability. I hope the above tips help you start your professional career. Cheers!!\n","description":"Things you should know before working on a professional project for the first time."},{"date_published":"2022-04-11T10:39:05+02:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 11, 2022","id":"https://ruddra.com/use-cuda-in-docker/","url":"https://ruddra.com/use-cuda-in-docker/","title":"Use NVIDIA Cuda in Docker for Data Science Projects","image":"https://ruddra.com/content/images/2022/04/gpu.jpg","tags":["Docker","NVIDIA"],"content_html":"\u003cp\u003eWhen I was working with data science project running in Docker, I found that working with huge data can be problematic. Even tools like \u003ca href=\"https://arrow.apache.org/docs/python/index.html\"\u003ePyArrow\u003c/a\u003e is not fast enough in Docker. But when I debugged the logs, I saw that if I could give it access to NVIDIA Cuda, then it would be much faster. In this article I will explain how you can add NVIDIA Cuda in Docker. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-cuda\"\u003eWhat is Cuda?\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#make-sure-to-have-gpu-drivers-installed\"\u003eMake sure to have GPU Drivers installed\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#add-to-docker\"\u003eAdd to Docker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#references\"\u003eReferences:\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-is-cuda\"\u003eWhat is Cuda?\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eCUDA is a parallel computing platform and application programming interface that allows software to use certain types of graphics processing unit for general purpose processing, an approach called general-purpose computing on GPUs. (from \u003ca href=\"https://en.wikipedia.org/wiki/CUDA\"\u003eWikipedia\u003c/a\u003e)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eBasically CUDA toolkit from NVIDIA will accelerate all GPU consuming apps. Hence the PyArrow performs better with CUDA enabled.\u003c/p\u003e\n\u003ch2 id=\"make-sure-to-have-gpu-drivers-installed\"\u003eMake sure to have GPU Drivers installed\u003c/h2\u003e\n\u003cp\u003eIn your machine, make sure you have the GPU drivers installed. You can check \u003ca href=\"https://github.com/NVIDIA/nvidia-docker/wiki/Frequently-Asked-Questions#how-do-i-install-the-nvidia-driver\"\u003ethis documentation\u003c/a\u003e on how to install drivers. Finally, check if the driver is installed by either terminal or powershell (in windows) by running the command \u003ccode\u003envidia-smi\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"657\" height=\"398\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 657 398'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2022/04/powershell_hub707d358dc725bcc33ba1d138e610dbf_80118_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2022/04/powershell_hub707d358dc725bcc33ba1d138e610dbf_80118_500x0_resize_q75_lanczos.jpg 500w,/content/images/2022/04/powershell_hub707d358dc725bcc33ba1d138e610dbf_80118_600x0_resize_q75_lanczos.jpg 600w'\n        alt='page' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2022/04/powershell.jpg\" width=\"657\" height=\"398\" alt='page'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"add-to-docker\"\u003eAdd to Docker\u003c/h2\u003e\n\u003cp\u003eI will put the Dockerfile code here, then put explanation for each step:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e nvidia/cuda:11.6.0-base-ubuntu20.04\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /app\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    apt install --no-install-recommends -y build-essential python3 python3-pip \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    apt clean \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e rm -rf /var/lib/apt/lists/*\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirements.txt .\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install --no-cache-dir --upgrade -r requirements.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e . .\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;whatever\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;you\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;want\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere are the explanation of the steps:\u003c/p\u003e\n\u003cp\u003eStep 1: We will be using the official Nvidia Cuda image based on Ubuntu.\nStep 2: Make \u003ccode\u003e/app\u003c/code\u003e as default directory.\nStep 3: We setup Python related and other necessary libraries, as well as add pip.\nStep 4: We copy the requirements to Docker.\nStep 5: Install requirements.\nStep 6: Copy the source from project directory to Docker.\nStep 7: Run the command to run your project, ie for django, it can be \u003ccode\u003e['python', 'manage.py', 'runserver']\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eThat is all, the steps above will allow you to use Cuda in your docker image. If you have any questions, feel free to ask them in comment section below.\u003c/p\u003e\n\u003ch2 id=\"references\"\u003eReferences:\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eNvidia documentation: \u003ca href=\"https://github.com/NVIDIA/nvidia-docker\"\u003ehttps://github.com/NVIDIA/nvidia-docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eHow to use NVIDIA GPU in docker: \u003ca href=\"https://www.cloudsavvyit.com/14942/how-to-use-an-nvidia-gpu-with-docker-containers/\"\u003ehttps://www.cloudsavvyit.com/14942/how-to-use-an-nvidia-gpu-with-docker-containers/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eHow to \u003cem\u003eproperly\u003c/em\u003e use the GPU in docker: \u003ca href=\"https://towardsdatascience.com/how-to-properly-use-the-gpu-within-a-docker-container-4c699c78c6d1\"\u003ehttps://towardsdatascience.com/how-to-properly-use-the-gpu-within-a-docker-container-4c699c78c6d1\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n","content":"When I was working with data science project running in Docker, I found that working with huge data can be problematic. Even tools like PyArrow is not fast enough in Docker. But when I debugged the logs, I saw that if I could give it access to NVIDIA Cuda, then it would be much faster. In this article I will explain how you can add NVIDIA Cuda in Docker. Table of contents\u0026nbsp;  What is Cuda? Make sure to have GPU Drivers installed Add to Docker Conclusion References:   \nWhat is Cuda?  CUDA is a parallel computing platform and application programming interface that allows software to use certain types of graphics processing unit for general purpose processing, an approach called general-purpose computing on GPUs. (from Wikipedia)\n Basically CUDA toolkit from NVIDIA will accelerate all GPU consuming apps. Hence the PyArrow performs better with CUDA enabled.\nMake sure to have GPU Drivers installed In your machine, make sure you have the GPU drivers installed. You can check this documentation on how to install drivers. Finally, check if the driver is installed by either terminal or powershell (in windows) by running the command nvidia-smi.\n   Add to Docker I will put the Dockerfile code here, then put explanation for each step:\nFROMnvidia/cuda:11.6.0-base-ubuntu20.04WORKDIR/appRUN apt update \u0026amp;\u0026amp; \\  apt install --no-install-recommends -y build-essential python3 python3-pip \u0026amp;\u0026amp; \\  apt clean \u0026amp;\u0026amp; rm -rf /var/lib/apt/lists/*COPY requirements.txt .RUN pip install --no-cache-dir --upgrade -r requirements.txtCOPY . .CMD [\u0026#34;whatever\u0026#34;, \u0026#34;you\u0026#34;, \u0026#34;want\u0026#34;]Here are the explanation of the steps:\nStep 1: We will be using the official Nvidia Cuda image based on Ubuntu. Step 2: Make /app as default directory. Step 3: We setup Python related and other necessary libraries, as well as add pip. Step 4: We copy the requirements to Docker. Step 5: Install requirements. Step 6: Copy the source from project directory to Docker. Step 7: Run the command to run your project, ie for django, it can be ['python', 'manage.py', 'runserver']\nConclusion That is all, the steps above will allow you to use Cuda in your docker image. If you have any questions, feel free to ask them in comment section below.\nReferences:  Nvidia documentation: https://github.com/NVIDIA/nvidia-docker How to use NVIDIA GPU in docker: https://www.cloudsavvyit.com/14942/how-to-use-an-nvidia-gpu-with-docker-containers/ How to properly use the GPU in docker: https://towardsdatascience.com/how-to-properly-use-the-gpu-within-a-docker-container-4c699c78c6d1  ","description":"Make ML process faster with the power of GPU inside Docker."},{"date_published":"2022-01-29T00:22:00+01:00","date_modified":"2022-07-28T22:03:00+02:00","date":"January 29, 2022","id":"https://ruddra.com/add-search-functionality-hugo/","url":"https://ruddra.com/add-search-functionality-hugo/","title":"Add Search Functionality in Hugo","image":"https://ruddra.com/content/images/2022/01/search.jpg","tags":["Hugo"],"content_html":"\u003cp\u003eAdding search functionality make your website more accessible and usable to the stakeholders. In this article, I am going to share on how you can add this in a static site generated by hugo.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#expose-json-output\"\u003eExpose JSON output\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-layout\"\u003eCreate layout\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#build-the-search-page\"\u003eBuild the search page\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#add-lunrjs-file\"\u003eAdd lunr.js file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#add-search-functionality\"\u003eAdd search functionality\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#add-html\"\u003eAdd HTML\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#add-javascript\"\u003eAdd JavaScript\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"expose-json-output\"\u003eExpose JSON output\u003c/h2\u003e\n\u003cp\u003eIn the first step, we need to expose the \u003ca href=\"https://gohugo.io/templates/output-formats/#configure-output-formats\"\u003ejson output\u003c/a\u003e for the files. For that, we need to change in config.yaml:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eoutputs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ehome\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003eHTML\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003eRSS\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003eJSON\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# add this change\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSame configuration for config.toml:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eoutputs\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ehome\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;HTML\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;JSON\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RSS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen create a file named \u003ccode\u003eindex.json\u003c/code\u003e at the root of your project and add the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;items\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e \u003cspan class=\"err\"\u003erange\u003c/span\u003e \u003cspan class=\"err\"\u003e$.Site.RegularPages\u003c/span\u003e \u003cspan class=\"err\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;{{ .Permalink }}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;{{ .Title }}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;content\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e \u003cspan class=\"err\"\u003e.Content\u003c/span\u003e \u003cspan class=\"err\"\u003e|\u003c/span\u003e \u003cspan class=\"err\"\u003eplainify\u003c/span\u003e \u003cspan class=\"err\"\u003e|\u003c/span\u003e \u003cspan class=\"err\"\u003ejsonify\u003c/span\u003e \u003cspan class=\"p\"\u003e}},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e \u003cspan class=\"err\"\u003eend\u003c/span\u003e \u003cspan class=\"err\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen if you run the server, you should be able to access \u003ccode\u003elocalhost:1313/index.json\u003c/code\u003e file and it should return a json file containing the url, title, and contents of your posts. It should look something like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"743\" height=\"687\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 743 687'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2022/01/json-short_hu04e014c1b59aa08d6b450455946ee36e_88957_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2022/01/json-short_hu04e014c1b59aa08d6b450455946ee36e_88957_500x0_resize_q75_lanczos.jpg 500w,/content/images/2022/01/json-short_hu04e014c1b59aa08d6b450455946ee36e_88957_600x0_resize_q75_lanczos.jpg 600w,/content/images/2022/01/json-short_hu04e014c1b59aa08d6b450455946ee36e_88957_720x0_resize_q75_lanczos.jpg 720w'\n        alt='json output' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2022/01/json-short.jpg\" width=\"743\" height=\"687\" alt='json output'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"create-layout\"\u003eCreate layout\u003c/h2\u003e\n\u003cp\u003eThe next step is to add a page where we will be showing the search content. For that we need to make two changes.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a \u003ccode\u003econtent/search\u003c/code\u003e folder and add a \u003ccode\u003e_index.md\u003c/code\u003e file in \u003ccode\u003econtent/search\u003c/code\u003e folder.\u003c/li\u003e\n\u003cli\u003eGo to the \u003ccode\u003elayouts\u003c/code\u003e folder and create \u003ccode\u003elayouts/section/search.html\u003c/code\u003e file.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFolder structure should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eProject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── contents\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── content\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── search\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│       └── _index.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── layouts\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   ├── partials\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── section\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│       └── search.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── static\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── themes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── index.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── config.toml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"build-the-search-page\"\u003eBuild the search page\u003c/h2\u003e\n\u003cp\u003eNow let us build the search page. For that we can use the same layout structure as your theme\u0026rsquo;s any \u003ccode\u003esingle.html\u003c/code\u003efile at the \u003ccode\u003elayouts/_default\u003c/code\u003e folder. For example, if you use \u003ca href=\"https://github.com/theNewDynamic/gohugo-theme-ananke/\"\u003eAnake theme\u003c/a\u003e, you can use it\u0026rsquo;s \u003ca href=\"https://github.com/theNewDynamic/gohugo-theme-ananke/blob/master/layouts/_default/single.html\"\u003esingle.html\u003c/a\u003e file as template for rendering the page. Here is an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ define \u0026#34;main\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{end}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eApart from that, update the \u003ccode\u003e_index.md\u003c/code\u003e file mentioned above with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+++\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etitle = \u0026#34;Search\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edescription = \u0026#34;This is the search page for this website.\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edate =\u0026#34;2022-01-28T00:00:00+00:00\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e+++\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we can go to \u003ccode\u003elocalhost:1313/search\u003c/code\u003e page, where we should be able to see a blank page.\u003c/p\u003e\n\u003ch2 id=\"add-lunrjs-file\"\u003eAdd lunr.js file\u003c/h2\u003e\n\u003cp\u003eNow, you need to add the lunr.js file to your project. Add it by using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.0.2/lunr.js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"add-search-functionality\"\u003eAdd search functionality\u003c/h2\u003e\n\u003ch3 id=\"add-html\"\u003eAdd HTML\u003c/h3\u003e\n\u003cp\u003eNow our structure has been placed. We can build the search functionality on top of it. First we need to add an input field to enter the search query. Let us do that in \u003ccode\u003esearch.html\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ define \u0026#34;main\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;container content\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003esection\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;post-title\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSearch:\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;search-input\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eplaceholder\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eoninput\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;showSearchResults()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebr\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;list\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- this list is for rendering the results --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003esection\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{end}}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"add-javascript\"\u003eAdd JavaScript\u003c/h3\u003e\n\u003cp\u003eIn the code, you can see that we wrote \u003ccode\u003eoninput=\u0026quot;showSearchResults()\u003c/code\u003e, which means on each input, the \u003ccode\u003eshowSearchResults()\u003c/code\u003e function will be executed. Let\u0026rsquo;s write that function in a separate javascript file, for example like in \u003ccode\u003estatic/js/search.js\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esearchElem\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;search-input\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eloadSearch\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// call the index.json file from server by http get request\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003exhr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eXMLHttpRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eonreadystatechange\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereadyState\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eJSON\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponseText\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"nx\"\u003eposts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// load json data\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponseText\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;../index.json\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003exhr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eloadSearch\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// call loadsearch to load the json file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eshowSearchResults\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003esearchElem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// get the value from input\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003esearchString\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/[^\\w\\s]/gi\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// clear white spaces\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003etarget\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;list\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// target the ul list to render the results\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003epostsByTitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e// map lunr search index to your articles\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecurr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eacc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// build lunr index file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003elunr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;content\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edoc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edoc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// search in lunr index\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esearchString\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nx\"\u003esearchString\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ematches\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003esearch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003esearchString\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ematchPosts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003ematches\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eforEach\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nx\"\u003ematchPosts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epostsByTitle\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ematchPosts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// match found with input text and lunr index\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ematchPosts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003eundefined\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"sb\"\u003e`\u0026lt;li\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sb\"\u003e                        \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edate\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"sb\"\u003e -\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sb\"\u003e                        \u0026lt;a href=\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"sb\"\u003e\u0026#34;\u0026gt; \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etitle\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"sb\"\u003e\u0026lt;/a\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sb\"\u003e                        \u0026lt;/li\u0026gt;`\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}).\u003c/span\u003e\u003cspan class=\"nx\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e// if no results found, then render a general message\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sb\"\u003e`\u0026lt;br\u0026gt;\u0026lt;h2 style=\u0026#34;text-align:center\u0026#34;\u0026gt;No search results found\u0026lt;/h2\u0026gt;`\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003etarget\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003einnerHTML\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow let us add this into the html of hugo (in footer file preferably):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/js/search.js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCool, now our search functionality should be working and the output should look like this \u003ccode\u003elocalhost:1313/search/\u003c/code\u003e uri.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"808\" height=\"255\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 808 255'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2022/01/hugo-search-output_hu18224424040ce7f85447e6aaa9a01637_57220_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2022/01/hugo-search-output_hu18224424040ce7f85447e6aaa9a01637_57220_500x0_resize_q75_lanczos.jpg 500w,/content/images/2022/01/hugo-search-output_hu18224424040ce7f85447e6aaa9a01637_57220_600x0_resize_q75_lanczos.jpg 600w,/content/images/2022/01/hugo-search-output_hu18224424040ce7f85447e6aaa9a01637_57220_720x0_resize_q75_lanczos.jpg 720w'\n        alt='hugo search output' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2022/01/hugo-search-output.jpg\" width=\"808\" height=\"255\" alt='hugo search output'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eWith help of Lunr and Hugo\u0026rsquo;s own functionality, we have added search functionality in the static site. Hope you like it and if you have any comments, please share below.\u003c/p\u003e\n","content":"Adding search functionality make your website more accessible and usable to the stakeholders. In this article, I am going to share on how you can add this in a static site generated by hugo.Table of contents\u0026nbsp;  Expose JSON output Create layout Build the search page Add lunr.js file Add search functionality  Add HTML Add JavaScript   In conclusion   \nExpose JSON output In the first step, we need to expose the json output for the files. For that, we need to change in config.yaml:\noutputs:home:- HTML- RSS- JSON# add this changeSame configuration for config.toml:\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;, \u0026#34;RSS\u0026#34;] Then create a file named index.json at the root of your project and add the following code:\n{ \u0026#34;items\u0026#34; : [ {{ range $.Site.RegularPages -}} { \u0026#34;url\u0026#34; : \u0026#34;{{ .Permalink }}\u0026#34;, \u0026#34;title\u0026#34; : \u0026#34;{{ .Title }}\u0026#34;, \u0026#34;content\u0026#34;: {{ .Content | plainify | jsonify }}, {{ end -}} ] } Then if you run the server, you should be able to access localhost:1313/index.json file and it should return a json file containing the url, title, and contents of your posts. It should look something like this:\n   Create layout The next step is to add a page where we will be showing the search content. For that we need to make two changes.\n Create a content/search folder and add a _index.md file in content/search folder. Go to the layouts folder and create layouts/section/search.html file.  Folder structure should look like this:\nProject ├── contents ├── content │ └── search │ └── _index.md ├── layouts │ ├── partials │ └── section │ └── search.html ├── static ├── themes ├── index.json └── config.toml Build the search page Now let us build the search page. For that we can use the same layout structure as your theme\u0026rsquo;s any single.htmlfile at the layouts/_default folder. For example, if you use Anake theme, you can use it\u0026rsquo;s single.html file as template for rendering the page. Here is an example:\n{{ define \u0026#34;main\u0026#34; }} {{end}} Apart from that, update the _index.md file mentioned above with the following code:\n+++ title = \u0026#34;Search\u0026#34; description = \u0026#34;This is the search page for this website.\u0026#34; date =\u0026#34;2022-01-28T00:00:00+00:00\u0026#34; +++ Now we can go to localhost:1313/search page, where we should be able to see a blank page.\nAdd lunr.js file Now, you need to add the lunr.js file to your project. Add it by using:\n\u0026lt;body\u0026gt; ... \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/lunr.js/2.0.2/lunr.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; Add search functionality Add HTML Now our structure has been placed. We can build the search functionality on top of it. First we need to add an input field to enter the search query. Let us do that in search.html file:\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;div class=\u0026#34;container content\u0026#34;\u0026gt; \u0026lt;section class=\u0026#34;post\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;post-title\u0026#34;\u0026gt;Search:\u0026lt;/h1\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;search-input\u0026#34; placeholder=\u0026#34;\u0026#34; oninput=\u0026#34;showSearchResults()\u0026#34;\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;ul id=\u0026#34;list\u0026#34;\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;!-- this list is for rendering the results --\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/div\u0026gt; {{end}} Add JavaScript In the code, you can see that we wrote oninput=\u0026quot;showSearchResults(), which means on each input, the showSearchResults() function will be executed. Let\u0026rsquo;s write that function in a separate javascript file, for example like in static/js/search.js:\nvar searchElem = document.getElementById(\u0026#34;search-input\u0026#34;); var posts; function loadSearch() { // call the index.json file from server by http get request  var xhr = new XMLHttpRequest(); xhr.onreadystatechange = function () { if (xhr.readyState === 4) { if (xhr.status === 200) { var data = JSON.parse(xhr.responseText); if (data) { posts = data.items; // load json data  } } else { console.log(xhr.responseText); } } }; xhr.open(\u0026#39;GET\u0026#39;, \u0026#34;../index.json\u0026#34;); xhr.send(); } loadSearch(); // call loadsearch to load the json file function showSearchResults() { var query = searchElem.value || \u0026#39;\u0026#39;; // get the value from input  var searchString = query.replace(/[^\\w\\s]/gi, \u0026#39;\u0026#39;); // clear white spaces  var target = document.getElementById(\u0026#39;list\u0026#39;); // target the ul list to render the results  var postsByTitle = posts.reduce((acc, curr) =\u0026gt; { // map lunr search index to your articles  acc[curr.title] = curr; return acc; }, {} ); // build lunr index file  var index = lunr(function () { this.ref(\u0026#39;title\u0026#39;) this.field(\u0026#39;content\u0026#39;) posts.forEach(function (doc) { this.add(doc) }, this) }); // search in lunr index  if (searchString \u0026amp;\u0026amp; searchString != \u0026#39;\u0026#39;) { var matches = index.search(searchString); var matchPosts = []; matches.forEach((m) =\u0026gt; { matchPosts.push(postsByTitle[m.ref]); }); if (matchPosts.length \u0026gt; 0) { // match found with input text and lunr index  target.innerHTML = matchPosts.map(function (p) { if (p != undefined) { return `\u0026lt;li\u0026gt; ${p.date}- \u0026lt;a href=\u0026#34;${p.url}\u0026#34;\u0026gt; ${p.title}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt;`; } }).join(\u0026#39;\u0026#39;); } else { // if no results found, then render a general message  target.innerHTML = `\u0026lt;br\u0026gt;\u0026lt;h2 style=\u0026#34;text-align:center\u0026#34;\u0026gt;No search results found\u0026lt;/h2\u0026gt;`; }; } else { target.innerHTML = \u0026#39;\u0026#39; } }; Now let us add this into the html of hugo (in footer file preferably):\n\u0026lt;script src=\u0026#34;/js/search.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; Cool, now our search functionality should be working and the output should look like this localhost:1313/search/ uri.\n   In conclusion With help of Lunr and Hugo\u0026rsquo;s own functionality, we have added search functionality in the static site. Hope you like it and if you have any comments, please share below.\n","description":"A simple step by step guide to build search functionality in Hugo using Lunr and a few lines of JavaScript."},{"date_published":"2021-07-18T21:00:57+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"July 18, 2021","id":"https://ruddra.com/cloudflare-cache-google-fonts/","url":"https://ruddra.com/cloudflare-cache-google-fonts/","title":"Rollout your Google fonts faster with Cloudflare Cache","image":"https://ruddra.com/content/images/2021/07/cloud.jpg","tags":["Cloudflare","DevOps"],"content_html":"\u003cp\u003eIf you are already using Cloudflare, you know that Cloudflare caches fonts (and other contents). But it won’t work if you are using Google font’s CDN. Cloudflare has \u003ca href=\"https://blog.cloudflare.com/fast-google-fonts-with-cloudflare-workers/\"\u003ea detailed guide\u003c/a\u003e on how to improve Google fonts performance, but it heavily relies on workers, which might cost a lot of money if your website has a lot of users.\u003c/p\u003e\n\u003cp\u003eSo, in this article, we will see two ways to use Cloudflare Cache to serve fonts faster and without any extra costs.\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#use-cloudflare-cache-cdn\"\u003eUse Cloudflare Cache (CDN)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-cloudflare-workers-serverless\"\u003eUse Cloudflare Workers (Serverless)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn Conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"use-cloudflare-cache-cdn\"\u003eUse Cloudflare Cache (CDN)\u003c/h2\u003e\n\u003cp\u003eCloudflare provides a caching mechanism through their \u003ca href=\"https://support.cloudflare.com/hc/en-us/articles/200172516-Understanding-Cloudflare-s-CDN\"\u003eCDN\u003c/a\u003e. But you can\u0026rsquo;t upload contents directly to that CDN, rather the CDN will cache certain files (like images, pdfs, fonts etc.) automatically if they are available in your server. For storing \u003cstrong\u003eGoogle Fonts\u003c/strong\u003e in your local server, you can follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGenerate the CDN links from Google Fonts. Click on any of the font from \u003ca href=\"https://fonts.google.com/\"\u003eGoogle Font\u003c/a\u003e page, click on which styles and google will generate the link. For example, for \u003ca href=\"https://fonts.google.com/specimen/Roboto\"\u003eRoboto font\u003c/a\u003e regular 400 and bold 700, the link looks like this:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;link \u003cspan class=\"nv\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;preconnect\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://fonts.googleapis.com\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;link \u003cspan class=\"nv\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;preconnect\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://fonts.gstatic.com\u0026#34;\u003c/span\u003e crossorigin\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt;link \u003cspan class=\"nv\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://fonts.googleapis.com/css2?family=Roboto:wght@400;700\u0026amp;display=swap\u0026#34;\u003c/span\u003e \u003cspan class=\"nv\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;stylesheet\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eThen go to the link \u003ccode\u003ehttps://fonts.googleapis.com/css2?family=Roboto:wght@400;700\u003c/code\u003e and it will return a css response. Copy the urls for \u003ccode\u003elatin\u003c/code\u003e font faces:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-css\" data-lang=\"css\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e/* latin */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"k\"\u003efont-face\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-family\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Roboto\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-style\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003enormal\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-weight\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003e400\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nt\"\u003ehttps\u003c/span\u003e\u003cspan class=\"o\"\u003e://\u003c/span\u003e\u003cspan class=\"nt\"\u003efonts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003egstatic\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003ecom\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003eroboto\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003ev27\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003eKFOmCnqEu92Fr1Mu4mxKKTU1Kg\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003ewoff2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;woff2\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003eunicode-range\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0000-00FF\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0131\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0152-0153\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02BB-02BC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02C6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02DA\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02DC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2000-206F\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2074\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e20AC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2122\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2191\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2193\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2212\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2215\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003eFEFF\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003eFFFD\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e/* latin */\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"k\"\u003efont-face\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-family\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Roboto\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-style\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003enormal\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003efont-weight\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003e700\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nt\"\u003ehttps\u003c/span\u003e\u003cspan class=\"o\"\u003e://\u003c/span\u003e\u003cspan class=\"nt\"\u003efonts\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003egstatic\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003ecom\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003eroboto\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003ev27\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nt\"\u003eKFOlCnqEu92Fr1MmWUlfBBc4AMP6lQ\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nc\"\u003ewoff2\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;woff2\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003eunicode-range\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0000-00FF\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0131\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e0152-0153\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02BB-02BC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02C6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02DA\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e02DC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2000-206F\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2074\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e20AC\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2122\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2191\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2193\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2212\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003e2215\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003eFEFF\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nt\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nt\"\u003eFFFD\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003e\n\u003cp\u003eNow go to those URLs, and they will return those woff2 files needed for rendering your page. Rename them for readability and store them on your server.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNow, from \u003ccode\u003ecaching/configure\u003c/code\u003e settings, enable \u003ca href=\"https://support.cloudflare.com/hc/en-us/articles/200168256\"\u003ecache level \u003cstrong\u003estandard\u003c/strong\u003e\u003c/a\u003e, then the Cloudflare CDN will automatically cache those fonts, and you will see response time come down to 100ms.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThis approach will work for any custom fonts as long as you have them in your server.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"use-cloudflare-workers-serverless\"\u003eUse Cloudflare Workers (Serverless)\u003c/h2\u003e\n\u003cp\u003eIf you don’t want to store the font files in the server, an alternative is to use Cloudflare workers, where you will use the cache API. We will be proxying requests from our domain to Google Font. Then we will store the responses in the cache. Let’s see the steps for setting up the worker:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to your worker settings from \u003ca href=\"https://dash.cloudflare.com\"\u003eyour dashboard\u003c/a\u003e and click on the “Manage Workers” button to go to the worker manage page.\u003c/li\u003e\n\u003cli\u003eThen create the worker by clicking on the “Create Worker” button.\u003c/li\u003e\n\u003cli\u003eCopy paste the following code (the original source code with explanation is available on \u003ca href=\"https://github.com/ruddra/cloudflare-google-fonts-cache\"\u003eGitHub\u003c/a\u003e):\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003edomain\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/domain.com/fonts/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecssHostName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;fonts.googleapis.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003efontHostName\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;fonts.gstatic.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003easync\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eURL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecacheKey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etoString\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecache\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecaches\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003ecache\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecacheKey\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epathname\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eincludes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/s/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocessFontResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocessCssResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ewaitUntil\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecache\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ecacheKey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eclone\u003c/span\u003e\u003cspan class=\"p\"\u003e()));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;fetch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erespondWith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003easync\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocessCssResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecssHostName\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etoString\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eoriginalBody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003emodified\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eoriginalBody\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplaceAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003efontHostName\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edomain\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;Cache-Control\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;max-age=31536000, s-maxage=31536000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emodified\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estatusText\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003estatusText\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003easync\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eprocessFontResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehostname\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003efontHostName\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003eawait\u003c/span\u003e \u003cspan class=\"nx\"\u003efetch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etoString\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"4\"\u003e\n\u003cli\u003e\n\u003cp\u003eIn this code, we will accept any request and replace the hostname with Google font’s one. Then we will send the request to Google and store the response in cache, then return it to the client. Then we need to save it. Also, update the \u003ccode\u003edomain\u003c/code\u003e variable to point to your own domain.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e(Optional) If you have a different CDN for serving the fonts, then updated the code for \u003ccode\u003ecssHostName\u003c/code\u003e and \u003ccode\u003efontHostName\u003c/code\u003e to point to the CDN. You can mask the CDN with your own URL with this worker and add prevention methods (like checking the origin of the request) so that the URL can\u0026rsquo;t be called from outside of your own domain.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe next step here is to add a route to the worker we have developed. Go to your worker page and click on add route.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSuppose your domain serves font at path \u003ccode\u003e/fonts,\u003c/code\u003e for example like this \u003ccode\u003ehttps://domain.com/fonts/css2?family=Roboto:wght@400;700\u003c/code\u003e (like google fonts), then you can add the worker to that path like this:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e*.domain.com/fonts/*\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"8\"\u003e\n\u003cli\u003eFinally, add these lines in the header for loading the fonts:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://domain.com/fonts/css2?family=Roboto:wght@400;700\u0026amp;display=swap\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;stylesheet\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this approach, the worker cache will store the fonts, and it won’t call Google CDN all the time for loading fonts. Also, there won’t be many requests to the worker as we have added \u003ccode\u003emax-age=31536000, s-maxage=31536000\u003c/code\u003e (1 year); hence browser will cache those calls.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn Conclusion\u003c/h2\u003e\n\u003cp\u003eIn this article, we saw two different ways to serve Google fonts in your website. I prefer the first approach because it is consistent and easier to implement. If you have any opinions, please share via the comment section below. Cheers!!\u003c/p\u003e\n","content":"If you are already using Cloudflare, you know that Cloudflare caches fonts (and other contents). But it won’t work if you are using Google font’s CDN. Cloudflare has a detailed guide on how to improve Google fonts performance, but it heavily relies on workers, which might cost a lot of money if your website has a lot of users.\nSo, in this article, we will see two ways to use Cloudflare Cache to serve fonts faster and without any extra costs. Table of contents\u0026nbsp;  Use Cloudflare Cache (CDN) Use Cloudflare Workers (Serverless) In Conclusion   \nUse Cloudflare Cache (CDN) Cloudflare provides a caching mechanism through their CDN. But you can\u0026rsquo;t upload contents directly to that CDN, rather the CDN will cache certain files (like images, pdfs, fonts etc.) automatically if they are available in your server. For storing Google Fonts in your local server, you can follow these steps:\n Generate the CDN links from Google Fonts. Click on any of the font from Google Font page, click on which styles and google will generate the link. For example, for Roboto font regular 400 and bold 700, the link looks like this:  \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Roboto:wght@400;700\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; Then go to the link https://fonts.googleapis.com/css2?family=Roboto:wght@400;700 and it will return a css response. Copy the urls for latin font faces:  /* latin */ @font-face { font-family: \u0026#34;Roboto\u0026#34;; font-style: normal; font-weight: 400; src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu4mxKKTU1Kg.woff2) format(\u0026#34;woff2\u0026#34;); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; } /* latin */ @font-face { font-family: \u0026#34;Roboto\u0026#34;; font-style: normal; font-weight: 700; src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfBBc4AMP6lQ.woff2) format(\u0026#34;woff2\u0026#34;); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }  Now go to those URLs, and they will return those woff2 files needed for rendering your page. Rename them for readability and store them on your server.\n  Now, from caching/configure settings, enable cache level standard, then the Cloudflare CDN will automatically cache those fonts, and you will see response time come down to 100ms.\n  This approach will work for any custom fonts as long as you have them in your server.\n  Use Cloudflare Workers (Serverless) If you don’t want to store the font files in the server, an alternative is to use Cloudflare workers, where you will use the cache API. We will be proxying requests from our domain to Google Font. Then we will store the responses in the cache. Let’s see the steps for setting up the worker:\n Go to your worker settings from your dashboard and click on the “Manage Workers” button to go to the worker manage page. Then create the worker by clicking on the “Create Worker” button. Copy paste the following code (the original source code with explanation is available on GitHub):  const domain = \u0026#34;/domain.com/fonts/\u0026#34;; const cssHostName = \u0026#34;fonts.googleapis.com\u0026#34;; const fontHostName = \u0026#34;fonts.gstatic.com\u0026#34;; async function handleRequest(event) { const request = event.request; const url = new URL(request.url); const cacheKey = new Request(url.toString(), request); const cache = caches.default; let response = await cache.match(cacheKey); if (!response) { if (url.pathname.includes(\u0026#34;/s/\u0026#34;)) { response = await processFontResponse(url, request, response); } else { response = await processCssResponse(url, request, response); } event.waitUntil(cache.put(cacheKey, response.clone())); } return response; } addEventListener(\u0026#34;fetch\u0026#34;, (event) =\u0026gt; { return event.respondWith(handleRequest(event)); }); async function processCssResponse(url, request, response) { url.hostname = cssHostName; response = await fetch(url.toString(), request); const originalBody = await response.text(); const modified = originalBody.replaceAll(fontHostName, domain); response.headers.append( \u0026#34;Cache-Control\u0026#34;, \u0026#34;max-age=31536000, s-maxage=31536000\u0026#34; ); response = new Response(modified, { status: response.status, statusText: response.statusText, headers: response.headers, }); return response; } async function processFontResponse(url, request, response) { url.hostname = fontHostName; response = await fetch(url.toString(), request); return response; }  In this code, we will accept any request and replace the hostname with Google font’s one. Then we will send the request to Google and store the response in cache, then return it to the client. Then we need to save it. Also, update the domain variable to point to your own domain.\n  (Optional) If you have a different CDN for serving the fonts, then updated the code for cssHostName and fontHostName to point to the CDN. You can mask the CDN with your own URL with this worker and add prevention methods (like checking the origin of the request) so that the URL can\u0026rsquo;t be called from outside of your own domain.\n  The next step here is to add a route to the worker we have developed. Go to your worker page and click on add route.\n  Suppose your domain serves font at path /fonts, for example like this https://domain.com/fonts/css2?family=Roboto:wght@400;700 (like google fonts), then you can add the worker to that path like this:\n  *.domain.com/fonts/* Finally, add these lines in the header for loading the fonts:  \u0026lt;link href=\u0026#34;https://domain.com/fonts/css2?family=Roboto:wght@400;700\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34; /\u0026gt; In this approach, the worker cache will store the fonts, and it won’t call Google CDN all the time for loading fonts. Also, there won’t be many requests to the worker as we have added max-age=31536000, s-maxage=31536000 (1 year); hence browser will cache those calls.\nIn Conclusion In this article, we saw two different ways to serve Google fonts in your website. I prefer the first approach because it is consistent and easier to implement. If you have any opinions, please share via the comment section below. Cheers!!\n","description":"Serve your favourite Google fonts faster with Cloudflare; it even works with custom fonts."},{"date_published":"2021-05-31T22:22:07+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"May 31, 2021","id":"https://ruddra.com/alacritty-fish-tmux-vim/","url":"https://ruddra.com/alacritty-fish-tmux-vim/","title":"Create Workflow using Alacritty, Fish Shell, tmux, and Vim","image":"https://ruddra.com/content/images/2021/05/workflow.jpg","tags":["Vim","IDE"],"content_html":"\u003cp\u003eEven if you use Vim, it does not mean that you have to code in a plain, stuttering, and boring terminal. In this article, we are going to see how to set up a beautiful interface for coding, which is highly configurable yet highly automated. Without further aduo, let\u0026rsquo;s go!! \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#alacritty\"\u003eAlacritty\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#fish-shell\"\u003eFish Shell\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#tmux\"\u003etmux\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#vim\"\u003eVim\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#save-configuration\"\u003eSave configuration\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"alacritty\"\u003eAlacritty\u003c/h2\u003e\n\u003cp\u003eAlacritty is a GPU accelerated terminal powered by OpenGL. It renders font nicely and being GPU accelerated makes this terminal even faster. Before using Alacritty, I used the MacOS terminal and items2. The MacOS Terminal does not render 256 color palette. On the other hand, iterm2 had issues with scrolling. I could see history in alternate mode and see alternate screens in scrolling back. Moreover, the coding experience was a bit sluggish and font rendering was not sharp enough for me, even with antialiasing. Thus I started using Alacritty. Installation instruction is available in their \u003ca href=\"https://github.com/alacritty/alacritty\"\u003erepository\u003c/a\u003e. Here is my configuration for development:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edynamic_padding\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003estartup_mode\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eMaximized\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edecorations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etransparent\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epadding\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e25\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enormal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efamily\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOperatorMono Font\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eLight\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebold\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efamily\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOperatorMono Font\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBook\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eitalic\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efamily\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOperatorMono Font\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eLight Italic\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebold_italic\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efamily\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOperatorMono Font\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBook Italic\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e18.0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eoffset\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eglyph_offset\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003euse_thin_strokes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# for tmux and fish shell. will discuss it later\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis configuration gives a clutter-free look to the terminal:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1477\" height=\"791\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1477 791'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/05/terminal_hu5d4d4af13a53f9dee6df2227e73445ae_229834_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/05/terminal_hu5d4d4af13a53f9dee6df2227e73445ae_229834_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/05/terminal_hu5d4d4af13a53f9dee6df2227e73445ae_229834_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/05/terminal_hu5d4d4af13a53f9dee6df2227e73445ae_229834_720x0_resize_q75_lanczos.jpg 720w'\n        alt='terminal' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/05/terminal.jpg\" width=\"1477\" height=\"791\" alt='terminal'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThe full configuration can be found in this \u003ca href=\"https://gist.github.com/ruddra/900e48cb65645ccfcf57545c7e192972\"\u003egist file\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"fish-shell\"\u003eFish Shell\u003c/h2\u003e\n\u003cp\u003eOut of the box, \u003ca href=\"https://fishshell.com\"\u003eFish Shell\u003c/a\u003e has an inline auto-complete suggestion, 100000 line history, syntax highlight, copy-paste from X clipboard(not primary, useful for vim), and so on. You will need a package manager. I use \u003ca href=\"https://github.com/jorgebucaran/fisher\"\u003eFisher\u003c/a\u003e for that, not Oh My Fish. To make it look nice, you can use themes like tide, bobthefish, starship, etc. Optional: I use Fish Shell only in Alacritty, other terminals still use ZSH. I have already shared the configuration about alacritty, now just add the following code to use fish shell.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eshell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprogram\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/usr/local/bin/fish\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAt \u003ccode\u003eshell\u0026gt;program\u003c/code\u003e path, I am putting the Fish Shell executable file. Then Alacritty automatically runs this program whenever it starts up.\u003c/p\u003e\n\u003cp\u003eAfter using ZSH for more than 5 years, I have moved on to Fish Shell. I like it mostly because of inline auto-complete suggestions, a nice theme and functions. The first two features are also available in ZSH, but I wanted to load some scripts on-demand basis, not always. So I wrote some functions inside \u003ccode\u003e~/.config/fish/functions/\u003c/code\u003e folder, and I utilized tmux to load those functions whenever I want to create a session for a project. Will discuss more about how to use tmux in next section.\u003c/p\u003e\n\u003ch2 id=\"tmux\"\u003etmux\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/tmux/tmux\"\u003etmux\u003c/a\u003e is a terminal multiplexer. It lets you use multiple applications in one terminal, attach detach programs to the session while preserving session. tmux is a server, that is why if you close your terminal, you can resume back to where you left off using tmux. I prefer tmux because I can create sessions for each application along with additional windows, where I usually run the application. These scripts are built using Fish Shell. Here is an example:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eI am creating a Fish Shell function, which is saved in \u003ccode\u003e~/.config/fish/functions/develop.fish\u003c/code\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#fish shell configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e develop\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    tmux -neww session_name: -n window_name -d\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eupdating \u003ccode\u003e~/.tmux.config\u003c/code\u003e file to add a keybinding, so that I can load the session from tmux:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebind-key -r l run-shell \u003cspan class=\"s2\"\u003e\u0026#34;develop\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eNow restart the tmux server by \u003ccode\u003etmux kill-server\u003c/code\u003e and run tmux again by entering \u003ccode\u003etmux\u003c/code\u003e command in terminal. Now press \u003cstrong\u003ectrl-b-l\u003c/strong\u003e, it will automatically create a session with a window attached to it.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBy the way, if you add this in the Alacritty configuration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eshell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprogram\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/usr/local/bin/fish\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- -\u003cspan class=\"l\"\u003el\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- -\u003cspan class=\"l\"\u003ec\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;tmux attach || tmux\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen tmux will automatically started whenever you start Alacritty. Here you will see I am sending arguments \u003ccode\u003etmux attach || tmux\u003c/code\u003e in \u003ccode\u003eshell\u003c/code\u003e section of the yml file. That means, it will automatically create a tmux server, or attach to an existing session.\u003c/p\u003e\n\u003ch2 id=\"vim\"\u003eVim\u003c/h2\u003e\n\u003cp\u003eNow it is time to use Vim or Neo Vim inside tmux session. The existing \u003ccode\u003edevelop.fish\u003c/code\u003e script from the previous section can be used, where you can send some keys to a tmux window, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e develop\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    tmux -neww session_name: -n window_name -d\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    tmux send-key -t session_name:window_name \u003cspan class=\"s1\"\u003e\u0026#39;vim /path/to/project\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen if you kill and start tmux server again, press \u003ccode\u003ectrl-a-l\u003c/code\u003e, it will not just open a tmux session, it will also start the vim at the project path. How cool is that!! Now with only three keystrokes, you can start your project 😄.\u003c/p\u003e\n\u003ch2 id=\"save-configuration\"\u003eSave configuration\u003c/h2\u003e\n\u003cp\u003eAll the configurations are done and now it is time for stroing them. As many applications use \u003ccode\u003e~/.config\u003c/code\u003e folder, you can just use Git to store that folder in a repository. If you use Neo Vim, then it will store the configurations in \u003ccode\u003e~/.config/nvim\u003c/code\u003e folder (if you have not configured otherwise). Alacritty uses \u003ccode\u003e~/.config/alacritty.yml\u003c/code\u003e file as default configuration. Fish Shell the configurations are stored in \u003ccode\u003e~/.config/fish\u003c/code\u003e folder. But tmux uses \u003ccode\u003e~/.tmux.config\u003c/code\u003e file for loading its configuration. But that is fine, because you can just create a file named \u003ccode\u003e~/.config/.tmux.config\u003c/code\u003e, and source it from there. Like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esource-file ~/.config/.tmux.conf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThe combination of Alacritty, Fish Shell/Oh My ZSH, tmux, and Vim gives a better experince in coding. I hope this article helps you to improve your workflow by using these tools. Thank you for reading. Cheers!!\u003c/p\u003e\n","content":"Even if you use Vim, it does not mean that you have to code in a plain, stuttering, and boring terminal. In this article, we are going to see how to set up a beautiful interface for coding, which is highly configurable yet highly automated. Without further aduo, let\u0026rsquo;s go!! Table of contents\u0026nbsp;  Alacritty Fish Shell tmux Vim Save configuration In conclusion   \nAlacritty Alacritty is a GPU accelerated terminal powered by OpenGL. It renders font nicely and being GPU accelerated makes this terminal even faster. Before using Alacritty, I used the MacOS terminal and items2. The MacOS Terminal does not render 256 color palette. On the other hand, iterm2 had issues with scrolling. I could see history in alternate mode and see alternate screens in scrolling back. Moreover, the coding experience was a bit sluggish and font rendering was not sharp enough for me, even with antialiasing. Thus I started using Alacritty. Installation instruction is available in their repository. Here is my configuration for development:\nwindow:dynamic_padding:falsestartup_mode:Maximizeddecorations:transparentpadding:x:0y:25font:normal:family:OperatorMono Fontstyle:Lightbold:family:OperatorMono Fontstyle:Bookitalic:family:OperatorMono Fontstyle:Light Italicbold_italic:family:OperatorMono Fontstyle:Book Italicsize:18.0offset:x:0y:0glyph_offset:x:0y:0use_thin_strokes:true# for tmux and fish shell. will discuss it laterThis configuration gives a clutter-free look to the terminal:\n   The full configuration can be found in this gist file.\nFish Shell Out of the box, Fish Shell has an inline auto-complete suggestion, 100000 line history, syntax highlight, copy-paste from X clipboard(not primary, useful for vim), and so on. You will need a package manager. I use Fisher for that, not Oh My Fish. To make it look nice, you can use themes like tide, bobthefish, starship, etc. Optional: I use Fish Shell only in Alacritty, other terminals still use ZSH. I have already shared the configuration about alacritty, now just add the following code to use fish shell.\nshell:program:/usr/local/bin/fishAt shell\u0026gt;program path, I am putting the Fish Shell executable file. Then Alacritty automatically runs this program whenever it starts up.\nAfter using ZSH for more than 5 years, I have moved on to Fish Shell. I like it mostly because of inline auto-complete suggestions, a nice theme and functions. The first two features are also available in ZSH, but I wanted to load some scripts on-demand basis, not always. So I wrote some functions inside ~/.config/fish/functions/ folder, and I utilized tmux to load those functions whenever I want to create a session for a project. Will discuss more about how to use tmux in next section.\ntmux tmux is a terminal multiplexer. It lets you use multiple applications in one terminal, attach detach programs to the session while preserving session. tmux is a server, that is why if you close your terminal, you can resume back to where you left off using tmux. I prefer tmux because I can create sessions for each application along with additional windows, where I usually run the application. These scripts are built using Fish Shell. Here is an example:\n I am creating a Fish Shell function, which is saved in ~/.config/fish/functions/develop.fish.  #fish shell configuration function develop tmux -neww session_name: -n window_name -d end updating ~/.tmux.config file to add a keybinding, so that I can load the session from tmux:  bind-key -r l run-shell \u0026#34;develop\u0026#34; Now restart the tmux server by tmux kill-server and run tmux again by entering tmux command in terminal. Now press ctrl-b-l, it will automatically create a session with a window attached to it.  By the way, if you add this in the Alacritty configuration:\nshell:program:/usr/local/bin/fishargs:- -l- -c- \u0026#34;tmux attach || tmux\u0026#34;Then tmux will automatically started whenever you start Alacritty. Here you will see I am sending arguments tmux attach || tmux in shell section of the yml file. That means, it will automatically create a tmux server, or attach to an existing session.\nVim Now it is time to use Vim or Neo Vim inside tmux session. The existing develop.fish script from the previous section can be used, where you can send some keys to a tmux window, like this:\nfunction develop tmux -neww session_name: -n window_name -d tmux send-key -t session_name:window_name \u0026#39;vim /path/to/project\u0026#39; end Then if you kill and start tmux server again, press ctrl-a-l, it will not just open a tmux session, it will also start the vim at the project path. How cool is that!! Now with only three keystrokes, you can start your project 😄.\nSave configuration All the configurations are done and now it is time for stroing them. As many applications use ~/.config folder, you can just use Git to store that folder in a repository. If you use Neo Vim, then it will store the configurations in ~/.config/nvim folder (if you have not configured otherwise). Alacritty uses ~/.config/alacritty.yml file as default configuration. Fish Shell the configurations are stored in ~/.config/fish folder. But tmux uses ~/.tmux.config file for loading its configuration. But that is fine, because you can just create a file named ~/.config/.tmux.config, and source it from there. Like this:\nsource-file ~/.config/.tmux.conf In conclusion The combination of Alacritty, Fish Shell/Oh My ZSH, tmux, and Vim gives a better experince in coding. I hope this article helps you to improve your workflow by using these tools. Thank you for reading. Cheers!!\n","description":"With the power of Alacritty, Fish Shell, tmux, and Vim, take your coding experience to the next level."},{"date_published":"2021-04-19T22:07:44+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 19, 2021","id":"https://ruddra.com/journey-to-vim/","url":"https://ruddra.com/journey-to-vim/","title":"Journey to Vim","image":"https://ruddra.com/content/images/2021/04/journey.jpg","tags":["Vim","IDE"],"content_html":"\u003cp\u003eIf you are comfortable with your current IDE but still want to try something interesting which might increase your ✌️ productivity ✌️, then you can look into Vim. This article is not setting up your Vim, you will find thousands of articles on Google. Rather, I want to share my thoughts which might motivate(or demotivate) you to use Vim. I will be adding some video links which might be useful for you to set up Vim.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-promise-of-productivity\"\u003eThe promise of productivity\u0026hellip;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#dont-use-vim-plugin-in-other-ide\"\u003eDon\u0026rsquo;t use Vim plugin in other IDE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#its-a-text-editor-not-ide\"\u003eIts a text editor, not IDE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#start-with-the-basics\"\u003eStart with the basics\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#initial-setup\"\u003eInitial setup\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#so-many-options\"\u003eSo many options\u0026hellip;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#cant-expect-everything-from-other-ide\"\u003eCan\u0026rsquo;t expect everything from other IDE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#vim-or-neo-vim\"\u003eVim or Neo Vim\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"the-promise-of-productivity\"\u003eThe promise of productivity\u0026hellip;\u003c/h2\u003e\n\u003cp\u003eWhen you are using Vim, you need to remember a lot of key bindings which may not look natural, but you will be forced to use them anyway. Eventually these key bindings or shortcuts will save you a lot of time, although it requires a lot of practice to master them. But the productivity increase does not lie on the shortcuts only, rather how Vim forces you to code. In real life, we do more refactoring than writing new codes. It is kind of the core philosophy of Vim. It is more efficient to traverse around the code and make edits using Vim. Hence it makes you more productive.\u003c/p\u003e\n\u003cp\u003eBut again, if you are comfortable with your current IDE and can be productive enough, then why would you choose Vim? Well, it\u0026rsquo;s up to you. I am not suggesting you use Vim to be productive. Because there is a huge learning curve in Vim. You could invest that time in other things like learning a new language, improving your programming thinking etc. But if you have time to invest in Vim, it will be worth the while. All you need to do is take a leap of faith 😄.\u003c/p\u003e\n\u003ch2 id=\"dont-use-vim-plugin-in-other-ide\"\u003eDon\u0026rsquo;t use Vim plugin in other IDE\u003c/h2\u003e\n\u003cp\u003eYou will find Vim plugins in almost all IDE/text editors. Don\u0026rsquo;t use them. Main reason is you are adding extra constraints on those IDE, which is not meant to be. Like those IDE has nice mouse support(Vim has it too, but it makes things more confusing), using Vim will restrict you to not use that properly, instead enforce you to use specific key bindings which won\u0026rsquo;t make much sense. Also, with that plugin, it will make those IDEs slow and sluggish. Will make you hate Vim more. If you want to try Vim, then use Vim.\u003c/p\u003e\n\u003ch2 id=\"its-a-text-editor-not-ide\"\u003eIts a text editor, not IDE\u003c/h2\u003e\n\u003cp\u003eVim is a text editor. It is not a full fledged IDE like Intellij Idea or Visual Studio. But with thousands and thousands of open source plugins, you can make it very smart. Still I don\u0026rsquo;t think it is a replacement for Idea or VS, but it does not complement them either.\u003c/p\u003e\n\u003cp\u003eFor me, I am very much used to VS Code. I love it. It works very well with JS and Python, same is for Vim. I am very happy with the support I get from open source plugins to write codes in Python or JS in Vim. But if I were to write Java, I might need IDE support as I am not very fluent in Java. Using Vim will not be easy in this case, because I might need a lot of boilerplate codes, intellisense support etc, which I would always get in an IDE.\u003c/p\u003e\n\u003ch2 id=\"start-with-the-basics\"\u003eStart with the basics\u003c/h2\u003e\n\u003cp\u003eMastering movement keys \u003ccode\u003ehjkl\u003c/code\u003e should come as the first step. Then you can go along with more key bindings like, edit mode, quit, write etc. There are some fantastic tutorials which you can check out. Like this one from \u003cstrong\u003eKalle Hallden\u003c/strong\u003e:\u003c/p\u003e\n\n\n\n\u003ca href=\"https://www.youtube.com/watch?v=6GOqCU2VA0g\"\u003eYouTube Video: Switching to Editor as Vim\u003c/a\u003e\n\u003cbr /\u003e\n\n\u003cp\u003eOr there are two parts series on Vim basics by \u003cstrong\u003eDistroTube\u003c/strong\u003e:\u003c/p\u003e\n\n\n\n\u003ca href=\"https://www.youtube.com/watch?v=ER5JYFKkYDg\"\u003eYouTube Video: Vim Setup Part 1\u003c/a\u003e\n\u003cbr /\u003e\n\n\n\n\n\u003ca href=\"https://www.youtube.com/watch?v=tExTz7GnpdQ\"\u003eYouTube Video: Vim Setup Part 2\u003c/a\u003e\n\u003cbr /\u003e\n\n\u003cp\u003eThe internet is full of initial setup guides which might be useful for you as well.\u003c/p\u003e\n\u003ch2 id=\"initial-setup\"\u003eInitial setup\u003c/h2\u003e\n\u003cp\u003eWhen you a file open a newly installed Vim, it looks like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"663\" height=\"279\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 663 279'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/04/vim_no_plugin_hu5d4d4af13a53f9dee6df2227e73445ae_20017_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/04/vim_no_plugin_hu5d4d4af13a53f9dee6df2227e73445ae_20017_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/04/vim_no_plugin_hu5d4d4af13a53f9dee6df2227e73445ae_20017_600x0_resize_q75_lanczos.jpg 600w'\n        alt='from air' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/04/vim_no_plugin.jpg\" width=\"663\" height=\"279\" alt='from air'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eNot pretty, right!! So you need some basic setup to make Vim a bit more useful. Basically you need to write some configurations in \u003ccode\u003e.vimrc\u003c/code\u003e file which will make Vim more useful, like adding line numbers, coloring, plugin installation, theme etc. You can follow this video for initial Vim setup by \u003cstrong\u003eThePrimeagen\u003c/strong\u003e:\u003c/p\u003e\n\n\n\n\u003ca href=\"https://www.youtube.com/watch?v=DogKdiRx7ls\"\u003eYouTube Video: Vim initial setup(2021)\u003c/a\u003e\n\u003cbr /\u003e\n\n\u003cp\u003eYou can further look into \u003cstrong\u003eThePrimeagen\u003c/strong\u003e\u0026rsquo;s video series on Vim.\u003c/p\u003e\n\n\n\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n  \u003ciframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" src=\"https://www.youtube.com/embed/videoseries?list=PLm323Lc7iSW_wuxqmKx_xxNtJC_hJbQ7R\" title=\"Vim as your Editor\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"so-many-options\"\u003eSo many options\u0026hellip;\u003c/h2\u003e\n\u003cp\u003eVim is so highly configurable, sometimes it feels frustrating. There are multiple plugins for doing the same thing, and there are no central regulations like \u003cstrong\u003eVS Marketplace\u003c/strong\u003e for that. So you might spend a lot of time searching repositories to find which plugin suits you most.\u003c/p\u003e\n\u003cp\u003eAlso, everyone has their own setup, so yours will never match with others. Write your own configuration rather than copy pasting someone else\u0026rsquo;s. It will give you a better sense of what is going on. Then reduce some plugins because it may bloat your Vim setup, and you can recycle some plugins to do other stuff instead of a new plugin.\u003c/p\u003e\n\u003cp\u003eSometimes not all plugins are necessary. Like for example, you need a terminal from time to time. You can install \u003ca href=\"https://github.com/voldikss/vim-floaterm\"\u003e\u003ccode\u003evoldikss/vim-floaterm\u003c/code\u003e\u003c/a\u003e plugin, which is very fantastic for floating terminal. Alternatively, you can split the vim, convert one of the splitted windows to a terminal. So you might want think before looking for plugins, because you can build some shortcuts yourself to solve the issue.\u003c/p\u003e\n\u003ch2 id=\"cant-expect-everything-from-other-ide\"\u003eCan\u0026rsquo;t expect everything from other IDE\u003c/h2\u003e\n\u003cp\u003eAs I said before, I love VS Code. Like it has such a nice file tree, a terminal, awesome themes, italic fonts etc. I can\u0026rsquo;t expect them in Vim. So, I don\u0026rsquo;t try to bring them in Vim either. I try to use Vim as Vim is suppose to be used 😄. It keeps things simple and optimized.\u003c/p\u003e\n\u003ch2 id=\"vim-or-neo-vim\"\u003eVim or Neo Vim\u003c/h2\u003e\n\u003cp\u003eIf you have spent some time with Vim, you will come to a debate, using Vim or Neo Vim. It is up to you. Setting up Neo Vim is easy if you have a Vim configured. I think you should start from Vim, then decide later if you want to move to Neo Vim or not. With Neo Vim, you can add plugins like coc-list which use Lua language instead of Vim syntax.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eEven after a couple of month\u0026rsquo;s usage, you might not feel fluent in Vim. And that is okay. It takes time to learn new things, along with building muscle memory. So bare with it, and in the end Vim will become a very powerful tool at your disposal.\u003c/p\u003e\n\u003cp\u003eI hope this article helps you with your journey to Vim. If you have any questions, please share in comment section below\u003c/p\u003e\n","content":"If you are comfortable with your current IDE but still want to try something interesting which might increase your ✌️ productivity ✌️, then you can look into Vim. This article is not setting up your Vim, you will find thousands of articles on Google. Rather, I want to share my thoughts which might motivate(or demotivate) you to use Vim. I will be adding some video links which might be useful for you to set up Vim.Table of contents\u0026nbsp;  The promise of productivity\u0026hellip; Don\u0026rsquo;t use Vim plugin in other IDE Its a text editor, not IDE Start with the basics Initial setup So many options\u0026hellip; Can\u0026rsquo;t expect everything from other IDE Vim or Neo Vim In conclusion   \nThe promise of productivity\u0026hellip; When you are using Vim, you need to remember a lot of key bindings which may not look natural, but you will be forced to use them anyway. Eventually these key bindings or shortcuts will save you a lot of time, although it requires a lot of practice to master them. But the productivity increase does not lie on the shortcuts only, rather how Vim forces you to code. In real life, we do more refactoring than writing new codes. It is kind of the core philosophy of Vim. It is more efficient to traverse around the code and make edits using Vim. Hence it makes you more productive.\nBut again, if you are comfortable with your current IDE and can be productive enough, then why would you choose Vim? Well, it\u0026rsquo;s up to you. I am not suggesting you use Vim to be productive. Because there is a huge learning curve in Vim. You could invest that time in other things like learning a new language, improving your programming thinking etc. But if you have time to invest in Vim, it will be worth the while. All you need to do is take a leap of faith 😄.\nDon\u0026rsquo;t use Vim plugin in other IDE You will find Vim plugins in almost all IDE/text editors. Don\u0026rsquo;t use them. Main reason is you are adding extra constraints on those IDE, which is not meant to be. Like those IDE has nice mouse support(Vim has it too, but it makes things more confusing), using Vim will restrict you to not use that properly, instead enforce you to use specific key bindings which won\u0026rsquo;t make much sense. Also, with that plugin, it will make those IDEs slow and sluggish. Will make you hate Vim more. If you want to try Vim, then use Vim.\nIts a text editor, not IDE Vim is a text editor. It is not a full fledged IDE like Intellij Idea or Visual Studio. But with thousands and thousands of open source plugins, you can make it very smart. Still I don\u0026rsquo;t think it is a replacement for Idea or VS, but it does not complement them either.\nFor me, I am very much used to VS Code. I love it. It works very well with JS and Python, same is for Vim. I am very happy with the support I get from open source plugins to write codes in Python or JS in Vim. But if I were to write Java, I might need IDE support as I am not very fluent in Java. Using Vim will not be easy in this case, because I might need a lot of boilerplate codes, intellisense support etc, which I would always get in an IDE.\nStart with the basics Mastering movement keys hjkl should come as the first step. Then you can go along with more key bindings like, edit mode, quit, write etc. There are some fantastic tutorials which you can check out. Like this one from Kalle Hallden:\nYouTube Video: Switching to Editor as Vim Or there are two parts series on Vim basics by DistroTube:\nYouTube Video: Vim Setup Part 1 YouTube Video: Vim Setup Part 2 The internet is full of initial setup guides which might be useful for you as well.\nInitial setup When you a file open a newly installed Vim, it looks like this:\n   Not pretty, right!! So you need some basic setup to make Vim a bit more useful. Basically you need to write some configurations in .vimrc file which will make Vim more useful, like adding line numbers, coloring, plugin installation, theme etc. You can follow this video for initial Vim setup by ThePrimeagen:\nYouTube Video: Vim initial setup(2021) You can further look into ThePrimeagen\u0026rsquo;s video series on Vim.\n  So many options\u0026hellip; Vim is so highly configurable, sometimes it feels frustrating. There are multiple plugins for doing the same thing, and there are no central regulations like VS Marketplace for that. So you might spend a lot of time searching repositories to find which plugin suits you most.\nAlso, everyone has their own setup, so yours will never match with others. Write your own configuration rather than copy pasting someone else\u0026rsquo;s. It will give you a better sense of what is going on. Then reduce some plugins because it may bloat your Vim setup, and you can recycle some plugins to do other stuff instead of a new plugin.\nSometimes not all plugins are necessary. Like for example, you need a terminal from time to time. You can install voldikss/vim-floaterm plugin, which is very fantastic for floating terminal. Alternatively, you can split the vim, convert one of the splitted windows to a terminal. So you might want think before looking for plugins, because you can build some shortcuts yourself to solve the issue.\nCan\u0026rsquo;t expect everything from other IDE As I said before, I love VS Code. Like it has such a nice file tree, a terminal, awesome themes, italic fonts etc. I can\u0026rsquo;t expect them in Vim. So, I don\u0026rsquo;t try to bring them in Vim either. I try to use Vim as Vim is suppose to be used 😄. It keeps things simple and optimized.\nVim or Neo Vim If you have spent some time with Vim, you will come to a debate, using Vim or Neo Vim. It is up to you. Setting up Neo Vim is easy if you have a Vim configured. I think you should start from Vim, then decide later if you want to move to Neo Vim or not. With Neo Vim, you can add plugins like coc-list which use Lua language instead of Vim syntax.\nIn conclusion Even after a couple of month\u0026rsquo;s usage, you might not feel fluent in Vim. And that is okay. It takes time to learn new things, along with building muscle memory. So bare with it, and in the end Vim will become a very powerful tool at your disposal.\nI hope this article helps you with your journey to Vim. If you have any questions, please share in comment section below\n","description":"Take your productivity to the next level using Vim, a text editor. All it takes is a leap of faith."},{"date_published":"2021-03-12T18:51:34+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"March 12, 2021","id":"https://ruddra.com/run-github-actions-within-limits/","url":"https://ruddra.com/run-github-actions-within-limits/","title":"Run Github Actions Within Monthly Limit","image":"https://ruddra.com/content/images/2021/03/github_actions.jpg","tags":["GitHub","CI/CD"],"content_html":"\u003cp\u003eSuppose you are using \u003ca href=\"https://github.com/pricing\"\u003eGithub free plan\u003c/a\u003e, you are running actions in your private repo and keep exceeding the monthly minutes limit, then this article is going to help you to make optimized usage of the actions minutes in step by step manner.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#step-one-run-workflow-on-schedule-instead-of-push\"\u003eStep one: run workflow on schedule instead of push\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-two-run-workflow-manually-only-if-you-push\"\u003eStep two: run workflow manually only if you push\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"step-one-run-workflow-on-schedule-instead-of-push\"\u003eStep one: run workflow on schedule instead of push\u003c/h2\u003e\n\u003cp\u003eRather than running the workflow on every push, you can run it in a periodic manner. For example, you can define \u003ccode\u003eschedule\u003c/code\u003e in workflow yml file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYour Action\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eschedule\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ecron\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0 8-18 * * *\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen the workflow will be triggered every day from 8am to 6pm at every hour. So from infinite amount of runs, we are reducing it to roughly 300 times a month. If it requires 10 minutes per workflow, then total minutes will be 3000, which is more than 2000 free minutes 😄.\u003c/p\u003e\n\u003ch2 id=\"step-two-run-workflow-manually-only-if-you-push\"\u003eStep two: run workflow manually only if you push\u003c/h2\u003e\n\u003cp\u003eOur next step is to run the workflow only if there has been a push in the repo. We do not want to run the workflow in an unchanged codebase every hour. To do that, let us follow these steps:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e First change the existing workflow to be only triggered if there is a \u003ca href=\"https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch\"\u003emanual dispatch request\u003c/a\u003e to that workflow:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYour Action\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erepository_dispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etypes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003ebuild_application\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Create a script which will trigger the main workflow if there is a push within last hour:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003etime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003egit\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eRepo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erepo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRepo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eheadcommit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erepo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehead\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecommit_date\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egmtime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eheadcommit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecommitted_date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eutcnow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecommit_date\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommit_date\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_mon\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommit_date\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_mday\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommit_date\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_hour\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e  \\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etoday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eyear\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etoday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emonth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etoday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eday\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etoday\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehour\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;Accept\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;application/vnd.github.everest-preview+json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;Content-Type\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;application/json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{\u0026#34;event_type\u0026#34;: \u0026#34;build_application\u0026#34;}\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eUSERNAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;PAT_USERNAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# will discuss more later\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eTOKEN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;TOKEN\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# will discuss more later\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eREPO\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;REPO\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# will discuss more later\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;https://api.github.com/repos/\u003c/span\u003e\u003cspan class=\"si\"\u003e{}\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"si\"\u003e{}\u003c/span\u003e\u003cspan class=\"s1\"\u003e/dispatches\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUSERNAME\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eREPO\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eUSERNAME\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eTOKEN\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;No commit\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Let us create another actions yml file inside \u003ccode\u003e.github/workflows\u003c/code\u003e directory which will run the script above at every hour:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTrigger Main Workflow\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eschedule\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ecron\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0 * * * *\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edeploy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eubuntu-18.04\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGit checkout\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetup python\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/setup-python@v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epython-version\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3.x\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003earchitecture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;x64\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eInstall dependencies\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epip install gitpython requests\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRun scheduled task\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eREPO\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.REPO }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ePAT_USERNAME\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.PAT_USERNAME }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eTOKEN\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.TOKEN }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epython trigger_action.py\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo be clear, this workflow will run everyday for once every hour. It takes 23-27 seconds on average.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4.\u003c/strong\u003e Create a \u003cem\u003ePersonal access token\u003c/em\u003e from \u003ca href=\"https://github.com/settings/tokens\"\u003ehttps://github.com/settings/tokens\u003c/a\u003e. Click on \u003cstrong\u003eGenerate new token\u003c/strong\u003e button, provide a name and select \u003ccode\u003eworkflow\u003c/code\u003e checkbox. Then click \u003cstrong\u003eGenerate token\u003c/strong\u003e and copy this token to a safe place.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e5.\u003c/strong\u003e Finally, add three environment \u003ccode\u003ePAT_USERNAME\u003c/code\u003e, \u003ccode\u003eTOKEN\u003c/code\u003e, \u003ccode\u003eREPO\u003c/code\u003e variables in \u003ccode\u003e\u0026lt;Your Repo\u0026gt; -\u0026gt; Settings -\u0026gt; Secrets -\u0026gt; Actions\u003c/code\u003e. \u003ccode\u003ePAT_USERNAME\u003c/code\u003e is your username for GitHub, \u003ccode\u003eTOKEN\u003c/code\u003e is the \u003cem\u003ePersonal access token\u003c/em\u003e you have generated in previous step, \u003ccode\u003eREPO\u003c/code\u003e is the current repo name where you want to run the actions.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"904\" height=\"251\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 904 251'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/03/actions_environment_hu5d4d4af13a53f9dee6df2227e73445ae_29943_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/03/actions_environment_hu5d4d4af13a53f9dee6df2227e73445ae_29943_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/03/actions_environment_hu5d4d4af13a53f9dee6df2227e73445ae_29943_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/03/actions_environment_hu5d4d4af13a53f9dee6df2227e73445ae_29943_720x0_resize_q75_lanczos.jpg 720w'\n        alt='environment' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/03/actions_environment.jpg\" width=\"904\" height=\"251\" alt='environment'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eCommit everything and push to your repo, and voilà ⚡!! your main workflow will run every hour only if there is a push in the last hour.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIn this article we discussed how you can reduce the number of times you run your workflow for your private repository. Hope it helps. Cheers!!\u003c/p\u003e\n","content":"Suppose you are using Github free plan, you are running actions in your private repo and keep exceeding the monthly minutes limit, then this article is going to help you to make optimized usage of the actions minutes in step by step manner.Table of contents\u0026nbsp;  Step one: run workflow on schedule instead of push Step two: run workflow manually only if you push In conclusion   \nStep one: run workflow on schedule instead of push Rather than running the workflow on every push, you can run it in a periodic manner. For example, you can define schedule in workflow yml file:\nname:Your Actionon:schedule:- cron:\u0026#34;0 8-18 * * *\u0026#34;Then the workflow will be triggered every day from 8am to 6pm at every hour. So from infinite amount of runs, we are reducing it to roughly 300 times a month. If it requires 10 minutes per workflow, then total minutes will be 3000, which is more than 2000 free minutes 😄.\nStep two: run workflow manually only if you push Our next step is to run the workflow only if there has been a push in the repo. We do not want to run the workflow in an unchanged codebase every hour. To do that, let us follow these steps:\n1. First change the existing workflow to be only triggered if there is a manual dispatch request to that workflow:\nname:Your Actionon:repository_dispatch:types:- build_application2. Create a script which will trigger the main workflow if there is a push within last hour:\nimport os import datetime import time from git import Repo import requests repo = Repo(\u0026#39;.\u0026#39;) headcommit = repo.head.commit commit_date = time.gmtime(headcommit.committed_date) today = datetime.datetime.utcnow() if (commit_date.tm_year, commit_date.tm_mon, commit_date.tm_mday, commit_date.tm_hour ) \\ == (today.year, today.month, today.day, today.hour - 1): headers = { \u0026#39;Accept\u0026#39;: \u0026#39;application/vnd.github.everest-preview+json\u0026#39;, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;, } data = \u0026#39;{\u0026#34;event_type\u0026#34;: \u0026#34;build_application\u0026#34;}\u0026#39; USERNAME = os.environ.get(\u0026#39;PAT_USERNAME\u0026#39;) # will discuss more later TOKEN = os.environ.get(\u0026#39;TOKEN\u0026#39;) # will discuss more later REPO = os.environ.get(\u0026#39;REPO\u0026#39;) # will discuss more later response = requests.post( \u0026#39;https://api.github.com/repos/{}/{}/dispatches\u0026#39;.format(USERNAME, REPO), headers=headers, data=data, auth=( USERNAME, TOKEN ) ) print(response.status_code, response.content) else: print(\u0026#39;No commit\u0026#39;) 3. Let us create another actions yml file inside .github/workflows directory which will run the script above at every hour:\nname:Trigger Main Workflowon:schedule:- cron:\u0026#34;0 * * * *\u0026#34;jobs:deploy:runs-on:ubuntu-18.04steps:- name:Git checkoutuses:actions/checkout@v1- name:Setup pythonuses:actions/setup-python@v1with:python-version:\u0026#34;3.x\u0026#34;architecture:\u0026#34;x64\u0026#34;- name:Install dependenciesrun:pip install gitpython requests- name:Run scheduled taskenv:REPO:${{ secrets.REPO }}PAT_USERNAME:${{ secrets.PAT_USERNAME }}TOKEN:${{ secrets.TOKEN }}run:python trigger_action.pyTo be clear, this workflow will run everyday for once every hour. It takes 23-27 seconds on average.\n4. Create a Personal access token from https://github.com/settings/tokens. Click on Generate new token button, provide a name and select workflow checkbox. Then click Generate token and copy this token to a safe place.\n5. Finally, add three environment PAT_USERNAME, TOKEN, REPO variables in \u0026lt;Your Repo\u0026gt; -\u0026gt; Settings -\u0026gt; Secrets -\u0026gt; Actions. PAT_USERNAME is your username for GitHub, TOKEN is the Personal access token you have generated in previous step, REPO is the current repo name where you want to run the actions.\n   Commit everything and push to your repo, and voilà ⚡!! your main workflow will run every hour only if there is a push in the last hour.\nIn conclusion In this article we discussed how you can reduce the number of times you run your workflow for your private repository. Hope it helps. Cheers!!\n","description":"Make the best use of free action minutes in Github by limiting the number of workflow runs."},{"date_published":"2021-02-23T22:47:51+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"February 23, 2021","id":"https://ruddra.com/serverless-and-actions/","url":"https://ruddra.com/serverless-and-actions/","title":"Serverless and Actions","image":"https://ruddra.com/content/images/2021/02/jam.jpg","tags":["Serverless","GitHub"],"content_html":"\u003cp\u003eIn JAMStack(aka static sites), we use different paid/free services for things like using Disqus for commenting, MailChimp for newsletters etc. These services come with a tradeoff, for example lack of privacy, bloated JavaScript and many more.\u003c/p\u003e\n\u003cp\u003eWhat if we can build them on our own using a serverless stack, with low to no cost and almost zero maintenance?? Why serverless, because these backend services will not run all time, rather run on demand basis. If we have limited minutes of run time, then we can probably run it at very low cost or free(depending on which serverless provider you are using). If we back it up with GitHub Actions to run cron jobs, that can save a lot of money 😤.\u003c/p\u003e\n\u003cp\u003eAs actions speak louder than words, let\u0026rsquo;s build a project were we will combine serverless and GitHub Actions to create a full-fledged newsletter service.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#example-project-newsletters\"\u003eExample project: Newsletters\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisite\"\u003ePrerequisite\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#email-sending-service-provider\"\u003eEmail sending service provider\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#serverless-service-provider\"\u003eServerless service provider\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#implement-backend\"\u003eImplement Backend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploy-backend\"\u003eDeploy Backend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-mailgun-template\"\u003eCreate MailGun Template\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#write-a-email-sending-script-using-python\"\u003eWrite a email sending script using Python\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#write-github-actions-workflow\"\u003eWrite Github Actions workflow\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#folder-structure\"\u003eFolder structure\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#yml-file\"\u003eYML file\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configure-github-secrets\"\u003eConfigure GitHub Secrets\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-a-newsletter-form\"\u003eCreate a newsletter form\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#example-code\"\u003eExample Code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"example-project-newsletters\"\u003eExample project: Newsletters\u003c/h2\u003e\n\u003cp\u003eAs an example project, we are going to implement a newsletter service. Key ideas behind the implementation of this newsletter service are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a backend using Serverless stack to store email addresses.\u003c/li\u003e\n\u003cli\u003eSend emails to those addresses periodically by running cron jobs using GitHub Actions.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"prerequisite\"\u003ePrerequisite\u003c/h2\u003e\n\u003cp\u003eBefore we start our project, we need to sort out two things first. One, which email sending service to use and two, which serverless service provider to use. Based on these, our codes might differ a lot, because we are kind of bound to use apis of email services or libraries of serverless providers.\u003c/p\u003e\n\u003ch3 id=\"email-sending-service-provider\"\u003eEmail sending service provider\u003c/h3\u003e\n\u003cp\u003eThere are several email sending service providers in the world, but my preference is \u003ca href=\"https://www.mailgun.com/\"\u003eMailGun\u003c/a\u003e, which has simple APIs which can be used to store and send emails. You can send up to 5,000 emails per month for free 👏. Alternatives are SendGrid, MailChimp etc.\u003c/p\u003e\n\u003cp\u003eFor using MailGun, please follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eyou need to create an account, then \u003ca href=\"https://documentation.mailgun.com/en/latest/user_manual.html#verifying-your-domain\"\u003everify your domain\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eGet the \u003ca href=\"https://help.mailgun.com/hc/en-us/articles/203380100-Where-Can-I-Find-My-API-Key-and-SMTP-Credentials-\"\u003e\u003ccode\u003eAPI KEY\u003c/code\u003e\u003c/a\u003e from  settings.\u003c/li\u003e\n\u003cli\u003eThen go to the mailing list page from \u003cstrong\u003eDashboard Left MenuBar \u0026gt; Sending \u0026gt; Mailing List\u003c/strong\u003e, then click on the top right button saying \u003cstrong\u003e\u003ccode\u003eCreate mailing list\u003c/code\u003e\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"serverless-service-provider\"\u003eServerless service provider\u003c/h3\u003e\n\u003cp\u003eAgain there are \u003ca href=\"https://www.serverless.com/framework/docs/providers/\"\u003emany serverless providers\u003c/a\u003e like AWS Lambda, CloudFlare Worker etc. But my preference is \u003ca href=\"https://www.netlify.com/products/functions/\"\u003eNetlify Functions\u003c/a\u003e because it provides \u003ca href=\"https://www.netlify.com/pricing/\"\u003ea free plan\u003c/a\u003e with 100GB bandwidth and 300 minutes build time, which is sufficient for personal projects. FYI, you can use AWS Lambda or any other serverless provider, which should not cost you too much(maybe less than a dollar per month) 👊.\u003c/p\u003e\n\u003ch2 id=\"implement-backend\"\u003eImplement Backend\u003c/h2\u003e\n\u003cp\u003eNow, we are going to implement our backend using NodeJS and Express. Let\u0026rsquo;s create a empty directory and install the dependencies first:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emkdir newsletters \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e newsletters\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enpm install express mailgun-js netlify-lambda serverless-http --save\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003ePro Tip:\u003c/strong\u003e These dependencies are specific to Netlify Functions. If you are using other serverless providers, please see their documentation. But you should be able to deploy this code in AWS Lambda.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNow there should be \u003ccode\u003epackage.json\u003c/code\u003e file inside the folder, then add some scripts there:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;scripts\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;prestart\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;if [ ! -d node_modules ]; then npm install; fi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;postinstall\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;netlify-lambda install\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;netlify-lambda build .\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;serve\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;netlify-lambda serve .\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;start\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;node server.js\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;dependencies\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;express\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^4.17.1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;mailgun-js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^0.22.0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;netlify-lambda\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^2.0.3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;serverless-http\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;^2.7.0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003ePro Tip:\u003c/strong\u003e Dependencies should be already there, add the scripts section only.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNow lets create a file named \u003ccode\u003eserver.js\u003c/code\u003e inside the root directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eexpress\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;express\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eserverless\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;serverless-http\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ebodyParser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;body-parser\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eexpress\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erouter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eexpress\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eRouter\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eAPI_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Your API Key\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eDOMAIN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Your Domain\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eMAILING_LIST\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;your_mailing_list\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003emailgun\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;mailgun-js\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)({\u003c/span\u003e \u003cspan class=\"nx\"\u003eapiKey\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eAPI_KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edomain\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eDOMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003emailgun\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eMAILING_LIST\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"sb\"\u003e@\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eDOMAIN\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003etemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003esubscribed\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003erouter\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddress\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ereq\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ebody\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003esubscribed\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eaddress\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eaddress\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003emembers\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eres\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"s2\"\u003e\u0026#34;success\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003euse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebodyParser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurlencoded\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nx\"\u003eextended\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e \u003cspan class=\"p\"\u003e}))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003euse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ebodyParser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003euse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/.netlify/functions/server\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003erouter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003emodule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eexports\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003emodule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eexports\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandler\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eserverless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eA lot of codes here are specific to the Netlify Functions, but gist of the code is:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDefine \u003ccode\u003eAPI_KEY\u003c/code\u003e, \u003ccode\u003eMAILING_LIST\u003c/code\u003e, \u003ccode\u003eDOMAIN\u003c/code\u003e or collect from environment variables.\u003c/li\u003e\n\u003cli\u003eCreate a \u003ccode\u003elist\u003c/code\u003e instance using \u003ccode\u003emailgun-js\u003c/code\u003e library using above credentials.\u003c/li\u003e\n\u003cli\u003eIf you make a POST request to express router \u003ccode\u003e/\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003eaddress\u003c/code\u003e information will be collected from API and sent to mailgun instance.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNow we build the app and run it by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enpm run build\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enpm run serve\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou should get an application running at:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehttp://localhost:9000/.netlify/functions/server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd you can make a post request to that server like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# need to install requests library: `pip install requests`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;http://localhost:9000/.netlify/functions/server\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;address\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;youraddress@gmail.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Your Name\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen you should check the express application\u0026rsquo;s log and if there is no error then the email is added to the mailing list you have created in MailGun. Cool!!\u003c/p\u003e\n\u003ch2 id=\"deploy-backend\"\u003eDeploy Backend\u003c/h2\u003e\n\u003cp\u003eNow it is time to deploy the application. So you need to push this to your repository on GitHub. Then go to \u003ca href=\"https://app.netlify.com\"\u003eNetlify Dashboard\u003c/a\u003e and click into \u003cstrong\u003e\u003ccode\u003eNew site from Git\u003c/code\u003e\u003c/strong\u003e. Then just point to the right repository and boom 💥, Netlify will build and deploy the server.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1738\" height=\"960\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1738 960'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/02/netlify_deploy_hu7fba9da1679ce4a56c592454604cb9c1_61033_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/02/netlify_deploy_hu7fba9da1679ce4a56c592454604cb9c1_61033_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/02/netlify_deploy_hu7fba9da1679ce4a56c592454604cb9c1_61033_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/02/netlify_deploy_hu7fba9da1679ce4a56c592454604cb9c1_61033_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Netlify Deploy' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/02/netlify_deploy.jpg\" width=\"1738\" height=\"960\" alt='Netlify Deploy'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eYour app should be available at:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehttps://\u0026lt;app-name\u0026gt;.netlify.app/.netlify/functions/server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-mailgun-template\"\u003eCreate MailGun Template\u003c/h2\u003e\n\u003cp\u003eNow we have a backend which can collect \u003cstrong\u003ename\u003c/strong\u003e and \u003cstrong\u003eemail addresses\u003c/strong\u003e by RESTful API. Now it is time to send emails. For that, you need to create an email template at \u003ca href=\"https://www.mailgun.com/email-templates/\"\u003eMailGun\u003c/a\u003e. Create one from \u003cstrong\u003eDashboard Left MenuBar \u0026gt; Sending \u0026gt; Templates\u003c/strong\u003e, then click on the top right button saying \u003cstrong\u003e\u003ccode\u003eCreate message template\u003c/code\u003e\u003c/strong\u003e. You can use pre-designed templates when creating or you can create a custom one. For testing purposes, let\u0026rsquo;s create an empty template.\u003c/p\u003e\n\u003ch2 id=\"write-a-email-sending-script-using-python\"\u003eWrite a email sending script using Python\u003c/h2\u003e\n\u003cp\u003eNow we should have a template name from the previous step. Time for creating a new script which will be triggered by GitHub Actions based on cron job configuration.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ejson\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTO_MAIL_LIST\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;MAILING_LIST\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAPI_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;API_KEY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTEMPLATE_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;TEMPLATE_NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esend_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;from\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Newsletter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s2\"\u003e\u0026#34;to\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTO_MAIL_LIST\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s2\"\u003e\u0026#34;subject\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s2\"\u003e\u0026#34;template\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTEMPLATE_NAME\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s2\"\u003e\u0026#34;h:X-Mailgun-Variables\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;https://api.mailgun.net/v3/mg.ruddra.com/messages\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eauth\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;api\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"sa\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eAPI_KEY\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# variables used in template\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esubject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;My subject for emails\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esend_email\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis script should reside at the root of the Project. The gist of the code are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCollect \u003ccode\u003eTO_MAIL_LIST\u003c/code\u003e, \u003ccode\u003eAPI_KEY\u003c/code\u003e, \u003ccode\u003eTEMPLATE_NAME\u003c/code\u003e from environment variable.\u003c/li\u003e\n\u003cli\u003eCreate \u003ccode\u003edata\u003c/code\u003e dictionary based on variables used in MailGun Template.\u003c/li\u003e\n\u003cli\u003eSend emails using RESTful APIs of MailGun using template name and data.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFinally, add a dependency in the root of repository named \u003ccode\u003erequirements.txt\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003erequests==2.25.1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"write-github-actions-workflow\"\u003eWrite Github Actions workflow\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eFYI:\u003c/strong\u003e Netlify Functions support cron job.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eNow it is time to utilize the above code using GitHub Actions. First create a folder named \u003ccode\u003e.github\u003c/code\u003e in the root directory and then create a folder named \u003ccode\u003eworkflows\u003c/code\u003e inside it. Now let\u0026rsquo;s add \u003ccode\u003enewsletters.yml\u003c/code\u003e file inside it:\u003c/p\u003e\n\u003ch3 id=\"folder-structure\"\u003eFolder structure\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eProject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── .github\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── workflows\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│       └── newsletters.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── server.js\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── package.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── requirements.txt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── send_emails.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"yml-file\"\u003eYML file\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eNewsletter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eschedule\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ecron\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0 0 1 * *\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edeploy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eubuntu-18.04\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGit checkout\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetup python\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/setup-python@v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epython-version\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3.x\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003earchitecture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;x64\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eInstall dependencies\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epip install -r requirements.pip\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRun scheduled task\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eMG_MAILING_LIST\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.MAILING_LIST }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eMG_API_KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.API_KEY }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eTEMPLATE_NAME\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.TEMPLATE_NAME }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epython send_emails.py\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow let\u0026rsquo;s commit everything and push it to our repository.\u003c/p\u003e\n\u003ch2 id=\"configure-github-secrets\"\u003eConfigure GitHub Secrets\u003c/h2\u003e\n\u003cp\u003eWe have used environment variables to collect \u003ccode\u003eAPI_KEY\u003c/code\u003e, \u003ccode\u003eMAILING_LIST\u003c/code\u003e and \u003ccode\u003eTEMPLATE_NAME\u003c/code\u003e in the python script, so we need to define them in the \u003cstrong\u003e\u003ccode\u003eSecrets\u003c/code\u003e\u003c/strong\u003e section of the repository settings.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2604\" height=\"1256\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2604 1256'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/02/github_actions_hu7fba9da1679ce4a56c592454604cb9c1_177177_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/02/github_actions_hu7fba9da1679ce4a56c592454604cb9c1_177177_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/02/github_actions_hu7fba9da1679ce4a56c592454604cb9c1_177177_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/02/github_actions_hu7fba9da1679ce4a56c592454604cb9c1_177177_720x0_resize_q75_lanczos.jpg 720w'\n        alt='GitHub Actions' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/02/github_actions.jpg\" width=\"2604\" height=\"1256\" alt='GitHub Actions'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAfter adding the environment variables:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1810\" height=\"590\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1810 590'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/02/actions_secret_hu7fba9da1679ce4a56c592454604cb9c1_101359_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/02/actions_secret_hu7fba9da1679ce4a56c592454604cb9c1_101359_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/02/actions_secret_hu7fba9da1679ce4a56c592454604cb9c1_101359_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/02/actions_secret_hu7fba9da1679ce4a56c592454604cb9c1_101359_720x0_resize_q75_lanczos.jpg 720w'\n        alt='GitHub Actions' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/02/actions_secret.jpg\" width=\"1810\" height=\"590\" alt='GitHub Actions'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eNow our workflow should be visible in the actions settings of the repository:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2512\" height=\"384\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2512 384'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2021/02/github_workflows_hu7fba9da1679ce4a56c592454604cb9c1_80999_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2021/02/github_workflows_hu7fba9da1679ce4a56c592454604cb9c1_80999_500x0_resize_q75_lanczos.jpg 500w,/content/images/2021/02/github_workflows_hu7fba9da1679ce4a56c592454604cb9c1_80999_600x0_resize_q75_lanczos.jpg 600w,/content/images/2021/02/github_workflows_hu7fba9da1679ce4a56c592454604cb9c1_80999_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Workflows' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2021/02/github_workflows.jpg\" width=\"2512\" height=\"384\" alt='Workflows'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eOur cron job is ready!! It should be triggered at 1st day of each month at 12:00 am(as defined in the workflow yml file).\u003c/p\u003e\n\u003ch2 id=\"create-a-newsletter-form\"\u003eCreate a newsletter form\u003c/h2\u003e\n\u003cp\u003eNow we have a backend which can store email addresses, and a cron job which will send emails. We can easily use the API in our static site either via form submission, or using JavaScript. 😄 Here is an example of HTML form:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eaction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;http://localhost:9000/.netlify/functions/server\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Name: \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;text\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Email: \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;address\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;submit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSubmit\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"example-code\"\u003eExample Code\u003c/h2\u003e\n\u003cp\u003eThe full implementation is available at \u003ca href=\"https://github.com/ruddra/DIY-newsletters\"\u003ethis GitHub Repository\u003c/a\u003e which you can directly deploy to your Netlify account.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThank you for reading. If you have any questions, please use the comment section below.\u003c/p\u003e\n","content":"In JAMStack(aka static sites), we use different paid/free services for things like using Disqus for commenting, MailChimp for newsletters etc. These services come with a tradeoff, for example lack of privacy, bloated JavaScript and many more.\nWhat if we can build them on our own using a serverless stack, with low to no cost and almost zero maintenance?? Why serverless, because these backend services will not run all time, rather run on demand basis. If we have limited minutes of run time, then we can probably run it at very low cost or free(depending on which serverless provider you are using). If we back it up with GitHub Actions to run cron jobs, that can save a lot of money 😤.\nAs actions speak louder than words, let\u0026rsquo;s build a project were we will combine serverless and GitHub Actions to create a full-fledged newsletter service.Table of contents\u0026nbsp;  Example project: Newsletters Prerequisite  Email sending service provider Serverless service provider   Implement Backend Deploy Backend Create MailGun Template Write a email sending script using Python Write Github Actions workflow  Folder structure YML file   Configure GitHub Secrets Create a newsletter form Example Code In conclusion   \nExample project: Newsletters As an example project, we are going to implement a newsletter service. Key ideas behind the implementation of this newsletter service are:\n Create a backend using Serverless stack to store email addresses. Send emails to those addresses periodically by running cron jobs using GitHub Actions.  Prerequisite Before we start our project, we need to sort out two things first. One, which email sending service to use and two, which serverless service provider to use. Based on these, our codes might differ a lot, because we are kind of bound to use apis of email services or libraries of serverless providers.\nEmail sending service provider There are several email sending service providers in the world, but my preference is MailGun, which has simple APIs which can be used to store and send emails. You can send up to 5,000 emails per month for free 👏. Alternatives are SendGrid, MailChimp etc.\nFor using MailGun, please follow these steps:\n you need to create an account, then verify your domain. Get the API KEY from settings. Then go to the mailing list page from Dashboard Left MenuBar \u0026gt; Sending \u0026gt; Mailing List, then click on the top right button saying Create mailing list.  Serverless service provider Again there are many serverless providers like AWS Lambda, CloudFlare Worker etc. But my preference is Netlify Functions because it provides a free plan with 100GB bandwidth and 300 minutes build time, which is sufficient for personal projects. FYI, you can use AWS Lambda or any other serverless provider, which should not cost you too much(maybe less than a dollar per month) 👊.\nImplement Backend Now, we are going to implement our backend using NodeJS and Express. Let\u0026rsquo;s create a empty directory and install the dependencies first:\nmkdir newsletters \u0026amp;\u0026amp; cd newsletters npm install express mailgun-js netlify-lambda serverless-http --save  Pro Tip: These dependencies are specific to Netlify Functions. If you are using other serverless providers, please see their documentation. But you should be able to deploy this code in AWS Lambda.\n Now there should be package.json file inside the folder, then add some scripts there:\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;prestart\u0026#34;: \u0026#34;if [ ! -d node_modules ]; then npm install; fi\u0026#34;, \u0026#34;postinstall\u0026#34;: \u0026#34;netlify-lambda install\u0026#34;, \u0026#34;build\u0026#34;: \u0026#34;netlify-lambda build .\u0026#34;, \u0026#34;serve\u0026#34;: \u0026#34;netlify-lambda serve .\u0026#34;, \u0026#34;start\u0026#34;: \u0026#34;node server.js\u0026#34; }, \u0026#34;dependencies\u0026#34;: { \u0026#34;express\u0026#34;: \u0026#34;^4.17.1\u0026#34;, \u0026#34;mailgun-js\u0026#34;: \u0026#34;^0.22.0\u0026#34;, \u0026#34;netlify-lambda\u0026#34;: \u0026#34;^2.0.3\u0026#34;, \u0026#34;serverless-http\u0026#34;: \u0026#34;^2.7.0\u0026#34; } }  Pro Tip: Dependencies should be already there, add the scripts section only.\n Now lets create a file named server.js inside the root directory.\nconst express = require(\u0026#39;express\u0026#39;) const serverless = require(\u0026#39;serverless-http\u0026#39;) const bodyParser = require(\u0026#39;body-parser\u0026#39;) const app = express() const router = express.Router(); const API_KEY = \u0026#39;Your API Key\u0026#39; const DOMAIN = \u0026#39;Your Domain\u0026#39; const MAILING_LIST = \u0026#39;your_mailing_list\u0026#39; const mailgun = require(\u0026#39;mailgun-js\u0026#39;)({ apiKey: API_KEY, domain: DOMAIN }) const list = mailgun.lists(`${MAILING_LIST}@${DOMAIN}`); const template = { subscribed: true, } router.post(\u0026#39;/\u0026#39;, (req, res) =\u0026gt; { let {name, address} = req.body let user = { subscribed: true, name: name, address: address } list.members().create(user, function (error, data) { res.json({ \u0026#34;success\u0026#34;: true }) }) }) app.use(bodyParser.urlencoded({ extended: false })) app.use(bodyParser.json()) app.use(\u0026#39;/.netlify/functions/server\u0026#39;, router) module.exports = app module.exports.handler = serverless(app) A lot of codes here are specific to the Netlify Functions, but gist of the code is:\n Define API_KEY, MAILING_LIST, DOMAIN or collect from environment variables. Create a list instance using mailgun-js library using above credentials. If you make a POST request to express router /, name and address information will be collected from API and sent to mailgun instance.  Now we build the app and run it by:\nnpm run build npm run serve You should get an application running at:\nhttp://localhost:9000/.netlify/functions/server And you can make a post request to that server like this:\nimport requests # need to install requests library: `pip install requests` url = \u0026#34;http://localhost:9000/.netlify/functions/server\u0026#34; data = { \u0026#39;address\u0026#39;: \u0026#39;youraddress@gmail.com\u0026#39;, \u0026#39;name\u0026#39;: \u0026#39;Your Name\u0026#39; } response = requests.post(url, data) print(response) Then you should check the express application\u0026rsquo;s log and if there is no error then the email is added to the mailing list you have created in MailGun. Cool!!\nDeploy Backend Now it is time to deploy the application. So you need to push this to your repository on GitHub. Then go to Netlify Dashboard and click into New site from Git. Then just point to the right repository and boom 💥, Netlify will build and deploy the server.\n   Your app should be available at:\nhttps://\u0026lt;app-name\u0026gt;.netlify.app/.netlify/functions/server Create MailGun Template Now we have a backend which can collect name and email addresses by RESTful API. Now it is time to send emails. For that, you need to create an email template at MailGun. Create one from Dashboard Left MenuBar \u0026gt; Sending \u0026gt; Templates, then click on the top right button saying Create message template. You can use pre-designed templates when creating or you can create a custom one. For testing purposes, let\u0026rsquo;s create an empty template.\nWrite a email sending script using Python Now we should have a template name from the previous step. Time for creating a new script which will be triggered by GitHub Actions based on cron job configuration.\nimport os import json import requests TO_MAIL_LIST = os.environ.get(\u0026#39;MAILING_LIST\u0026#39;) API_KEY = os.environ.get(\u0026#39;API_KEY\u0026#39;) TEMPLATE_NAME = os.environ.get(\u0026#39;TEMPLATE_NAME\u0026#39;) def send_email(title, data): x = {\u0026#34;from\u0026#34;: \u0026#34;Newsletter\u0026#34;, \u0026#34;to\u0026#34;: TO_MAIL_LIST, \u0026#34;subject\u0026#34;: title, \u0026#34;template\u0026#34;: TEMPLATE_NAME, \u0026#34;h:X-Mailgun-Variables\u0026#34;: json.dumps(data)} return requests.post( \u0026#34;https://api.mailgun.net/v3/mg.ruddra.com/messages\u0026#34;, auth=(\u0026#34;api\u0026#34;, f\u0026#34;{API_KEY}\u0026#34;), data=x) if __name__ == \u0026#39;__main__\u0026#39;: data = {} # variables used in template subject = \u0026#34;My subject for emails\u0026#34; send_email(subject, data) This script should reside at the root of the Project. The gist of the code are:\n Collect TO_MAIL_LIST, API_KEY, TEMPLATE_NAME from environment variable. Create data dictionary based on variables used in MailGun Template. Send emails using RESTful APIs of MailGun using template name and data.  Finally, add a dependency in the root of repository named requirements.txt:\nrequests==2.25.1 Write Github Actions workflow  FYI: Netlify Functions support cron job.\n Now it is time to utilize the above code using GitHub Actions. First create a folder named .github in the root directory and then create a folder named workflows inside it. Now let\u0026rsquo;s add newsletters.yml file inside it:\nFolder structure Project ├── .github │ └── workflows │ └── newsletters.yml ├── server.js ├── package.json ├── requirements.txt └── send_emails.py YML file name:Newsletteron:schedule:- cron:\u0026#34;0 0 1 * *\u0026#34;jobs:deploy:runs-on:ubuntu-18.04steps:- name:Git checkoutuses:actions/checkout@v1- name:Setup pythonuses:actions/setup-python@v1with:python-version:\u0026#34;3.x\u0026#34;architecture:\u0026#34;x64\u0026#34;- name:Install dependenciesrun:pip install -r requirements.pip- name:Run scheduled taskenv:MG_MAILING_LIST:${{ secrets.MAILING_LIST }}MG_API_KEY:${{ secrets.API_KEY }}TEMPLATE_NAME:${{ secrets.TEMPLATE_NAME }}run:python send_emails.pyNow let\u0026rsquo;s commit everything and push it to our repository.\nConfigure GitHub Secrets We have used environment variables to collect API_KEY, MAILING_LIST and TEMPLATE_NAME in the python script, so we need to define them in the Secrets section of the repository settings.\n   After adding the environment variables:\n   Now our workflow should be visible in the actions settings of the repository:\n   Our cron job is ready!! It should be triggered at 1st day of each month at 12:00 am(as defined in the workflow yml file).\nCreate a newsletter form Now we have a backend which can store email addresses, and a cron job which will send emails. We can easily use the API in our static site either via form submission, or using JavaScript. 😄 Here is an example of HTML form:\n\u0026lt;form action=\u0026#39;http://localhost:9000/.netlify/functions/server\u0026#39; method=post\u0026gt; Name: \u0026lt;input type=\u0026#39;text\u0026#39; name=\u0026#39;name\u0026#39;\u0026gt; Email: \u0026lt;input type=\u0026#39;email\u0026#39; name=\u0026#39;address\u0026#39;\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; Example Code The full implementation is available at this GitHub Repository which you can directly deploy to your Netlify account.\nIn conclusion Thank you for reading. If you have any questions, please use the comment section below.\n","description":"Make your JAMStack more interactive with applications deployed using Serverless and Actions."},{"date_published":"2021-01-06T00:25:34+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"January 6, 2021","id":"https://ruddra.com/fix-python-after-brew-upgrade/","url":"https://ruddra.com/fix-python-after-brew-upgrade/","title":"Fix Python After Brew Upgrade in MacOS","image":"https://ruddra.com/content/images/2021/01/nuke.jpg","tags":["Python","MacOS"],"content_html":"\u003cp\u003eWhen you run \u003ccode\u003ebrew upgrade\u003c/code\u003e or \u003ccode\u003ebrew upgrade \u0026lt;package\u0026gt;\u003c/code\u003e, all the packages are upgraded or packages linked to that particular package you want to upgrade gets updated. For Python, if the version upgrade is minor, then it should be fine. But major updates break a lot of development setup like, if you are used to develop using virtual environment, then you might have re-install every package. Real problem comes in when packages do not get installed in newer environment, then you need to downgrade your Python to make those packages work. Don\u0026rsquo;t worry though, here are steps on how you can fix this problem and prevent it from happening in future.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eBonus content:\u003c/em\u003e How to create and maintain multiple Python 3.XX versions in your system 💥.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#homebrew-based-solution\"\u003eHomebrew based solution\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#if-everything-works-just-fine\"\u003eIf everything works just fine\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#upgradedowngrade-to-specific-version\"\u003eUpgrade/Downgrade to specific version\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#keep-multiple-python-versions-in-brew\"\u003eKeep multiple Python versions in \u003ccode\u003ebrew\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#pyenv-based-solution\"\u003ePyEnv based solution\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#install-python-using-pyenv\"\u003eInstall Python using \u003ccode\u003epyenv\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#switch-system-python-in-pyenv\"\u003eSwitch system Python in \u003ccode\u003epyenv\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#anaconda-based-solution\"\u003eAnaconda based solution\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn Conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"homebrew-based-solution\"\u003eHomebrew based solution\u003c/h2\u003e\n\u003ch3 id=\"if-everything-works-just-fine\"\u003eIf everything works just fine\u003c/h3\u003e\n\u003cp\u003eIf you have everything working, then you should consider keeping that formula being upgraded in future. \u003ca href=\"https://docs.brew.sh/FAQ#how-do-i-stop-certain-formulae-from-being-updated\"\u003eAs per documentation,\u003c/a\u003e you can \u003ccode\u003epin\u003c/code\u003e the formula like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew pin python\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen next time you consider upgrading python, unpin the formula and run upgrade:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew unpin python\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew upgrade\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"upgradedowngrade-to-specific-version\"\u003eUpgrade/Downgrade to specific version\u003c/h3\u003e\n\u003cp\u003eIf you want to install specific version of Python, then install it using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install python@3.8.6\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"keep-multiple-python-versions-in-brew\"\u003eKeep multiple Python versions in \u003ccode\u003ebrew\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eBut lets say you do not want to disrupt your current version of Python, rather you would have a different Python version installed or keep multiple Python versions, then you can tap a new formula like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install python@3.8\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen if you want to change back to other Python versions, then link like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew link --force python@3.9\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"pyenv-based-solution\"\u003ePyEnv based solution\u003c/h2\u003e\n\u003cp\u003eIf you are already nuked, then why not consider changing to \u003ca href=\"https://github.com/pyenv/pyenv\"\u003e\u003ccode\u003epyenv\u003c/code\u003e\u003c/a\u003e. Reason is that, you can easily switch between Python environments and create virtual environments without any issues.\u003c/p\u003e\n\u003ch3 id=\"install-python-using-pyenv\"\u003eInstall Python using \u003ccode\u003epyenv\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003ePlease follow these steps to install Python:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e To install PyEnv, you can use brew:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install pyenv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Then clone the repository to to get the latest version of pyenv\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://github.com/pyenv/pyenv.git ~/.pyenv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Now, define your environment variables\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr if you are using zsh shell, then:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.zshrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.zshrc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr fish shell:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e -Ux PYENV_ROOT \u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e/.pyenv\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eset\u003c/span\u003e -Ux fish_user_paths \u003cspan class=\"nv\"\u003e$PYENV_ROOT\u003c/span\u003e/bin \u003cspan class=\"nv\"\u003e$fish_user_paths\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e4.\u003c/strong\u003e Restart your shell so the path changes take effect\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$SHELL\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e5.\u003c/strong\u003e Verify the installation and check the available python versions\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv install --list\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e6.\u003c/strong\u003e Install the required python version\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install zlib readline openssl xz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv install 3.8.6\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e7.\u003c/strong\u003e Set it as your global version after installation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv global 3.8.6\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e8.\u003c/strong\u003e Verify your current python version the system is using\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython3 --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e9.\u003c/strong\u003e [Optional] Use \u003ca href=\"https://github.com/pyenv/pyenv-virtualenv\"\u003e\u003ccode\u003epyenv-virtualenv\u003c/code\u003e\u003c/a\u003e plugin to control virtual environments.\u003c/p\u003e\n\u003ch3 id=\"switch-system-python-in-pyenv\"\u003eSwitch system Python in \u003ccode\u003epyenv\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eYou can easily switch Python versions in your system like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv install 3.7.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv versions\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epyenv global 3.7.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"anaconda-based-solution\"\u003eAnaconda based solution\u003c/h2\u003e\n\u003cp\u003eIf you do not want to take hassle of pip, then consider \u003ca href=\"https://docs.anaconda.com/anaconda/install/mac-os/\"\u003eanaconda based environment\u003c/a\u003e. You can install Python versions using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econda install \u003cspan class=\"nv\"\u003epython\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$pythonversion\u003c/span\u003e$\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to maintain multiple environments, then try like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econda create --name py36 \u003cspan class=\"nv\"\u003epython\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3.6\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econda activate py36\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn Conclusion\u003c/h2\u003e\n\u003cp\u003eSome casual \u003ccode\u003ebrew upgrade\u003c/code\u003e can nuke your Python development setup, but it should be okay as long as you can solve it in minimal amount of time. Also as a bonus, now you can maintain multiple Python 3.XX versions in your machine 😄.\u003c/p\u003e\n\u003cp\u003eThank you for reading. If you have any questions or concerns, please share via comment section below.\u003c/p\u003e\n","content":"When you run brew upgrade or brew upgrade \u0026lt;package\u0026gt;, all the packages are upgraded or packages linked to that particular package you want to upgrade gets updated. For Python, if the version upgrade is minor, then it should be fine. But major updates break a lot of development setup like, if you are used to develop using virtual environment, then you might have re-install every package. Real problem comes in when packages do not get installed in newer environment, then you need to downgrade your Python to make those packages work. Don\u0026rsquo;t worry though, here are steps on how you can fix this problem and prevent it from happening in future.\nBonus content: How to create and maintain multiple Python 3.XX versions in your system 💥.Table of contents\u0026nbsp;  Homebrew based solution  If everything works just fine Upgrade/Downgrade to specific version Keep multiple Python versions in brew   PyEnv based solution  Install Python using pyenv Switch system Python in pyenv   Anaconda based solution In Conclusion   \nHomebrew based solution If everything works just fine If you have everything working, then you should consider keeping that formula being upgraded in future. As per documentation, you can pin the formula like this:\nbrew pin python Then next time you consider upgrading python, unpin the formula and run upgrade:\nbrew unpin python brew upgrade Upgrade/Downgrade to specific version If you want to install specific version of Python, then install it using:\nbrew install python@3.8.6 Keep multiple Python versions in brew But lets say you do not want to disrupt your current version of Python, rather you would have a different Python version installed or keep multiple Python versions, then you can tap a new formula like this:\nbrew install python@3.8 Then if you want to change back to other Python versions, then link like this:\nbrew link --force python@3.9 PyEnv based solution If you are already nuked, then why not consider changing to pyenv. Reason is that, you can easily switch between Python environments and create virtual environments without any issues.\nInstall Python using pyenv Please follow these steps to install Python:\n1. To install PyEnv, you can use brew:\nbrew update brew install pyenv 2. Then clone the repository to to get the latest version of pyenv\ngit clone https://github.com/pyenv/pyenv.git ~/.pyenv 3. Now, define your environment variables\necho \u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile echo \u0026#39;export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile Or if you are using zsh shell, then:\necho \u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.zshrc echo \u0026#39;export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.zshrc Or fish shell:\nset -Ux PYENV_ROOT $HOME/.pyenv set -Ux fish_user_paths $PYENV_ROOT/bin $fish_user_paths 4. Restart your shell so the path changes take effect\nexec \u0026#34;$SHELL\u0026#34; 5. Verify the installation and check the available python versions\npyenv install --list 6. Install the required python version\nbrew install zlib readline openssl xz pyenv install 3.8.6 7. Set it as your global version after installation\npyenv global 3.8.6 8. Verify your current python version the system is using\npython3 --version 9. [Optional] Use pyenv-virtualenv plugin to control virtual environments.\nSwitch system Python in pyenv You can easily switch Python versions in your system like this:\npyenv install 3.7.0 pyenv versions pyenv global 3.7.0 python --version Anaconda based solution If you do not want to take hassle of pip, then consider anaconda based environment. You can install Python versions using:\nconda install python=$pythonversion$ If you want to maintain multiple environments, then try like this:\nconda create --name py36 python=3.6 conda activate py36 In Conclusion Some casual brew upgrade can nuke your Python development setup, but it should be okay as long as you can solve it in minimal amount of time. Also as a bonus, now you can maintain multiple Python 3.XX versions in your machine 😄.\nThank you for reading. If you have any questions or concerns, please share via comment section below.\n","description":"Do not let brew upgrade nuke your Python setup, or just fix it and never let it happen again."},{"date_published":"2020-11-12T18:21:22+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"November 12, 2020","id":"https://ruddra.com/beginners-guide-on-scraping-using-python/","url":"https://ruddra.com/beginners-guide-on-scraping-using-python/","title":"Beginner's Guide on Web Scraping using Python","image":"https://ruddra.com/content/images/2020/11/crawling.jpg","tags":["Python","Scraping"],"content_html":"\u003cp\u003eWhen it comes to web scraping, you have to keep in mind that it is not the coding skill rather cunning observations will get you results. Sometimes the data you get comes in a straight forward way, other times the website does not want you to crawl itself. Either way you will get the data, but it takes time depending on how many puzzles do you have to solve before getting it. Here are some tips to resolve these puzzles and code snippets to give you some heads up.\u003c/p\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#beautifulsoup-and-requests-are-your-friend\"\u003e\u003ccode\u003eBeautifulSoup\u003c/code\u003e and \u003ccode\u003erequests\u003c/code\u003e are your friend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#avoid-crawling-if-there-is-an-api\"\u003eAvoid crawling if there is an API\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-regex-to-bend-the-knee\"\u003eUse Regex to bend the knee\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#look-for-api-calls-in-using-developer-tool\"\u003eLook for API calls in using developer tool\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-map-filter-functions\"\u003eUse \u003ccode\u003emap\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e functions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#if-there-is-an-excel-or-csv-file-you-are-in-luck\"\u003eIf there is an excel or csv file, you are in luck\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#you-can-get-data-from-pdf-as-well\"\u003eYou can get data from PDF as well\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#mimic-actions-like-login-or-form-submission\"\u003eMimic actions like login or form submission\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#need-more-robust-solution-then-use-scrapy\"\u003eNeed more robust solution, then use \u003ccode\u003eScrapy\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#selenium-is-the-last-resort\"\u003e\u003ccode\u003eSelenium\u003c/code\u003e is the last resort\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"beautifulsoup-and-requests-are-your-friend\"\u003e\u003ccode\u003eBeautifulSoup\u003c/code\u003e and \u003ccode\u003erequests\u003c/code\u003e are your friend\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://requests.readthedocs.io/en/master/\"\u003e\u003ccode\u003erequests\u003c/code\u003e\u003c/a\u003e is the best library in python for making http requests. You can get the html data as a response from any website. Then you can purse the html data using \u003ca href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\"\u003eBeautiful Soap(aka \u003ccode\u003eBS4\u003c/code\u003e)\u003c/a\u003e. Here is an example to get all the links from \u003ca href=\"https://wikipedia.com\"\u003eWikipedia\u003c/a\u003e front page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ebs4\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://wikipedia.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esoap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;html.parser\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003esoap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_all\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;href\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMajority of websites can be scrapped by these two libraries. A web scrapers best friends 😄.\u003c/p\u003e\n\u003ch2 id=\"avoid-crawling-if-there-is-an-api\"\u003eAvoid crawling if there is an API\u003c/h2\u003e\n\u003cp\u003eAs said above, scraping data from the majority of websites is simple but we are not talking about Facebook or Twitter here because these websites don\u0026rsquo;t allow scraping or it may be illegal. Instead, you should look for APIs to get the needed data. So before scraping, try looking for API documentation of any site, and if it is an RESTful API, then use \u003ccode\u003erequests\u003c/code\u003e library to get the data. You can use other libraries such as \u003ccode\u003eBS\u003c/code\u003e for SOAP API etc.\u003c/p\u003e\n\u003cp\u003eThere is another reason to avoid scraping, that is the website changes time to time. The layout may change, or the url may change. It will make the crawler fail or need to rework from time to time. So it is better to use API if there is any. Here is an example from Wikipedia API documentation:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erevision_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;764138197\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;https://en.wikipedia.org/w/rest.php/v1/revision/\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003erevision_id\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/bare\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;User-Agent\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;MediaWiki REST API docs examples/0.1 (https://www.mediawiki.org/wiki/API_talk:REST_API)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-regex-to-bend-the-knee\"\u003eUse Regex to bend the knee\u003c/h2\u003e\n\u003cp\u003eSometimes the data is plain in the open but you can\u0026rsquo;t grab it because you do not know how to distinguish the html element. For example, you want to see all the species and their urls from Macaw wikipedia page, but there are lots of links you do need. Then, simply use regex to determine them:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ere\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ebs4\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://en.wikipedia.org/wiki/Macaw\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esoup\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esoup\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_all\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ehref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ere\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecompile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;.*macaw\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# regex to get urls end with macaw\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"look-for-api-calls-in-using-developer-tool\"\u003eLook for API calls in using developer tool\u003c/h2\u003e\n\u003cp\u003eDynamic websites usually use API calls to get the content from the backend. You can look for these calls and use them to get data. Here is an example, if you go to the search bar on Wikipedia website, type something and open inspect element or any other developer tool. Then go to the network section and click on the XHR tab/checkbox, you should see the RESTful API calls it is making to get the data. Use the \u003ccode\u003erequests\u003c/code\u003e library to get them.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"862\" height=\"313\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 862 313'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/11/inspect_element_hu5d4d4af13a53f9dee6df2227e73445ae_54027_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/11/inspect_element_hu5d4d4af13a53f9dee6df2227e73445ae_54027_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/11/inspect_element_hu5d4d4af13a53f9dee6df2227e73445ae_54027_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/11/inspect_element_hu5d4d4af13a53f9dee6df2227e73445ae_54027_720x0_resize_q75_lanczos.jpg 720w'\n        alt='ReactJS Inspect element' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/11/inspect_element.jpg\" width=\"862\" height=\"313\" alt='ReactJS Inspect element'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eHere is a sample code to call the API:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://en.wikipedia.org/w/api.php?action=opensearch\u0026amp;format=json\u0026amp;formatversion=2\u0026amp;search=leonardo\u0026amp;namespace=0\u0026amp;limit=10\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-map-filter-functions\"\u003eUse \u003ccode\u003emap\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e functions\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003emap\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e are extremely powerful functions in Python. Using them, you can drastically reduce codes and clean up your data. Suppose you want to get data from \u003ca href=\"https://en.wikipedia.org/wiki/Django_(web_framework)\"\u003eDjango\u0026rsquo;s Wiki page\u003c/a\u003e, specifically you want to get version numbers from the releases table. The table looks like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1562\" height=\"1754\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1562 1754'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/11/wiki_django_hu7fba9da1679ce4a56c592454604cb9c1_557162_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/11/wiki_django_hu7fba9da1679ce4a56c592454604cb9c1_557162_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/11/wiki_django_hu7fba9da1679ce4a56c592454604cb9c1_557162_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/11/wiki_django_hu7fba9da1679ce4a56c592454604cb9c1_557162_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django wiki' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/11/wiki_django.jpg\" width=\"1562\" height=\"1754\" alt='django wiki'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eLet us get the table from that page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ebs4\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoup\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://en.wikipedia.org/wiki/Django_(web_framework)\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esoap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBeautifulSoap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esoap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;table\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;class\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;wikitable\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we can fetch the values from table\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evalues\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etable\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;tbody\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind_all\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;tr\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut as you can see, all the values of the table are not versions. Let us use \u003ccode\u003emap\u003c/code\u003e function to get the versions only. We know that the first column of a row is the versions column, and we can get it via \u003ccode\u003e.find()\u003c/code\u003e function of \u003ccode\u003ebs4\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evalues\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;td\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;span\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we have all the html elements from the version column. But we do not need data from the rows which do not contain any information. Time to clean it up via filter function:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evalues\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;data-sort-value\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe are almost ready, a final \u003ccode\u003emap\u003c/code\u003e function to get the value from each row and print it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;data-sort-value\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eA nice thing about using \u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003emap\u003c/code\u003e is that, they are generators; they do not hold up memory unless you execute it. Meaning until we called \u003ccode\u003elist()\u003c/code\u003e method, it was not taking any space at all.\u003c/p\u003e\n\u003ch2 id=\"if-there-is-an-excel-or-csv-file-you-are-in-luck\"\u003eIf there is an excel or csv file, you are in luck\u003c/h2\u003e\n\u003cp\u003eIf somehow you get a hold of CSV or excel data from a website, then you are lucky. If it is a CSV, then simply \u003ccode\u003ecsv\u003c/code\u003e library from python:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003ecsv\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;https://dumps.wikimedia.org/other/pagecounts-ez/wikistats/SquidDataVisitsPerCountryDaily.csv\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecsv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003edelimiter\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003erow\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ecr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erow\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you have excel file, then use \u003ca href=\"https://xlrd.readthedocs.io/en/latest/\"\u003e\u003ccode\u003exlrd\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003exlrd\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://wiki.openoffice.org/w/images/f/ff/Sample_Spreadsheet_format_all.xls\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003exlrd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen_workbook\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efile_content\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebook\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esheet_names\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBTW, \u003ca href=\"https://pandas.pydata.org\"\u003epandas\u003c/a\u003e provides excellent support for getting data from csv and excel files. Please checkout their documentation.\u003c/p\u003e\n\u003ch2 id=\"you-can-get-data-from-pdf-as-well\"\u003eYou can get data from PDF as well\u003c/h2\u003e\n\u003cp\u003eYou can scrape data from \u003cstrong\u003ePDF\u003c/strong\u003es as well. You can use a library called \u003ca href=\"https://github.com/jalan/pdftotext\"\u003e\u003ccode\u003epdftotext\u003c/code\u003e\u003c/a\u003e library which uses \u003ccode\u003epoppler\u003c/code\u003e to extract texts from PDF. But keep in mind that the data coming from PDFs are in plain text, it is really hard to identify what data you want to scrap. It is better to use regex to find data. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epdftotext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eio\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBytesIO\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://upload.wikimedia.org/wikipedia/commons/e/ef/Sample_Syllabus_for_Wikipedia_assignment.pdf\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epdf\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epdftotext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePDF\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBytesIO\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epdf\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"mimic-actions-like-login-or-form-submission\"\u003eMimic actions like login or form submission\u003c/h2\u003e\n\u003cp\u003eYou can easily mimic html form submission or actions like login using \u003ccode\u003erequests\u003c/code\u003e. Lets say, you want to submit a form on a certain website. First, use the inspect element/developer tool by browser to see what kind requests are made to the server. Probably it will be a POST request. Now see the payload, headers and url. Now use it in \u003ccode\u003erequests\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003erequests\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://example.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;Content-Type\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;application/x-www-form-urlencoded\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;User-Agent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Mozilla/5.0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;username\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;username\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequests\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSession\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/login\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eheaders\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Now you are logged in, let us get /profile page\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003ef\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/profile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"need-more-robust-solution-then-use-scrapy\"\u003eNeed more robust solution, then use \u003ccode\u003eScrapy\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eSome servers have mechanisms to prevent DDOS attacks or prevent multiple hits from a single IP. So it is better to not hit those websites in a limited interval. You can use \u003ca href=\"https://scrapy.org\"\u003e\u003ccode\u003eScrapy\u003c/code\u003e\u003c/a\u003e like solution which allows hitting from multiple IPs. They also provide ways to run multiple scrapping jobs and make the scraping process faster.\u003c/p\u003e\n\u003ch2 id=\"selenium-is-the-last-resort\"\u003e\u003ccode\u003eSelenium\u003c/code\u003e is the last resort\u003c/h2\u003e\n\u003cp\u003eYou should consider \u003ca href=\"https://selenium-python.readthedocs.io\"\u003e\u003ccode\u003eSelenium\u003c/code\u003e\u003c/a\u003e as a last resort. If you can\u0026rsquo;t crawl the website anyhow, then use Selenium. But probably you can\u0026rsquo;t scrap Facebook or Twitter like websites using it.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eScraping becomes necessary for collecting essential data which can be used on various purposes like Data Science. There are fantastic tools built using Python to help you with them. I hope this guideline will help you with getting started on scrapping. If you have any questions or opinions, please share in the comment section below. Cheers!!\u003c/p\u003e\n","content":"When it comes to web scraping, you have to keep in mind that it is not the coding skill rather cunning observations will get you results. Sometimes the data you get comes in a straight forward way, other times the website does not want you to crawl itself. Either way you will get the data, but it takes time depending on how many puzzles do you have to solve before getting it. Here are some tips to resolve these puzzles and code snippets to give you some heads up.\nTable of contents\u0026nbsp;  BeautifulSoup and requests are your friend Avoid crawling if there is an API Use Regex to bend the knee Look for API calls in using developer tool Use map, filter functions If there is an excel or csv file, you are in luck You can get data from PDF as well Mimic actions like login or form submission Need more robust solution, then use Scrapy Selenium is the last resort In conclusion    BeautifulSoup and requests are your friend requests is the best library in python for making http requests. You can get the html data as a response from any website. Then you can purse the html data using Beautiful Soap(aka BS4). Here is an example to get all the links from Wikipedia front page:\nimport requests from bs4 import BeautifulSoup response = requests.get(\u0026#34;https://wikipedia.com\u0026#34;) soap = BeautifulSoup(response.content, \u0026#39;html.parser\u0026#39;) for a in soap.find_all(\u0026#39;a\u0026#39;): print(a[\u0026#39;href\u0026#39;]) Majority of websites can be scrapped by these two libraries. A web scrapers best friends 😄.\nAvoid crawling if there is an API As said above, scraping data from the majority of websites is simple but we are not talking about Facebook or Twitter here because these websites don\u0026rsquo;t allow scraping or it may be illegal. Instead, you should look for APIs to get the needed data. So before scraping, try looking for API documentation of any site, and if it is an RESTful API, then use requests library to get the data. You can use other libraries such as BS for SOAP API etc.\nThere is another reason to avoid scraping, that is the website changes time to time. The layout may change, or the url may change. It will make the crawler fail or need to rework from time to time. So it is better to use API if there is any. Here is an example from Wikipedia API documentation:\nimport requests revision_id = \u0026#39;764138197\u0026#39; url = \u0026#39;https://en.wikipedia.org/w/rest.php/v1/revision/\u0026#39; + revision_id + \u0026#39;/bare\u0026#39; headers = {\u0026#39;User-Agent\u0026#39;: \u0026#39;MediaWiki REST API docs examples/0.1 (https://www.mediawiki.org/wiki/API_talk:REST_API)\u0026#39;} response = requests.get(url, headers=headers) data = response.json() print(data) Use Regex to bend the knee Sometimes the data is plain in the open but you can\u0026rsquo;t grab it because you do not know how to distinguish the html element. For example, you want to see all the species and their urls from Macaw wikipedia page, but there are lots of links you do need. Then, simply use regex to determine them:\nimport re import requests from bs4 import BeautifulSoup response = requests.get(\u0026#34;https://en.wikipedia.org/wiki/Macaw\u0026#34;) soup = BeautifulSoup(response.content) print(soup.find_all(\u0026#39;a\u0026#39;, href = re.compile(r\u0026#39;.*macaw\u0026#39;))) # regex to get urls end with macaw Look for API calls in using developer tool Dynamic websites usually use API calls to get the content from the backend. You can look for these calls and use them to get data. Here is an example, if you go to the search bar on Wikipedia website, type something and open inspect element or any other developer tool. Then go to the network section and click on the XHR tab/checkbox, you should see the RESTful API calls it is making to get the data. Use the requests library to get them.\n   Here is a sample code to call the API:\nimport requests url = \u0026#34;https://en.wikipedia.org/w/api.php?action=opensearch\u0026amp;format=json\u0026amp;formatversion=2\u0026amp;search=leonardo\u0026amp;namespace=0\u0026amp;limit=10\u0026#34; print(requests.get(url).json()) Use map, filter functions map, filter are extremely powerful functions in Python. Using them, you can drastically reduce codes and clean up your data. Suppose you want to get data from Django\u0026rsquo;s Wiki page, specifically you want to get version numbers from the releases table. The table looks like this:\n   Let us get the table from that page:\nimport requests from bs4 import BeautifulSoup url = \u0026#34;https://en.wikipedia.org/wiki/Django_(web_framework)\u0026#34; response = requests.get(url) soap = BeautifulSoap(response.content) table = soap.find(\u0026#39;table\u0026#39;, {\u0026#39;class\u0026#39;: \u0026#39;wikitable\u0026#39;}) Now we can fetch the values from table\nvalues = table.find(\u0026#39;tbody\u0026#39;).find_all(\u0026#39;tr\u0026#39;) But as you can see, all the values of the table are not versions. Let us use map function to get the versions only. We know that the first column of a row is the versions column, and we can get it via .find() function of bs4.\nvalues = map(lambda x: x.find(\u0026#39;td\u0026#39;).find(\u0026#39;span\u0026#39;).value, values) Now we have all the html elements from the version column. But we do not need data from the rows which do not contain any information. Time to clean it up via filter function:\nvalues = filter(lambda x: x!= None and x.get(\u0026#39;data-sort-value\u0026#39;), values) We are almost ready, a final map function to get the value from each row and print it.\nprint(list(map(lambda x: x.get(\u0026#39;data-sort-value\u0026#39;), values))) A nice thing about using filter and map is that, they are generators; they do not hold up memory unless you execute it. Meaning until we called list() method, it was not taking any space at all.\nIf there is an excel or csv file, you are in luck If somehow you get a hold of CSV or excel data from a website, then you are lucky. If it is a CSV, then simply csv library from python:\nimport csv import requests url = \u0026#39;https://dumps.wikimedia.org/other/pagecounts-ez/wikistats/SquidDataVisitsPerCountryDaily.csv\u0026#39; cr = csv.reader(requests.get(url).content.decode(), delimiter=\u0026#39;,\u0026#39;) for row in cr: print(row) If you have excel file, then use xlrd:\nimport xlrd url = \u0026#34;https://wiki.openoffice.org/w/images/f/ff/Sample_Spreadsheet_format_all.xls\u0026#34; book = xlrd.open_workbook(file_content=requests.get(url).content) print(book.sheet_names()) BTW, pandas provides excellent support for getting data from csv and excel files. Please checkout their documentation.\nYou can get data from PDF as well You can scrape data from PDFs as well. You can use a library called pdftotext library which uses poppler to extract texts from PDF. But keep in mind that the data coming from PDFs are in plain text, it is really hard to identify what data you want to scrap. It is better to use regex to find data. For example:\nimport pdftotext from io import BytesIO import requests url = \u0026#34;https://upload.wikimedia.org/wikipedia/commons/e/ef/Sample_Syllabus_for_Wikipedia_assignment.pdf\u0026#34; response = requests.get(url) pdf = pdftotext.PDF(BytesIO(response.content)) text = print(\u0026#34;\\n\\n\u0026#34;.join(pdf)) Mimic actions like login or form submission You can easily mimic html form submission or actions like login using requests. Lets say, you want to submit a form on a certain website. First, use the inspect element/developer tool by browser to see what kind requests are made to the server. Probably it will be a POST request. Now see the payload, headers and url. Now use it in requests:\nimport requests url = \u0026#34;https://example.com\u0026#34; headers = { \u0026#39;Content-Type\u0026#39;: \u0026#39;application/x-www-form-urlencoded\u0026#39;, \u0026#34;User-Agent\u0026#34;:\u0026#34;Mozilla/5.0\u0026#34; } payload = { \u0026#34;username\u0026#34;: \u0026#34;username\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;password\u0026#34; } session = requests.Session() resp = session.post(f\u0026#34;{url}/login\u0026#34;, headers=headers, data=payload) # Now you are logged in, let us get /profile page resp.get(f\u0026#34;{url}/profile\u0026#34;) Need more robust solution, then use Scrapy Some servers have mechanisms to prevent DDOS attacks or prevent multiple hits from a single IP. So it is better to not hit those websites in a limited interval. You can use Scrapy like solution which allows hitting from multiple IPs. They also provide ways to run multiple scrapping jobs and make the scraping process faster.\nSelenium is the last resort You should consider Selenium as a last resort. If you can\u0026rsquo;t crawl the website anyhow, then use Selenium. But probably you can\u0026rsquo;t scrap Facebook or Twitter like websites using it.\nIn conclusion Scraping becomes necessary for collecting essential data which can be used on various purposes like Data Science. There are fantastic tools built using Python to help you with them. I hope this guideline will help you with getting started on scrapping. If you have any questions or opinions, please share in the comment section below. Cheers!!\n","description":"Some key concepts, functions and tools you must know before web scrapping using Python."},{"date_published":"2020-07-20T15:53:45+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"July 20, 2020","id":"https://ruddra.com/hugo-get-perfect-pagespeed-score/","url":"https://ruddra.com/hugo-get-perfect-pagespeed-score/","title":"Hugo: Get Perfect Score in Google PageSpeed","image":"https://ruddra.com/content/images/2020/07/perfect.jpg","tags":["Hugo"],"content_html":"\u003cp\u003eYou will see many Hugo themes boast perfect scores on Google \u003ca href=\"https://developers.google.com/speed/pagespeed/insights/\"\u003ePageSpeed Insights(PSI)\u003c/a\u003e. To be honest, most of them are not as pretty as others and lack a significant amount of JavaScript(or no JavaScript at all). But, it does not matter anymore. Because you can use any theme(or develop on your own) and get an almost perfect score in \u003cstrong\u003ePSI\u003c/strong\u003e if you implement the following steps.\u003c/p\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#minify-split-and-reduce-render-blocking-css\"\u003eMinify, split and reduce render-blocking CSS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#preload-crucial-javascript-code-and-defer-rest\"\u003ePreload crucial JavaScript code and defer rest\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#responsive-images-with-lazy-loading\"\u003eResponsive images with lazy loading\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#minify-html-and-other-assets\"\u003eMinify HTML and other assets\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"minify-split-and-reduce-render-blocking-css\"\u003eMinify, split and reduce render-blocking CSS\u003c/h2\u003e\n\u003cp\u003eWe know that CSS files are render-blocking resources: they must be loaded and processed before the browser renders the page. But there is a way to defer CSS files so that it does not block rendering and will improve our \u003ca href=\"https://web.dev/first-contentful-paint/\"\u003eFirst Contentful Paint(FCP)\u003c/a\u003e score.\u003c/p\u003e\n\u003cp\u003eFor this implementation, we need to divide our CSS files into two groups. One is bare minimum to display the structure of the page, and rest of the CSS. Then we can minify both CSS groups using \u003ca href=\"https://gohugo.io/hugo-pipes/\"\u003eHugo Pipes\u003c/a\u003e, and render bare minimum CSS inline and defer the rest of the files. Here is the code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $baseCSS := resources.Get \u0026#34;css/base.css\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $restCSS := resources.Get \u0026#34;css/restOf.css\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $bootstrapCSS := resources.Get \u0026#34;css/bootstrap.css\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $overrideCSS := resources.Get \u0026#34;css/override.css\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $inlineCSS := $baseCSS | resources.Minify }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text/CSS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e \u003cspan class=\"err\"\u003e$inlineCSS.Content\u003c/span\u003e \u003cspan class=\"err\"\u003e|\u003c/span\u003e \u003cspan class=\"err\"\u003esafeCSS\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003estyle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $style := slice $restCSS $bootstrapCSS $overrideCSS | resources.Concat \u0026#34;css/defer.css\u0026#34; | resources.Minify | fingerprint }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;stylesheet\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{ $style.RelPermalink }}\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003emedia\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;print\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eonload\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;this.media=\u0026#39;all\u0026#39;; this.onload=null;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see, we are loading the bare minimum CSS with style tag \u003ccode\u003e\u0026lt;style\u0026gt;{{ $CSSMin.Content | safeCSS }}\u0026lt;/style\u0026gt;\u003c/code\u003e so that the browser starts processing them immediately after page loads, while deferring non-critical CSS for later.\u003c/p\u003e\n\u003ch2 id=\"preload-crucial-javascript-code-and-defer-rest\"\u003ePreload crucial JavaScript code and defer rest\u003c/h2\u003e\n\u003cp\u003eDoing these steps will reduce \u003cstrong\u003eFCP\u003c/strong\u003e, \u003ca href=\"https://web.dev/interactive/\"\u003eTime to Interactive(TTI)\u003c/a\u003e and \u003ca href=\"https://web.dev/tbt/\"\u003eTotal Blocking Time(TBT)\u003c/a\u003e. We can take a similar approach to that of CSS here. First, we are going to split JavaScript codes into two groups, then load the compulsory JS code, and will load the rest asynchronously. But we are going to \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content\"\u003epreload content\u003c/a\u003e, which should help reduce render time.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $basejs := resources.Get \u0026#34;js/base.js\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $baseJSMin := $basejs | resources.Minify | fingerprint}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;preload\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{ $baseJSMin.RelPermalink }}\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eas\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;script\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $restJS := resources.Get \u0026#34;js/rest.js\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $jquery := resources.Get \u0026#34;js/JQuery.js\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $js := slice $restJS $jquery $overrideCSS | resources.Concat \u0026#34;js/bundle.js\u0026#34; | resources.Minify | fingerprint }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{$baseJSMin.RelPermalink}}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e \u003cspan class=\"na\"\u003edefer\u003c/span\u003e \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{ $js.RelPermalink }}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can see here that \u003ccode\u003e$baseJSMin\u003c/code\u003e(crucial JavaScript file) is being preloaded in \u003ccode\u003ehead\u003c/code\u003e, and finally being loaded in the \u003ccode\u003escript\u003c/code\u003e tag.\u003c/p\u003e\n\u003ch2 id=\"responsive-images-with-lazy-loading\"\u003eResponsive images with lazy loading\u003c/h2\u003e\n\u003cp\u003eHugo provides fantastic support for \u003ca href=\"https://gohugo.io/content-management/image-processing/\"\u003eimage processing\u003c/a\u003e. Using that, we are going to generate images of multiple sizes(basically resize them), and load them using a JavaScript library.\u003c/p\u003e\n\u003cp\u003eWe will be using \u003ca href=\"https://apoorv.pro/lozad.js/\"\u003eLozad.js\u003c/a\u003e for lazy loading images. For that, we need to add it to HTML(I am using CDN here):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;preload\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003eas\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;script\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003elink\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text/javascript\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we need to create a \u003ca href=\"https://gohugo.io/content-management/shortcodes/\"\u003eshortcode\u003c/a\u003e for rendering images. Let us name it \u003ccode\u003erender_image.html\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHugo Project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── content\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── layouts\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── shortcodes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│      ├── render_image.html\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd add the following code inside \u003ccode\u003erender_image.html\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $src := resources.Get (.Get \u0026#34;src\u0026#34;) }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $lqipw := default \u0026#34;20x\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $smallw := default \u0026#34;500x\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $mediumw := default \u0026#34;600x\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $largew := default \u0026#34;720x\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $lqip := $src.Resize $lqipw }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $small := $src.Resize $smallw }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $medium := $src.Resize $mediumw }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $large := $src.Resize $largew }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ $img := imageConfig(printf \u0026#34;/static/%s\u0026#34; ( .Get \u0026#34;src\u0026#34;))  }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimg\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lozad\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003esrc\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{ $lqip.RelPermalink }}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003edata-src\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{{ $lqip.RelPermalink}}\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-srcset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;{{ with $small.RelPermalink }}{{.}} 500w{{ end }}{{ if ge $src.Width \u0026#34;600\u0026#34; }},{{ with $medium.RelPermalink }}{{.}} 600w{{ end }}{{ end }}{{ if ge $src.Width \u0026#34;720\u0026#34; }},{{ with $large.RelPermalink }}{{.}} 720w{{ end }}{{ end }}\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003ealt\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;{{ .Get \u0026#34;title\u0026#34; }}\u0026#39;\u003c/span\u003e \u003cspan class=\"na\"\u003edata-sizes\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;440w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we need to replace all image tags in markdown (ie \u003ccode\u003e![my title](/content/image.jpg)\u003c/code\u003e) with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-md\" data-lang=\"md\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ render_image src=\u0026#34;/content/image.jpg\u0026#34; title=\u0026#34;my title\u0026#34; }}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can notice that we are loading a bare minimum version of image(\u003ccode\u003esrc=\u0026quot;{{ $lqip.RelPermalink }}\u0026quot;\u003c/code\u003e) initially(before loading the actual image). It will improve \u003ca href=\"https://web.dev/cls/\"\u003eCumulative Layout Shift(CLS)\u003c/a\u003e score as contents won\u0026rsquo;t jump as you scroll down.\u003c/p\u003e\n\u003cp\u003eAlso reducing image size will help us with \u003ca href=\"https://web.dev/lcp/\"\u003eLargest Contentful Paint(LCP)\u003c/a\u003e score and \u003cstrong\u003eFCP\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eI got the idea for this implementation from an \u003ca href=\"https://dev.to/stereobooster/responsive-images-for-hugo-dn9\"\u003earticle on dev.to\u003c/a\u003e which provides more detail on how to implement responsive images.\u003c/p\u003e\n\u003ch2 id=\"minify-html-and-other-assets\"\u003eMinify HTML and other assets\u003c/h2\u003e\n\u003cp\u003eNow it is time for us to minify HTML files and rest of the assets. We can use this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehugo --minify\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis command will generate all the minified files along with HTML and store them in \u003ccode\u003e/public\u003c/code\u003e folder.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThis article is based on tips given in \u003ca href=\"https://web.dev/fast/\"\u003ehttps://web.dev/fast/\u003c/a\u003e. I tried to cover as much as possible for improving scores based on Hugo. But I could not cover things like Caching, improving Speed Index etc, because these are dependent on your setup. If you find any problem, please share via the comment section below. Cheers!!\u003c/p\u003e\n","content":"You will see many Hugo themes boast perfect scores on Google PageSpeed Insights(PSI). To be honest, most of them are not as pretty as others and lack a significant amount of JavaScript(or no JavaScript at all). But, it does not matter anymore. Because you can use any theme(or develop on your own) and get an almost perfect score in PSI if you implement the following steps.\nTable of contents\u0026nbsp;  Minify, split and reduce render-blocking CSS Preload crucial JavaScript code and defer rest Responsive images with lazy loading Minify HTML and other assets In conclusion    Minify, split and reduce render-blocking CSS We know that CSS files are render-blocking resources: they must be loaded and processed before the browser renders the page. But there is a way to defer CSS files so that it does not block rendering and will improve our First Contentful Paint(FCP) score.\nFor this implementation, we need to divide our CSS files into two groups. One is bare minimum to display the structure of the page, and rest of the CSS. Then we can minify both CSS groups using Hugo Pipes, and render bare minimum CSS inline and defer the rest of the files. Here is the code:\n\u0026lt;head\u0026gt; {{ $baseCSS := resources.Get \u0026#34;css/base.css\u0026#34; }} {{ $restCSS := resources.Get \u0026#34;css/restOf.css\u0026#34; }} {{ $bootstrapCSS := resources.Get \u0026#34;css/bootstrap.css\u0026#34; }} {{ $overrideCSS := resources.Get \u0026#34;css/override.css\u0026#34; }} {{ $inlineCSS := $baseCSS | resources.Minify }} \u0026lt;style type=\u0026#34;text/CSS\u0026#34;\u0026gt; {{ $inlineCSS.Content | safeCSS }} \u0026lt;/style\u0026gt; {{ $style := slice $restCSS $bootstrapCSS $overrideCSS | resources.Concat \u0026#34;css/defer.css\u0026#34; | resources.Minify | fingerprint }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{ $style.RelPermalink }}\u0026#34; media=\u0026#34;print\u0026#34; onload=\u0026#34;this.media=\u0026#39;all\u0026#39;; this.onload=null;\u0026#34;\u0026gt; \u0026lt;head\u0026gt; As you can see, we are loading the bare minimum CSS with style tag \u0026lt;style\u0026gt;{{ $CSSMin.Content | safeCSS }}\u0026lt;/style\u0026gt; so that the browser starts processing them immediately after page loads, while deferring non-critical CSS for later.\nPreload crucial JavaScript code and defer rest Doing these steps will reduce FCP, Time to Interactive(TTI) and Total Blocking Time(TBT). We can take a similar approach to that of CSS here. First, we are going to split JavaScript codes into two groups, then load the compulsory JS code, and will load the rest asynchronously. But we are going to preload content, which should help reduce render time.\n\u0026lt;head\u0026gt; ... {{ $basejs := resources.Get \u0026#34;js/base.js\u0026#34; }} {{ $baseJSMin := $basejs | resources.Minify | fingerprint}} \u0026lt;link rel=\u0026#34;preload\u0026#34; href=\u0026#34;{{ $baseJSMin.RelPermalink }}\u0026#34; as=\u0026#34;script\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; ... {{ $restJS := resources.Get \u0026#34;js/rest.js\u0026#34; }} {{ $jquery := resources.Get \u0026#34;js/JQuery.js\u0026#34; }} {{ $js := slice $restJS $jquery $overrideCSS | resources.Concat \u0026#34;js/bundle.js\u0026#34; | resources.Minify | fingerprint }} \u0026lt;script src=\u0026#34;{{$baseJSMin.RelPermalink}}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;{{ $js.RelPermalink }}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; You can see here that $baseJSMin(crucial JavaScript file) is being preloaded in head, and finally being loaded in the script tag.\nResponsive images with lazy loading Hugo provides fantastic support for image processing. Using that, we are going to generate images of multiple sizes(basically resize them), and load them using a JavaScript library.\nWe will be using Lozad.js for lazy loading images. For that, we need to add it to HTML(I am using CDN here):\n\u0026lt;head\u0026gt; ... \u0026lt;link rel=\u0026#34;preload\u0026#34; as=\u0026#34;script\u0026#34; link=\u0026#34;https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js\u0026#34; /\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; Now we need to create a shortcode for rendering images. Let us name it render_image.html:\nHugo Project ├── content ├── layouts │ └── shortcodes │ ├── render_image.html And add the following code inside render_image.html file:\n{{ $src := resources.Get (.Get \u0026#34;src\u0026#34;) }} {{ $lqipw := default \u0026#34;20x\u0026#34; }} {{ $smallw := default \u0026#34;500x\u0026#34; }} {{ $mediumw := default \u0026#34;600x\u0026#34; }} {{ $largew := default \u0026#34;720x\u0026#34; }} {{ $lqip := $src.Resize $lqipw }} {{ $small := $src.Resize $smallw }} {{ $medium := $src.Resize $mediumw }} {{ $large := $src.Resize $largew }} {{ $img := imageConfig(printf \u0026#34;/static/%s\u0026#34; ( .Get \u0026#34;src\u0026#34;)) }} \u0026lt;img class=\u0026#34;lozad\u0026#34; src=\u0026#34;{{ $lqip.RelPermalink }}\u0026#34; data-src=\u0026#34;{{ $lqip.RelPermalink}}\u0026#34; data-srcset=\u0026#39;{{ with $small.RelPermalink }}{{.}} 500w{{ end }}{{ if ge $src.Width \u0026#34;600\u0026#34; }},{{ with $medium.RelPermalink }}{{.}} 600w{{ end }}{{ end }}{{ if ge $src.Width \u0026#34;720\u0026#34; }},{{ with $large.RelPermalink }}{{.}} 720w{{ end }}{{ end }}\u0026#39; alt=\u0026#39;{{ .Get \u0026#34;title\u0026#34; }}\u0026#39; data-sizes=\u0026#34;440w\u0026#34;\u0026gt; Now we need to replace all image tags in markdown (ie ![my title](/content/image.jpg)) with:\n{{ render_image src=\u0026#34;/content/image.jpg\u0026#34; title=\u0026#34;my title\u0026#34; }} You can notice that we are loading a bare minimum version of image(src=\u0026quot;{{ $lqip.RelPermalink }}\u0026quot;) initially(before loading the actual image). It will improve Cumulative Layout Shift(CLS) score as contents won\u0026rsquo;t jump as you scroll down.\nAlso reducing image size will help us with Largest Contentful Paint(LCP) score and FCP.\nI got the idea for this implementation from an article on dev.to which provides more detail on how to implement responsive images.\nMinify HTML and other assets Now it is time for us to minify HTML files and rest of the assets. We can use this command:\nhugo --minify This command will generate all the minified files along with HTML and store them in /public folder.\nIn conclusion This article is based on tips given in https://web.dev/fast/. I tried to cover as much as possible for improving scores based on Hugo. But I could not cover things like Caching, improving Speed Index etc, because these are dependent on your setup. If you find any problem, please share via the comment section below. Cheers!!\n","description":"Hugo is lightening fast, but with JS and CSS files, it can't ensure high PSI score. Here is how to get it."},{"date_published":"2020-06-20T15:53:45+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"June 20, 2020","id":"https://ruddra.com/hugo-implement-pwa/","url":"https://ruddra.com/hugo-implement-pwa/","title":"Progressive Web App in Hugo using GitHub Actions","image":"https://ruddra.com/content/images/2020/06/pwa.jpg","tags":["Hugo","GitHub"],"content_html":"\u003cp\u003eWe all know or heard of \u003ca href=\"https://web.dev/what-are-pwas/\"\u003eProgressive Web Apps\u003c/a\u003e. I wanted to implement it because it enables web applications workable in offline, like a native app. Also it provides content faster by caching them.\u003c/p\u003e\n\u003cp\u003eWith help of github actions and gulp, we can easily add it to a static site deployed in Github pages. In this article, we are going to see how to do that. We will be using Hugo as a static site generator, you can use any kind of static site generator like Gatsby, Next.JS etc.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you do not have a Github Actions setup for your deployment, then please check \u003ca href=\"/hugo-deploy-static-page-using-github-actions/\"\u003ethis article\u003c/a\u003e to setup one.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#add-manifest-file\"\u003eAdd manifest file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#install-dependencies\"\u003eInstall dependencies\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-gulpfilejs\"\u003eCreate \u003ccode\u003egulpfile.js\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#register-service-worker\"\u003eRegister service worker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#define-github-actions\"\u003eDefine Github Actions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploy-and-test\"\u003eDeploy and test\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#acknowledgment\"\u003eAcknowledgment\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"add-manifest-file\"\u003eAdd manifest file\u003c/h2\u003e\n\u003cp\u003eYou need to create a manifest file inside \u003ccode\u003estatic\u003c/code\u003e folder of hugo. It can look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;My Website\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;short_name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;MW\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;icons\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;src\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/favicon-16x16.png\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;sizes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;16x16\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;image/png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;src\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/favicon-32x32.png\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;sizes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;32x32\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;image/png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;src\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/img-192x192.png\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;sizes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;192x192\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;image/png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;src\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/img-512x512.png\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;sizes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;512x512\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;image/png\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;theme_color\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;#000000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;background_color\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;#ffffff\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;display\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;standalone\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;start_url\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;scope\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;orientation\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;portrait\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd add a link to it in your header section of html page:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003elink\u003c/span\u003e \u003cspan class=\"na\"\u003erel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;manifest\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/manifest.json\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"install-dependencies\"\u003eInstall dependencies\u003c/h2\u003e\n\u003cp\u003eWe are going to use gulp and workbox package for adding PWA. We can install them via NPM, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enpm init -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003enpm install --save-dev gulp gulp-shell workbox-build\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-gulpfilejs\"\u003eCreate \u003ccode\u003egulpfile.js\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eNow we are going to create the \u003ccode\u003egulpfile.js\u003c/code\u003e. Then we are going to add the following lines:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003egulp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;gulp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eshell\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;gulp-shell\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eworkbox\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;workbox-build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egulp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;hugo-build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eshell\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;hugo --minify\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]));\u003c/span\u003e \u003cspan class=\"c1\"\u003e// this can change depending on which static generator you are using.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egulp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;generate-service-worker\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eworkbox\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egenerateSW\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ecacheId\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;yourCacheID\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eglobDirectory\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./public\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// the directory where static file is stored\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nx\"\u003eswDest\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./public/sw.js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// destination of sw.js file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nx\"\u003eglobPatterns\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;**/*.{js,css,html}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003enavigateFallback\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/404.html\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// fallback file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nx\"\u003eglobIgnores\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;**/index.xml\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;**/index.json\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;**/sitemap.xml\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eruntimeCaching\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003eurlPattern\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\\.(?:png|jpg|jpeg|gif|bmp|webp|svg|ico)$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;CacheFirst\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003eurlPattern\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\\.(?:json|xml)$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003ehandler\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;NetworkOnly\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003egulp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003egulp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eseries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;hugo-build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;generate-service-worker\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFYI, you need to configure \u003ccode\u003eglobDirectory\u003c/code\u003e to the directory where static files are generated and \u003ccode\u003eswDest\u003c/code\u003e to the directory where service worker file will be stored. Also, we have defined \u003ccode\u003ehugo-build\u003c/code\u003e which will generate the files for static site. It may change depending on which framework you are using.\u003c/p\u003e\n\u003cp\u003eThen we will create a \u003ccode\u003ebuild\u003c/code\u003e task in \u003ccode\u003epackage.json\u003c/code\u003e using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;scripts\u0026#34;\u003c/span\u003e\u003cspan class=\"err\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;build\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;gulp build\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen we can run \u003ccode\u003enpm run build\u003c/code\u003e, and see that a \u003ccode\u003esw.js\u003c/code\u003e file has been generated inside \u003ccode\u003e./public/\u003c/code\u003e directory.\u003c/p\u003e\n\u003ch2 id=\"register-service-worker\"\u003eRegister service worker\u003c/h2\u003e\n\u003cp\u003eNow we need to register the \u003ca href=\"https://developers.google.com/web/fundamentals/primers/service-workers/\"\u003eservice worker\u003c/a\u003e in html at the bottom of the body tag:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;serviceWorker\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;load\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eserviceWorker\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/sw.js\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eswReg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003ecatch\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Service Worker Error\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eerr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"define-github-actions\"\u003eDefine Github Actions\u003c/h2\u003e\n\u003cp\u003eNow we are going to update our github action file(\u003ccode\u003e.github/workflows/main.yml\u003c/code\u003e) to add Node and build service work file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCI\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epush\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edeploy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eubuntu-18.04\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGit checkout\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetup hugo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeaceiris/actions-hugo@v2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehugo-version\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0.64.0\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eInstall Node\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/setup-node@v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003enode-version\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;12\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBuild\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e          npm install\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e          npm run build\u003c/span\u003e\u003cspan class=\"w\"\u003e          \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeploy\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeaceiris/actions-gh-pages@v3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epersonal_token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.TOKEN }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eexternal_repository\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epublish_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./public\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euser_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euser_email\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username@email.com\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epublish_branch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emaster\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCool! We are almost ready.\u003c/p\u003e\n\u003ch2 id=\"deploy-and-test\"\u003eDeploy and test\u003c/h2\u003e\n\u003cp\u003eNow we are going to push our changes to Github and then see if the changes are there in your website after successful deployment. If you have chrome, then go to your website and open \u003ccode\u003eInspect Element\u003c/code\u003e and then click on \u003ccode\u003eApplications\u003c/code\u003e tab. Then you should see something like this if you click on \u003ccode\u003eService Worker\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1252\" height=\"1016\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1252 1016'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/06/service_worker_hu7fba9da1679ce4a56c592454604cb9c1_163315_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/06/service_worker_hu7fba9da1679ce4a56c592454604cb9c1_163315_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/06/service_worker_hu7fba9da1679ce4a56c592454604cb9c1_163315_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/06/service_worker_hu7fba9da1679ce4a56c592454604cb9c1_163315_720x0_resize_q75_lanczos.jpg 720w'\n        alt='sw' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/06/service_worker.jpg\" width=\"1252\" height=\"1016\" alt='sw'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIf you want to test in your local machine, then install a http server using \u003ccode\u003enpm install -g http-server\u003c/code\u003e, and run it using \u003ccode\u003ehttp-server\u003c/code\u003e, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;\u0026gt; http-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eStarting up http-server, serving ./public\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAvailable on:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  http://127.0.0.1:8080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  http://192.168.68.107:8080\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHit CTRL-C to stop the server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen check for service worker same as above(from \u003ccode\u003eInspect Element \u0026gt; Applications\u003c/code\u003e).\u003c/p\u003e\n\u003cp\u003eYou can test with \u003ca href=\"https://developers.google.com/web/tools/lighthouse\"\u003elighthouse\u003c/a\u003e as well, and it should look like this 😉\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1156\" height=\"424\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1156 424'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/06/seo_hu7fba9da1679ce4a56c592454604cb9c1_62369_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/06/seo_hu7fba9da1679ce4a56c592454604cb9c1_62369_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/06/seo_hu7fba9da1679ce4a56c592454604cb9c1_62369_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/06/seo_hu7fba9da1679ce4a56c592454604cb9c1_62369_720x0_resize_q75_lanczos.jpg 720w'\n        alt='seo' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/06/seo.jpg\" width=\"1156\" height=\"424\" alt='seo'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003ePWA is a BIG thing now, giving your website more robust experience and awesome features like offline browsing. With Github actions, you can easily integrate it with your website.\u003c/p\u003e\n\u003cp\u003eIf you have any questions or a better solution, let us talk in the comment section below.\u003c/p\u003e\n\u003ch2 id=\"acknowledgment\"\u003eAcknowledgment\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.thepolyglotdeveloper.com/2019/03/service-workers-workbox-hugo-static-generated-site/\"\u003ePolyglot Service Worker Article\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developers.google.com/web/tools/workbox/guides/codelabs/npm-script\"\u003eWorkbox documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.jeremylikness.com/blog/implement-progressive-web-app-hugo/\"\u003eJeremy Likeness\u0026rsquo;s Article on PWA\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","content":"We all know or heard of Progressive Web Apps. I wanted to implement it because it enables web applications workable in offline, like a native app. Also it provides content faster by caching them.\nWith help of github actions and gulp, we can easily add it to a static site deployed in Github pages. In this article, we are going to see how to do that. We will be using Hugo as a static site generator, you can use any kind of static site generator like Gatsby, Next.JS etc.\n If you do not have a Github Actions setup for your deployment, then please check this article to setup one.\n Table of contents\u0026nbsp;  Add manifest file Install dependencies Create gulpfile.js Register service worker Define Github Actions Deploy and test In conclusion Acknowledgment    Add manifest file You need to create a manifest file inside static folder of hugo. It can look like this:\n{ \u0026#34;name\u0026#34;: \u0026#34;My Website\u0026#34;, \u0026#34;short_name\u0026#34;: \u0026#34;MW\u0026#34;, \u0026#34;icons\u0026#34;: [ { \u0026#34;src\u0026#34;: \u0026#34;/favicon-16x16.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;16x16\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34; }, { \u0026#34;src\u0026#34;: \u0026#34;/favicon-32x32.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;32x32\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34; }, { \u0026#34;src\u0026#34;: \u0026#34;/img-192x192.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;192x192\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34; }, { \u0026#34;src\u0026#34;: \u0026#34;/img-512x512.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;512x512\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34; } ], \u0026#34;theme_color\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;background_color\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;display\u0026#34;: \u0026#34;standalone\u0026#34;, \u0026#34;start_url\u0026#34;: \u0026#34;/\u0026#34;, \u0026#34;scope\u0026#34;: \u0026#34;/\u0026#34;, \u0026#34;orientation\u0026#34;: \u0026#34;portrait\u0026#34; } And add a link to it in your header section of html page:\n\u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;/manifest.json\u0026#34; /\u0026gt; Install dependencies We are going to use gulp and workbox package for adding PWA. We can install them via NPM, like this:\nnpm init -y npm install --save-dev gulp gulp-shell workbox-build Create gulpfile.js Now we are going to create the gulpfile.js. Then we are going to add the following lines:\nconst gulp = require(\u0026#34;gulp\u0026#34;); const shell = require(\u0026#34;gulp-shell\u0026#34;); const workbox = require(\u0026#34;workbox-build\u0026#34;); gulp.task(\u0026#34;hugo-build\u0026#34;, shell.task([\u0026#34;hugo --minify\u0026#34;])); // this can change depending on which static generator you are using.  gulp.task(\u0026#34;generate-service-worker\u0026#34;, () =\u0026gt; { return workbox.generateSW({ cacheId: \u0026#34;yourCacheID\u0026#34;, globDirectory: \u0026#34;./public\u0026#34;, // the directory where static file is stored  swDest: \u0026#34;./public/sw.js\u0026#34;, // destination of sw.js file  globPatterns: [\u0026#34;**/*.{js,css,html}\u0026#34;], navigateFallback: \u0026#34;/404.html\u0026#34;, // fallback file  globIgnores: [\u0026#34;**/index.xml\u0026#34;, \u0026#34;**/index.json\u0026#34;, \u0026#34;**/sitemap.xml\u0026#34;], runtimeCaching: [ { urlPattern: /\\.(?:png|jpg|jpeg|gif|bmp|webp|svg|ico)$/, handler: \u0026#34;CacheFirst\u0026#34;, }, { urlPattern: /\\.(?:json|xml)$/, handler: \u0026#34;NetworkOnly\u0026#34;, }, ], }); }); gulp.task(\u0026#34;build\u0026#34;, gulp.series(\u0026#34;hugo-build\u0026#34;, \u0026#34;generate-service-worker\u0026#34;)); FYI, you need to configure globDirectory to the directory where static files are generated and swDest to the directory where service worker file will be stored. Also, we have defined hugo-build which will generate the files for static site. It may change depending on which framework you are using.\nThen we will create a build task in package.json using:\n\u0026#34;scripts\u0026#34;: { \u0026#34;build\u0026#34;: \u0026#34;gulp build\u0026#34; }, Then we can run npm run build, and see that a sw.js file has been generated inside ./public/ directory.\nRegister service worker Now we need to register the service worker in html at the bottom of the body tag:\n\u0026lt;script\u0026gt; if (\u0026#34;serviceWorker\u0026#34; in navigator) { window.addEventListener(\u0026#34;load\u0026#34;, () =\u0026gt; { navigator.serviceWorker .register(\u0026#34;/sw.js\u0026#34;) .then((swReg) =\u0026gt; {}) .catch((err) =\u0026gt; { console.error(\u0026#34;Service Worker Error\u0026#34;, err); }); }); } \u0026lt;/script\u0026gt; Define Github Actions Now we are going to update our github action file(.github/workflows/main.yml) to add Node and build service work file.\nname:CIon:pushjobs:deploy:runs-on:ubuntu-18.04steps:- name:Git checkoutuses:actions/checkout@v2- name:Setup hugouses:peaceiris/actions-hugo@v2with:hugo-version:\u0026#34;0.64.0\u0026#34;- name:Install Nodeuses:actions/setup-node@v1with:node-version:\u0026#34;12\u0026#34;- name:Buildrun:|npm install npm run build- name:Deployuses:peaceiris/actions-gh-pages@v3with:personal_token:${{ secrets.TOKEN }}external_repository:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.iopublish_dir:./publicuser_name:\u0026lt;username\u0026gt;user_email:\u0026lt;username@email.com\u0026gt;publish_branch:masterCool! We are almost ready.\nDeploy and test Now we are going to push our changes to Github and then see if the changes are there in your website after successful deployment. If you have chrome, then go to your website and open Inspect Element and then click on Applications tab. Then you should see something like this if you click on Service Worker:\n   If you want to test in your local machine, then install a http server using npm install -g http-server, and run it using http-server, like this:\n\u0026gt;\u0026gt; http-server Starting up http-server, serving ./public Available on: http://127.0.0.1:8080 http://192.168.68.107:8080 Hit CTRL-C to stop the server Then check for service worker same as above(from Inspect Element \u0026gt; Applications).\nYou can test with lighthouse as well, and it should look like this 😉\n   In conclusion PWA is a BIG thing now, giving your website more robust experience and awesome features like offline browsing. With Github actions, you can easily integrate it with your website.\nIf you have any questions or a better solution, let us talk in the comment section below.\nAcknowledgment  Polyglot Service Worker Article Workbox documentation Jeremy Likeness\u0026rsquo;s Article on PWA  ","description":"Implement a Progressive Web App in your Hugo based static site using GitHub Actions."},{"date_published":"2020-06-09T16:04:41+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"June 9, 2020","id":"https://ruddra.com/hugo-add-toc-anywhere/","url":"https://ruddra.com/hugo-add-toc-anywhere/","title":"Hugo: Add Table of Contents Anywhere in Markdown File","image":"https://ruddra.com/content/images/2020/06/toc.jpg","tags":["Hugo","Markdown"],"content_html":"\u003cp\u003eHugo provides a built-in module named \u003ca href=\"https://gohugo.io/content-management/toc/\"\u003e\u003ccode\u003e{{ .TableOfContents }}\u003c/code\u003e\u003c/a\u003e to generate table of contents. It is pretty handy because it generates the table of content without help of any JavaScript or CSS code. But there is a problem with it, you need to put it inside templates. You can\u0026rsquo;t render it inside the contents of the markdown file. Means you will be able to render it either at top, or at the bottom of your contents.\u003c/p\u003e\n\u003cp\u003eUsually I prefer to have a small introduction and rest of the contents, have a table of content in between them(like this article).Now we are going to see how to do that using \u003ca href=\"https://gohugo.io/templates/shortcode-templates/\"\u003ecustom shortcodes\u003c/a\u003e. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-shortcodes\"\u003eWhat is shortcodes\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-custom-shortcodes\"\u003eCreate custom shortcodes\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#bonus-add-hyperlink-to-headers\"\u003eBonus: add hyperlink to headers\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-is-shortcodes\"\u003eWhat is shortcodes\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://gohugo.io/content-management/shortcodes/\"\u003eShortcodes\u003c/a\u003e is like a tag which can be used inside a markdown file. It will allow you to use built-in or custom templates. You can also pass arguments through shortcode and render them in template. There are some built-in shortcodes like \u003ca href=\"https://gohugo.io/content-management/shortcodes/#figure\"\u003e\u003ccode\u003efigure\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://gohugo.io/content-management/shortcodes/#gist\"\u003e\u003ccode\u003egist\u003c/code\u003e\u003c/a\u003e etc. But we are going to build our own shortcodes.\u003c/p\u003e\n\u003ch2 id=\"create-custom-shortcodes\"\u003eCreate custom shortcodes\u003c/h2\u003e\n\u003cp\u003eFirst we need to create the shortcodes file named \u003ccode\u003etable_of_contents.html\u003c/code\u003e then put it inside \u003ccode\u003elayouts/shortcodes\u003c/code\u003e directory. The folder structure will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eProject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── contents\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── layouts\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   ├── partials\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── shortcodes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│       └── table_of_contents.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── static\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── themes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── config.toml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ethen inside the html file, we need to write the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;toc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  {{ .Page.TableOfContents }}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCool. Our shortcode is ready to use.\u003c/p\u003e\n\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cp\u003eWe need to use the shortcodes by putting \u003ccode\u003e{{\u0026lt; table_of_contents \u0026gt;}}\u003c/code\u003e inside markdown files. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gu\"\u003e## Your content\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gu\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eSome lines\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nt\"\u003etable_of_contents\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e}}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eMore lines\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"bonus-add-hyperlink-to-headers\"\u003eBonus: add hyperlink to headers\u003c/h2\u003e\n\u003cp\u003eReplace \u003ccode\u003e{{ .Page.TableOfContents }}\u003c/code\u003e with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ .Page.TableOfContents | replaceRE \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e[[:space:]]*\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e[[:space:]]*\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; | replaceRE \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e[[:space:]]*\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eli\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e[[:space:]]*\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; |  safeHTML }}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will generate table of contents with hyperlinks to each header.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eShortcodes are pretty awesome and you can use it in many ways like given here. It allows you to have a cleaner implementation and reusability. But one downside is that, you need to put this shortcode in every markdown file to render the table of contents inside them.\u003c/p\u003e\n\u003cp\u003eI hope this article helps. If you have any questions, please share in the comment section below.\u003c/p\u003e\n","content":"Hugo provides a built-in module named {{ .TableOfContents }} to generate table of contents. It is pretty handy because it generates the table of content without help of any JavaScript or CSS code. But there is a problem with it, you need to put it inside templates. You can\u0026rsquo;t render it inside the contents of the markdown file. Means you will be able to render it either at top, or at the bottom of your contents.\nUsually I prefer to have a small introduction and rest of the contents, have a table of content in between them(like this article).Now we are going to see how to do that using custom shortcodes. Table of contents\u0026nbsp;  What is shortcodes Create custom shortcodes Usage Bonus: add hyperlink to headers In conclusion   \nWhat is shortcodes Shortcodes is like a tag which can be used inside a markdown file. It will allow you to use built-in or custom templates. You can also pass arguments through shortcode and render them in template. There are some built-in shortcodes like figure, gist etc. But we are going to build our own shortcodes.\nCreate custom shortcodes First we need to create the shortcodes file named table_of_contents.html then put it inside layouts/shortcodes directory. The folder structure will look like this:\nProject ├── contents ├── layouts │ ├── partials │ └── shortcodes │ └── table_of_contents.html ├── static ├── themes └── config.toml then inside the html file, we need to write the following code:\n\u0026lt;div class=\u0026#34;toc\u0026#34;\u0026gt; {{ .Page.TableOfContents }} \u0026lt;/div\u0026gt; Cool. Our shortcode is ready to use.\nUsage We need to use the shortcodes by putting {{\u0026lt; table_of_contents \u0026gt;}} inside markdown files. For example:\n## Your content  Some lines {{\u0026lt; table_of_contents \u0026gt;}} More lines Bonus: add hyperlink to headers Replace {{ .Page.TableOfContents }} with the following code:\n{{ .Page.TableOfContents | replaceRE \u0026#34;\u0026lt;ul\u0026gt;[[:space:]]*\u0026lt;li\u0026gt;[[:space:]]*\u0026lt;ul\u0026gt;\u0026#34; \u0026#34;\u0026lt;ul\u0026gt;\u0026#34; | replaceRE \u0026#34;\u0026lt;/ul\u0026gt;[[:space:]]*\u0026lt;/li\u0026gt;[[:space:]]*\u0026lt;/ul\u0026gt;\u0026#34; \u0026#34;\u0026lt;/ul\u0026gt;\u0026#34; | safeHTML }} It will generate table of contents with hyperlinks to each header.\nIn conclusion Shortcodes are pretty awesome and you can use it in many ways like given here. It allows you to have a cleaner implementation and reusability. But one downside is that, you need to put this shortcode in every markdown file to render the table of contents inside them.\nI hope this article helps. If you have any questions, please share in the comment section below.\n","description":"By using shortcodes, here is how to put table of contents anywhere in the markdown file for Hugo."},{"date_published":"2020-05-24T00:36:27+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"May 24, 2020","id":"https://ruddra.com/docker-reduce-build-time-for-data-science-packages/","url":"https://ruddra.com/docker-reduce-build-time-for-data-science-packages/","title":"Reduce Build Time for Images with Data Science Packages","image":"https://ruddra.com/content/images/2020/05/speed.jpg","tags":["Docker","Data Science","Pip","SciPy"],"content_html":"\u003cp\u003eIf you want to use data science packages like \u003ccode\u003enumpy\u003c/code\u003e, \u003ccode\u003escipy\u003c/code\u003e, \u003ccode\u003epandas\u003c/code\u003e etc with your docker container and using pip to install them, then it will take forever to build the images. Because pip compiles the C extended code and that compilation needs a lot of time. For \u003ccode\u003enumpy\u003c/code\u003e it took me around 4 minutes. For \u003ccode\u003escipy\u003c/code\u003e, I terminated the build process after 30 minutes or so.\u003c/p\u003e\n\u003cp\u003eToday, I am going to share some ways in which you can build them faster. You can follow any one of them. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#one-build-using-anaconda\"\u003eOne: build using Anaconda\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#two-use-apt-get\"\u003eTwo: use \u003ccode\u003eapt-get\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#three-use-separate-layers-to-install-packages\"\u003eThree: use separate layers to install packages\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#four-build-your-own-wheel\"\u003eFour: build your own \u003ccode\u003ewheel\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"one-build-using-anaconda\"\u003eOne: build using Anaconda\u003c/h2\u003e\n\u003cp\u003eAnaconda is a free and open-source distribution of the Python(and R programming language as well, but we are not going to consider it here) for scientific computing. It uses a pre-compiled binary version of the packages so you do not have to compile it on your machine. Here is an example \u003ccode\u003eDockerfile\u003c/code\u003e based on official anaconda image:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e continuumio/miniconda3\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set environment variables\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONDONTWRITEBYTECODE \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set work directory\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /code\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install dependencies\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirement.txt /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e conda install -c conda-forge --file requirement.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Copy project\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e . /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere is an another example using alpine linux:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e frolvlad/alpine-miniconda3\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set environment variables\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONDONTWRITEBYTECODE \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set work directory\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /code\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install dependencies\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirement.txt /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e conda install -c conda-forge --file requirement.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Copy project\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e . /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"two-use-apt-get\"\u003eTwo: use \u003ccode\u003eapt-get\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eIf you do not want to use anaconda, then apart from pip, there is another package manager called \u003cstrong\u003eapt\u003c/strong\u003e which distributes data science packages like \u003ccode\u003enumpy\u003c/code\u003e, \u003ccode\u003escipy\u003c/code\u003e, \u003ccode\u003epandas\u003c/code\u003e. \u003ca href=\"https://en.wikipedia.org/wiki/APT_(software)\"\u003e\u003cstrong\u003eapt\u003c/strong\u003e\u003c/a\u003e is the official package manager for Ubuntu and it is very reliable. Although versions of these packages are not latest, you can install the newest versions with pip. This time installation using pip will take much less time.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.7\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set environment variables\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONDONTWRITEBYTECODE \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install packages\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apt-get update -y \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    apt-get install -y python-scipy\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    python-numpy python-pandas \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    apt-get clean \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e rm -rf /var/lib/apt/lists/*\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install dependencies\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirement.txt /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install --no-cache-dir -r /code/requirement.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"three-use-separate-layers-to-install-packages\"\u003eThree: use separate layers to install packages\u003c/h2\u003e\n\u003cp\u003eIf you install packages which take longer in a separate layer, then docker will cache them in subsequent builds. In that way your first time build will take a long time, but after that building time will be significantly reduced for next builds.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.7\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set environment variables\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONDONTWRITEBYTECODE \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Installing scipy\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip3 install --no-cache-dir --disable-pip-version-check \u003cspan class=\"nv\"\u003escipy\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.3.1\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Installing numpy, scipy, psycopg2, gensim\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip3 install --no-cache-dir \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003epandas\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e0.25.2 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003enumpy\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.17.3 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003epsycopg2\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e2.8.4 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003egensim\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e3.8.1\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e#Install dependencies\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirement.txt /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r requirement.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdvantage of this separation of layers is that even if you change your \u003ccode\u003erequirements.txt\u003c/code\u003e file or change in source code, it will not hamper the cached layer of data science packages.\u003c/p\u003e\n\u003ch2 id=\"four-build-your-own-wheel\"\u003eFour: build your own \u003ccode\u003ewheel\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eFinally, you can build your own \u003ccode\u003ewheel\u003c/code\u003e files using \u003ca href=\"https://pip.pypa.io/en/stable/reference/pip_wheel/\"\u003e\u003ccode\u003epip-wheel\u003c/code\u003e\u003c/a\u003e. \u003cstrong\u003eWheel\u003c/strong\u003e archives for your requirements and dependencies. Wheel is a built-package format, and offers the advantage of not recompiling your software during every install. Here is how you can do that:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip wheel numpy scipy pandas -w wheels\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will store wheel files(extension \u003ccode\u003e.whl\u003c/code\u003e) inside the wheels directory. You can either add them to your docker image(like following example). FYI, keeping wheel files with repositories will increase its size. Alternatively you can put it somewhere in the cloud and download it during the docker build process.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-Dockerfile\" data-lang=\"Dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.7\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Set environment variables\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONDONTWRITEBYTECODE \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Installing dependencies\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e requirement.txt /code/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e ./wheels /tmp/wheels\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install --find-links\u003cspan class=\"o\"\u003e=\u003c/span\u003e/tmp/wheels -r /code/requirements.txt\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e rm -rf /tmp/wheels\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIn this article, we saw that there are several ways to reduce build time of the docker image with data science packages and you can follow any of them. If you have any thoughts regarding this, please let me know at the comment section below.\u003c/p\u003e\n","content":"If you want to use data science packages like numpy, scipy, pandas etc with your docker container and using pip to install them, then it will take forever to build the images. Because pip compiles the C extended code and that compilation needs a lot of time. For numpy it took me around 4 minutes. For scipy, I terminated the build process after 30 minutes or so.\nToday, I am going to share some ways in which you can build them faster. You can follow any one of them. Table of contents\u0026nbsp;  One: build using Anaconda Two: use apt-get Three: use separate layers to install packages Four: build your own wheel In conclusion   \nOne: build using Anaconda Anaconda is a free and open-source distribution of the Python(and R programming language as well, but we are not going to consider it here) for scientific computing. It uses a pre-compiled binary version of the packages so you do not have to compile it on your machine. Here is an example Dockerfile based on official anaconda image:\nFROMcontinuumio/miniconda3# Set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# Set work directoryWORKDIR/code# Install dependenciesCOPY requirement.txt /code/RUN conda install -c conda-forge --file requirement.txt# Copy projectCOPY . /code/Here is an another example using alpine linux:\nFROMfrolvlad/alpine-miniconda3# Set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# Set work directoryWORKDIR/code# Install dependenciesCOPY requirement.txt /code/RUN conda install -c conda-forge --file requirement.txt# Copy projectCOPY . /code/Two: use apt-get If you do not want to use anaconda, then apart from pip, there is another package manager called apt which distributes data science packages like numpy, scipy, pandas. apt is the official package manager for Ubuntu and it is very reliable. Although versions of these packages are not latest, you can install the newest versions with pip. This time installation using pip will take much less time.\nFROMpython:3.7# Set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# Install packagesRUN apt-get update -y \u0026amp;\u0026amp; \\  apt-get install -y python-scipy\\  python-numpy python-pandas \u0026amp;\u0026amp;\\  apt-get clean \u0026amp;\u0026amp; rm -rf /var/lib/apt/lists/*# Install dependenciesCOPY requirement.txt /code/RUN pip install --no-cache-dir -r /code/requirement.txtThree: use separate layers to install packages If you install packages which take longer in a separate layer, then docker will cache them in subsequent builds. In that way your first time build will take a long time, but after that building time will be significantly reduced for next builds.\nFROMpython:3.7# Set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# Installing scipyRUN pip3 install --no-cache-dir --disable-pip-version-check scipy==1.3.1# Installing numpy, scipy, psycopg2, gensimRUN pip3 install --no-cache-dir \\  pandas==0.25.2 \\  numpy==1.17.3 \\  psycopg2==2.8.4 \\  gensim==3.8.1#Install dependenciesCOPY requirement.txt /code/RUN pip install -r requirement.txtAdvantage of this separation of layers is that even if you change your requirements.txt file or change in source code, it will not hamper the cached layer of data science packages.\nFour: build your own wheel Finally, you can build your own wheel files using pip-wheel. Wheel archives for your requirements and dependencies. Wheel is a built-package format, and offers the advantage of not recompiling your software during every install. Here is how you can do that:\npip wheel numpy scipy pandas -w wheels It will store wheel files(extension .whl) inside the wheels directory. You can either add them to your docker image(like following example). FYI, keeping wheel files with repositories will increase its size. Alternatively you can put it somewhere in the cloud and download it during the docker build process.\nFROMpython:3.7# Set environment variablesENV PYTHONDONTWRITEBYTECODE 1ENV PYTHONUNBUFFERED 1# Installing dependenciesCOPY requirement.txt /code/COPY ./wheels /tmp/wheelsRUN pip install --find-links=/tmp/wheels -r /code/requirements.txtRUN rm -rf /tmp/wheelsIn conclusion In this article, we saw that there are several ways to reduce build time of the docker image with data science packages and you can follow any of them. If you have any thoughts regarding this, please let me know at the comment section below.\n","description":"How to build a docker image faster containing packages like Numpy, SciPy, Pandas etc."},{"date_published":"2020-04-22T00:00:00+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 22, 2020","id":"https://ruddra.com/django-jwt-auth-app-in-10-mins/","url":"https://ruddra.com/django-jwt-auth-app-in-10-mins/","title":"Create a Web App with JWT Authentication using Django","image":"https://ruddra.com/content/images/2020/04/cookie.jpg","tags":["Django","Docker","JWT"],"content_html":"\u003cp\u003eLet us say, you need an authentication service in a rush, which needs to be cutting edge and uses JWT based authentication. Or you need a stand alone authentication service to be plugged in with other microservices. Do not worry, you can create one in 10 minutes. All you need to have is \u003cstrong\u003ePython\u003c/strong\u003e and \u003cstrong\u003eDocker\u003c/strong\u003e installed in your machine. In this article, I am going to share how you can do this in a few simple steps.\u003c/p\u003e\n\u003cp\u003eFYI, for this project you do not need prior django knowledge. Just having a coding background should be good enough or some Python syntax knowledge would be nice. Without further ado, let us start our stopwatch and begin:\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#install-cookiecutter\"\u003eInstall CookieCutter\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-django-project\"\u003eCreate Django project\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#setup-restful-api\"\u003eSetup RESTful API\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#setup-jwt-authentication\"\u003eSetup JWT authentication\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#spin-up-the-docker\"\u003eSpin up the docker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#miscellaneous\"\u003eMiscellaneous\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#remove-unnecessary-dependencies\"\u003eRemove unnecessary dependencies\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#change-header\"\u003eChange header\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#and-more\"\u003eAnd more\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#why-wait-10-minutes-when-you-can-clone-it\"\u003eWhy wait 10 minutes when you can clone it\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"install-cookiecutter\"\u003eInstall CookieCutter\u003c/h2\u003e\n\u003cp\u003eFirst, we need to install the \u003ca href=\"https://github.com/cookiecutter/cookiecutter\"\u003ecookiecutter\u003c/a\u003e. It allows us to create projects from templates. To install it, we need to run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython3 -m pip install cookiecutter --user\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-django-project\"\u003eCreate Django project\u003c/h2\u003e\n\u003cp\u003eNow we are going to create the django project using \u003ccode\u003ecookiecutter\u003c/code\u003e. We are going to use \u003ca href=\"https://github.com/pydanny/cookiecutter-django\"\u003ecookiecutter-django\u003c/a\u003e as template project:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecookiecutter https://github.com/pydanny/cookiecutter-django\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will prompt for many options. Here is my setup:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"920\" height=\"1474\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 920 1474'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/cookiecutter-django_hu7fba9da1679ce4a56c592454604cb9c1_184182_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/cookiecutter-django_hu7fba9da1679ce4a56c592454604cb9c1_184182_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/cookiecutter-django_hu7fba9da1679ce4a56c592454604cb9c1_184182_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/cookiecutter-django_hu7fba9da1679ce4a56c592454604cb9c1_184182_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Config' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/cookiecutter-django.jpg\" width=\"920\" height=\"1474\" alt='Config'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eWe have prompted \u003cstrong\u003eyes\u003c/strong\u003e for \u003cem\u003eDjango Rest Framework\u003c/em\u003e and \u003cem\u003eDocker\u003c/em\u003e. Rest of the setup can be based on your preference. Cool, now we have our boilerplate project.\u003c/p\u003e\n\u003ch2 id=\"setup-restful-api\"\u003eSetup RESTful API\u003c/h2\u003e\n\u003cp\u003eNow we have our django application, let us integrate API. We already have \u003ca href=\"https://www.django-rest-framework.org/\"\u003eDjango Rest Framework\u003c/a\u003e pre-installed with cookiecutter, so we are going to use a library which utilizes that and provide authentication. My preference is \u003ca href=\"https://github.com/sunscrapers/djoser\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://djoser.readthedocs.io\"\u003edjoser\u0026rsquo;s documentation\u003c/a\u003e, let us add the app in \u003cstrong\u003e\u003ccode\u003econfig/settings/base.py\u003c/code\u003e\u003c/strong\u003e, like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTHIRD_PARTY_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;crispy_forms\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;allauth\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;allauth.account\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;allauth.socialaccount\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;rest_framework\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;djoser\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# \u0026#34;rest_framework.authtoken\u0026#34;, #\u0026lt;---\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe are commenting out \u003ccode\u003erest_framework.authtoken\u003c/code\u003e(marked with \u003ccode\u003e#\u0026lt;---\u003c/code\u003e) from \u003ccode\u003eTHIRD_PARTY_APPS\u003c/code\u003e, as we plan to use \u003cstrong\u003eJWT\u003c/strong\u003e based authentication.\u003c/p\u003e\n\u003cp\u003eLet us change in \u003cstrong\u003e\u003ccode\u003econfig/urls.py\u003c/code\u003e\u003c/strong\u003e as well:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;api/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;config.api_router\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;auth/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;djoser.urls\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKeep in mind that \u003ccode\u003ecookiecutter-django\u003c/code\u003e provides a token based authentication. As our plan is to use JWT based authentication, so we will be removing token based authentication related codes from the project.\u003c/p\u003e\n\u003ch2 id=\"setup-jwt-authentication\"\u003eSetup JWT authentication\u003c/h2\u003e\n\u003cp\u003eOur project is ready for integration with JWT based authentication. For that, we are going to use \u003ca href=\"https://github.com/SimpleJWT/django-rest-framework-simplejwt\"\u003edjango-rest-framework-jwt\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003eLet us add \u003ccode\u003eJWTAuthentication\u003c/code\u003e authentication class to the \u003ccode\u003eDEFAULT_AUTHENTICATION_CLASSES\u003c/code\u003e in \u003cstrong\u003e\u003ccode\u003econfig/settings/base.py\u003c/code\u003e\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eREST_FRAMEWORK\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;DEFAULT_AUTHENTICATION_CLASSES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;rest_framework_simplejwt.authentication.JWTAuthentication\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;DEFAULT_PERMISSION_CLASSES\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;rest_framework.permissions.IsAuthenticated\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe need to add token generation url paths to \u003cstrong\u003e\u003ccode\u003econfig/urls.py\u003c/code\u003e\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;auth/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;djoser.urls\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;auth/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;djoser.urls.jwt\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, let us add the new dependencies in \u003cstrong\u003e\u003ccode\u003erequirements/base.txt\u003c/code\u003e\u003c/strong\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edjangorestframework-simplejwt==4.4.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edjoser==2.0.3\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePlease check the \u003ca href=\"https://djoser.readthedocs.io/en/latest/jwt_endpoints.html\"\u003edjoser documentation\u003c/a\u003e regarding jwt API endpoints.\u003c/p\u003e\n\u003ch2 id=\"spin-up-the-docker\"\u003eSpin up the docker\u003c/h2\u003e\n\u003cp\u003eLet us start our docker containers using \u003ca href=\"https://docs.docker.com/compose/\"\u003edocker-compose\u003c/a\u003e. If you don\u0026rsquo;t have it, then install it from docker-compose \u003ca href=\"https://docs.docker.com/compose/install/\"\u003einstallation guide\u003c/a\u003e. My suggestion is to use pip:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython -m pip install docker-compose --user\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, let us start the development server by(from root of the project):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose -f local.yml up\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAwesome, we have our project running. For production server use:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose -f production.yml up\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut, you need to keep in mind, if you want mail sending functionality, make sure to add them either in \u003cstrong\u003e\u003ccode\u003e.envs/.product/.django\u003c/code\u003e\u003c/strong\u003e file or set as an environment variable in \u003ccode\u003e*.yml\u003c/code\u003e file.\u003c/p\u003e\n\u003ch2 id=\"miscellaneous\"\u003eMiscellaneous\u003c/h2\u003e\n\u003cp\u003eOkay, now our project is running. So let us clean it up a little. Also, some of the setup might be a bit complex and may require some django knowledge.\u003c/p\u003e\n\u003ch3 id=\"remove-unnecessary-dependencies\"\u003eRemove unnecessary dependencies\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eThis step is useful if you want to make this application only as a REST API based backend\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eWe are going to clean up codes regarding django allauth and crispy form. Just remove them from \u003ccode\u003eTHIRD_PARTY_APPS\u003c/code\u003e inside \u003cstrong\u003e\u003ccode\u003econfig/settings/base.py\u003c/code\u003e\u003c/strong\u003e .\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTHIRD_PARTY_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;rest_framework\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;rest_framework.authtoken\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso, we need to remove some unnecessary codes from template \u003cstrong\u003e\u003ccode\u003epassport/templates/base.html\u003c/code\u003e\u003c/strong\u003e. Otherwise it will cause errors because of missing libraries. Let us replace it with something simple:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello from base\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe also need to clean up \u003ccode\u003eallauth\u003c/code\u003e related codes from \u003cstrong\u003e\u003ccode\u003econfig/urls.py\u003c/code\u003e\u003c/strong\u003e. Here is a cleaned up version:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf.urls.static\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003estatic\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.urls\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edefaults\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003edefault_views\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views.generic\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eTemplateView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTemplateView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;pages/home.html\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;home\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eADMIN_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurls\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003estatic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMEDIA_URL\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edocument_root\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMEDIA_ROOT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;auth-token/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eobtain_auth_token\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"change-header\"\u003eChange header\u003c/h3\u003e\n\u003cp\u003eBy default, HEADER will look be like this \u003ccode\u003eJWT \u0026lt;XXXXXXXX\u0026gt;\u003c/code\u003e, which is not \u003ca href=\"https://jwt.io/introduction/\"\u003eBearer schema\u003c/a\u003e. You can change it to \u003ccode\u003eBearer \u0026lt;XXXXXXX\u0026gt;\u003c/code\u003e by adding the following lines in \u003cstrong\u003e\u003ccode\u003econfig/settings/base.py\u003c/code\u003e\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eSIMPLE_JWT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;AUTH_HEADER_TYPES\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Bearer\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"and-more\"\u003eAnd more\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eAdd social authentication using \u003ca href=\"https://djoser.readthedocs.io/en/latest/getting_started.html#installation\"\u003edjoser\u0026rsquo;s documentation\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eAdd API documentation using \u003ca href=\"https://www.django-rest-framework.org/topics/documenting-your-api\"\u003eDRF documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"why-wait-10-minutes-when-you-can-clone-it\"\u003eWhy wait 10 minutes when you can clone it\u003c/h2\u003e\n\u003cp\u003eAssuming you do not want to take the trouble of creating the project from scratch, then simply clone my project from \u003ca href=\"https://github.com/ruddra/django-passport\"\u003e\u003cstrong\u003egithub\u003c/strong\u003e\u003c/a\u003e and \u003ca href=\"#spin-up-the-docker\"\u003espin up the docker\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eSteps till \u003ca href=\"#miscellaneous\"\u003emiscellaneous section\u003c/a\u003e took me around 5-10 minutes. But it may take longer depending on various conditions like on internet speed, machine configuration and prior python/django knowledge. But, this solution is top notch and you can easily deploy it with docker anywhere. You can also plug it in as a microservice and handle authentication smoothly.\u003c/p\u003e\n\u003cp\u003eThank you for reading. Let me find your experience in the comment section below.\u003c/p\u003e\n","content":"Let us say, you need an authentication service in a rush, which needs to be cutting edge and uses JWT based authentication. Or you need a stand alone authentication service to be plugged in with other microservices. Do not worry, you can create one in 10 minutes. All you need to have is Python and Docker installed in your machine. In this article, I am going to share how you can do this in a few simple steps.\nFYI, for this project you do not need prior django knowledge. Just having a coding background should be good enough or some Python syntax knowledge would be nice. Without further ado, let us start our stopwatch and begin:Table of contents\u0026nbsp;  Install CookieCutter Create Django project Setup RESTful API Setup JWT authentication Spin up the docker Miscellaneous  Remove unnecessary dependencies Change header And more   Why wait 10 minutes when you can clone it In conclusion   \nInstall CookieCutter First, we need to install the cookiecutter. It allows us to create projects from templates. To install it, we need to run:\npython3 -m pip install cookiecutter --user Create Django project Now we are going to create the django project using cookiecutter. We are going to use cookiecutter-django as template project:\ncookiecutter https://github.com/pydanny/cookiecutter-django It will prompt for many options. Here is my setup:\n   We have prompted yes for Django Rest Framework and Docker. Rest of the setup can be based on your preference. Cool, now we have our boilerplate project.\nSetup RESTful API Now we have our django application, let us integrate API. We already have Django Rest Framework pre-installed with cookiecutter, so we are going to use a library which utilizes that and provide authentication. My preference is .\nAccording to djoser\u0026rsquo;s documentation, let us add the app in config/settings/base.py, like this:\nTHIRD_PARTY_APPS = [ \u0026#34;crispy_forms\u0026#34;, \u0026#34;allauth\u0026#34;, \u0026#34;allauth.account\u0026#34;, \u0026#34;allauth.socialaccount\u0026#34;, \u0026#34;rest_framework\u0026#34;, \u0026#34;djoser\u0026#34; # \u0026#34;rest_framework.authtoken\u0026#34;, #\u0026lt;--- ] We are commenting out rest_framework.authtoken(marked with #\u0026lt;---) from THIRD_PARTY_APPS, as we plan to use JWT based authentication.\nLet us change in config/urls.py as well:\nurlpatterns += [ path(\u0026#34;api/\u0026#34;, include(\u0026#34;config.api_router\u0026#34;)), path(\u0026#34;auth/\u0026#34;, include(\u0026#39;djoser.urls\u0026#39;)), ] Keep in mind that cookiecutter-django provides a token based authentication. As our plan is to use JWT based authentication, so we will be removing token based authentication related codes from the project.\nSetup JWT authentication Our project is ready for integration with JWT based authentication. For that, we are going to use django-rest-framework-jwt:\nLet us add JWTAuthentication authentication class to the DEFAULT_AUTHENTICATION_CLASSES in config/settings/base.py:\nREST_FRAMEWORK = { \u0026#34;DEFAULT_AUTHENTICATION_CLASSES\u0026#34;: ( \u0026#34;rest_framework_simplejwt.authentication.JWTAuthentication\u0026#34;, ), \u0026#34;DEFAULT_PERMISSION_CLASSES\u0026#34;: (\u0026#34;rest_framework.permissions.IsAuthenticated\u0026#34;,), } We need to add token generation url paths to config/urls.py:\nurlpatterns += [ path(\u0026#39;auth/\u0026#39;, include(\u0026#39;djoser.urls\u0026#39;)), path(\u0026#39;auth/\u0026#39;, include(\u0026#39;djoser.urls.jwt\u0026#39;)), ] Now, let us add the new dependencies in requirements/base.txt file:\ndjangorestframework-simplejwt==4.4.0 djoser==2.0.3 Please check the djoser documentation regarding jwt API endpoints.\nSpin up the docker Let us start our docker containers using docker-compose. If you don\u0026rsquo;t have it, then install it from docker-compose installation guide. My suggestion is to use pip:\npython -m pip install docker-compose --user Now, let us start the development server by(from root of the project):\ndocker-compose -f local.yml up Awesome, we have our project running. For production server use:\ndocker-compose -f production.yml up But, you need to keep in mind, if you want mail sending functionality, make sure to add them either in .envs/.product/.django file or set as an environment variable in *.yml file.\nMiscellaneous Okay, now our project is running. So let us clean it up a little. Also, some of the setup might be a bit complex and may require some django knowledge.\nRemove unnecessary dependencies This step is useful if you want to make this application only as a REST API based backend.\nWe are going to clean up codes regarding django allauth and crispy form. Just remove them from THIRD_PARTY_APPS inside config/settings/base.py .\nTHIRD_PARTY_APPS = [ \u0026#34;rest_framework\u0026#34;, \u0026#34;rest_framework.authtoken\u0026#34;, ] Also, we need to remove some unnecessary codes from template passport/templates/base.html. Otherwise it will cause errors because of missing libraries. Let us replace it with something simple:\n\u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Hello from base\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; We also need to clean up allauth related codes from config/urls.py. Here is a cleaned up version:\nfrom django.conf import settings from django.conf.urls.static import static from django.contrib import admin from django.urls import include, path from django.views import defaults as default_views from django.views.generic import TemplateView urlpatterns = [ path(\u0026#34;\u0026#34;, TemplateView.as_view(template_name=\u0026#34;pages/home.html\u0026#34;), name=\u0026#34;home\u0026#34;), path(settings.ADMIN_URL, admin.site.urls), ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) urlpatterns += [ path(\u0026#34;auth-token/\u0026#34;, obtain_auth_token), ] Change header By default, HEADER will look be like this JWT \u0026lt;XXXXXXXX\u0026gt;, which is not Bearer schema. You can change it to Bearer \u0026lt;XXXXXXX\u0026gt; by adding the following lines in config/settings/base.py:\nSIMPLE_JWT = { \u0026#39;AUTH_HEADER_TYPES\u0026#39;: (\u0026#39;Bearer\u0026#39;,), } And more  Add social authentication using djoser\u0026rsquo;s documentation. Add API documentation using DRF documentation.  Why wait 10 minutes when you can clone it Assuming you do not want to take the trouble of creating the project from scratch, then simply clone my project from github and spin up the docker.\nIn conclusion Steps till miscellaneous section took me around 5-10 minutes. But it may take longer depending on various conditions like on internet speed, machine configuration and prior python/django knowledge. But, this solution is top notch and you can easily deploy it with docker anywhere. You can also plug it in as a microservice and handle authentication smoothly.\nThank you for reading. Let me find your experience in the comment section below.\n","description":"Build a JWT based auth service using Django and Django Rest Framework in 10 minutes or less."},{"date_published":"2020-04-16T20:19:01+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 16, 2020","id":"https://ruddra.com/aws-codebuild-use-git-tags/","url":"https://ruddra.com/aws-codebuild-use-git-tags/","title":"Trigger AWS CodeBuild When a Git Tag is Pushed","image":"https://ruddra.com/content/images/2020/04/amazon.jpg","tags":["Git","AWS","CodeBuild","Pipeline","DevOps"],"content_html":"\u003cp\u003e\u003ca href=\"https://aws.amazon.com/codebuild/\"\u003eAWS CodeBuild\u003c/a\u003e has nice integration with different Git repository hosting service providers(like GitHub, BitBucket, even amazon\u0026rsquo;s own CodeCommit etc). Even using WebHook is pretty easy. You can start a build in CodeBuild for every push, pull, PR created, PR merged etc. But it can be bit tricky when it comes to trigger for every tag push only, as it us not a default event type provided by CodeBuild. You need to add some customized settings to the filter section of the \u003cstrong\u003eSource\u003c/strong\u003e for it. Here is how I implemented it step by step. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#enable-re-build-on-code-change\"\u003eEnable re-build on code change\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#change-event-type\"\u003eChange event type\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#track-branch\"\u003eTrack branch\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#add-filter\"\u003eAdd filter\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-tag-in-buildspecyml-file\"\u003eUse tag in \u003ccode\u003ebuildspec.yml\u003c/code\u003e file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"enable-re-build-on-code-change\"\u003eEnable re-build on code change\u003c/h2\u003e\n\u003cp\u003eFirst you need to enable \u003cstrong\u003eRebuild every time a code change is pushed to this repository\u003c/strong\u003e from the source settings.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"790\" height=\"372\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 790 372'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/aws_pr_hud08f6d839b3d4ed3c2dfb9168894bb7c_41330_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/aws_pr_hud08f6d839b3d4ed3c2dfb9168894bb7c_41330_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/aws_pr_hud08f6d839b3d4ed3c2dfb9168894bb7c_41330_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/aws_pr_hud08f6d839b3d4ed3c2dfb9168894bb7c_41330_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Rebuild source' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/aws_pr.jpg\" width=\"790\" height=\"372\" alt='Rebuild source'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"change-event-type\"\u003eChange event type\u003c/h2\u003e\n\u003cp\u003eYou need to change the \u003cstrong\u003eEvent Type\u003c/strong\u003e to \u003cstrong\u003epush\u003c/strong\u003e to trigger the CodeBuild.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"771\" height=\"264\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 771 264'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/aws_pr_event_hu38d2e39975c4b671905037625c687851_23040_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/aws_pr_event_hu38d2e39975c4b671905037625c687851_23040_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/aws_pr_event_hu38d2e39975c4b671905037625c687851_23040_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/aws_pr_event_hu38d2e39975c4b671905037625c687851_23040_720x0_resize_q75_lanczos.jpg 720w'\n        alt='push event' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/aws_pr_event.jpg\" width=\"771\" height=\"264\" alt='push event'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"track-branch\"\u003eTrack branch\u003c/h2\u003e\n\u003cp\u003eI am assuming you want to track tags from any branch. So I have put \u003ccode\u003e*\u003c/code\u003e on branch settings:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"800\" height=\"104\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 104'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/aws_branch_hu140e652c1882040f1a1fbfb57f7bf566_8980_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/aws_branch_hu140e652c1882040f1a1fbfb57f7bf566_8980_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/aws_branch_hu140e652c1882040f1a1fbfb57f7bf566_8980_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/aws_branch_hu140e652c1882040f1a1fbfb57f7bf566_8980_720x0_resize_q75_lanczos.jpg 720w'\n        alt='TRACK BRANCH' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/aws_branch.jpg\" width=\"800\" height=\"104\" alt='TRACK BRANCH'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"add-filter\"\u003eAdd filter\u003c/h2\u003e\n\u003cp\u003eFinally, I have added the filter in \u003cstrong\u003eStart a build under this condition\u003c/strong\u003e. The filter is \u003cstrong\u003e\u003ccode\u003e^refs/tags/.*\u003c/code\u003e\u003c/strong\u003e under \u003ccode\u003eHEAD_REF\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"798\" height=\"106\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 798 106'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/aws_head_ref_hube06af43839bae8083dfcd20f14eba79_13291_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/aws_head_ref_hube06af43839bae8083dfcd20f14eba79_13291_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/aws_head_ref_hube06af43839bae8083dfcd20f14eba79_13291_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/aws_head_ref_hube06af43839bae8083dfcd20f14eba79_13291_720x0_resize_q75_lanczos.jpg 720w'\n        alt='HEAD REF' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/aws_head_ref.jpg\" width=\"798\" height=\"106\" alt='HEAD REF'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"use-tag-in-buildspecyml-file\"\u003eUse tag in \u003ccode\u003ebuildspec.yml\u003c/code\u003e file\u003c/h2\u003e\n\u003cp\u003eIf you want to use the Tag number in \u003ccode\u003ebuildspec.yml\u003c/code\u003e, then use this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e- \u003cspan class=\"l\"\u003eTAG_NUMBER=\u0026#34;$(git describe --tags --abbrev=0)\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut above code won\u0026rsquo;t work if you are tracking a build which is based on a commit that is not associated a tag or a build that is not triggered by a tag push. To resolve this, you need to increase \u003cstrong\u003edepth\u003c/strong\u003e value. You can set it to \u003cstrong\u003efull\u003c/strong\u003e but it will increase build time depending of the size of the repository. It is in the \u003cstrong\u003eAdditional configuration\u003c/strong\u003e section.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"799\" height=\"134\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 799 134'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/04/aws_clone_depth_hua287e01877b39c17e11367a48e3c747b_9797_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/04/aws_clone_depth_hua287e01877b39c17e11367a48e3c747b_9797_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/04/aws_clone_depth_hua287e01877b39c17e11367a48e3c747b_9797_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/04/aws_clone_depth_hua287e01877b39c17e11367a48e3c747b_9797_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Full depth' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/04/aws_clone_depth.jpg\" width=\"799\" height=\"134\" alt='Full depth'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIMHO, CodeBuild is a fantastic tool for implementing CI/CD, but documentation lacks some minor details. It might give you subtle hints but you need to dig deeper to find the exact solution. Let us talk more in the comment section if you think this article is missing something. Cheers!!\u003c/p\u003e\n","content":"AWS CodeBuild has nice integration with different Git repository hosting service providers(like GitHub, BitBucket, even amazon\u0026rsquo;s own CodeCommit etc). Even using WebHook is pretty easy. You can start a build in CodeBuild for every push, pull, PR created, PR merged etc. But it can be bit tricky when it comes to trigger for every tag push only, as it us not a default event type provided by CodeBuild. You need to add some customized settings to the filter section of the Source for it. Here is how I implemented it step by step. Table of contents\u0026nbsp;  Enable re-build on code change Change event type Track branch Add filter Use tag in buildspec.yml file In conclusion   \nEnable re-build on code change First you need to enable Rebuild every time a code change is pushed to this repository from the source settings.\n   Change event type You need to change the Event Type to push to trigger the CodeBuild.\n   Track branch I am assuming you want to track tags from any branch. So I have put * on branch settings:\n   Add filter Finally, I have added the filter in Start a build under this condition. The filter is ^refs/tags/.* under HEAD_REF.\n   Use tag in buildspec.yml file If you want to use the Tag number in buildspec.yml, then use this:\n- TAG_NUMBER=\u0026#34;$(git describe --tags --abbrev=0)\u0026#34;But above code won\u0026rsquo;t work if you are tracking a build which is based on a commit that is not associated a tag or a build that is not triggered by a tag push. To resolve this, you need to increase depth value. You can set it to full but it will increase build time depending of the size of the repository. It is in the Additional configuration section.\n   In conclusion IMHO, CodeBuild is a fantastic tool for implementing CI/CD, but documentation lacks some minor details. It might give you subtle hints but you need to dig deeper to find the exact solution. Let us talk more in the comment section if you think this article is missing something. Cheers!!\n","description":"Running CodeBuild on every push can be a overkill. Here is how to trigger it only if you push a tag."},{"date_published":"2020-04-03T00:00:00+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 3, 2020","id":"https://ruddra.com/hugo-use-env-variable-in-md/","url":"https://ruddra.com/hugo-use-env-variable-in-md/","title":"Hugo: Use Environment Variable in Markdown Files","image":"https://ruddra.com/content/images/2020/04/squirrel.jpg","tags":["Hugo","Markdown"],"content_html":"\u003cp\u003e\u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e is a fantastic framework to generate static site from markdown and serve them. Using environment variables in templates is a breeze but using them in markdown files can be a bit tricky. You need to use custom shortcodes as workaround to resolve this issue.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-shortcodes\"\u003eWhat is shortcodes\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#custom-shortcodes\"\u003eCustom shortcodes\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-environment-variable-in-shortcodes\"\u003eUse environment variable in shortcodes\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#by-getenv-variable\"\u003eBy \u003cstrong\u003egetenv\u003c/strong\u003e variable\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#by-site-variable\"\u003eBy \u003cstrong\u003esite\u003c/strong\u003e variable\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-is-shortcodes\"\u003eWhat is shortcodes\u003c/h2\u003e\n\u003cp\u003eNow the question comes, what is shorcode? From \u003ca href=\"https://gohugo.io/variables/shortcodes/\"\u003eHugo\u0026rsquo;s documentation\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eShortcodes can access page variables and also have their own specific built-in variables.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eMeaning you can use this to access different variables like from \u003ccode\u003econfig\u003c/code\u003e file or you can write your own shortcodes to provide your custom variables. We will be using both to access environment variables. Let us see how to create custom shortcodes. This shortcodes will be used in markdown files.\u003c/p\u003e\n\u003ch2 id=\"custom-shortcodes\"\u003eCustom shortcodes\u003c/h2\u003e\n\u003cp\u003eFirst, you need to create a new folder named \u003ccode\u003eshortcodes\u003c/code\u003e inside the \u003ccode\u003elayouts\u003c/code\u003e directory. Inside that, you need to create a template which will be treated as a shortcode. For example, if you create \u003ccode\u003elayouts/shortcodes/abc.html\u003c/code\u003e, then you can access variables inside \u003cstrong\u003ehome_dir.html\u003c/strong\u003e in markdown files via \u003ccode\u003e{{\u0026lt; home_dir \u0026gt;}}\u003c/code\u003e. The folder structure will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHugo Project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── content\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── layouts\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── shortcodes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│      ├── home_dir.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│      └── custom_dir.html\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── static\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── themes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└──config.toml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMore information can be found in \u003ca href=\"https://gohugo.io/templates/shortcode-templates/\"\u003ehugo\u0026rsquo;s documentation\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"use-environment-variable-in-shortcodes\"\u003eUse environment variable in shortcodes\u003c/h2\u003e\n\u003cp\u003eNow it is time to use environment variables in these shortcodes. There are two ways you can achieve this.\u003c/p\u003e\n\u003ch3 id=\"by-getenv-variable\"\u003eBy \u003cstrong\u003egetenv\u003c/strong\u003e variable\u003c/h3\u003e\n\u003cp\u003eYou can use \u003ca href=\"https://gohugo.io/functions/getenv/\"\u003e\u003cstrong\u003egetenv\u003c/strong\u003e\u003c/a\u003e in the shortcodes. For example, if you write \u003ccode\u003e{{ getenv \u0026quot;HOME\u0026quot; }}\u003c/code\u003e in \u003cstrong\u003ehome_dir.html\u003c/strong\u003e then, if you use \u003ccode\u003e{{\u0026lt; home_dir \u0026gt;}}\u003c/code\u003e in markdown, it should render the home directory name in rendered pages.\u003c/p\u003e\n\u003ch3 id=\"by-site-variable\"\u003eBy \u003cstrong\u003esite\u003c/strong\u003e variable\u003c/h3\u003e\n\u003cp\u003eYou can directly access \u003ca href=\"https://gohugo.io/variables/site/\"\u003esite-level\u003c/a\u003e variables(or global variables) in shortcodes. For that, first you need to declare them in \u003ccode\u003econfig.toml\u003c/code\u003e(or json or other formats):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003etheme\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;your theme\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ebaseURL\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003ehomeDir\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/home/arnab\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen in \u003cstrong\u003ehome_dir.html\u003c/strong\u003e, you can write:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ .Site.Params.homeDir }}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFinally, if you want to provide your environment variable as \u003ccode\u003ehomeDir\u003c/code\u003e, then pass it as argument when running hugo server:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eenv \u003cspan class=\"nv\"\u003eHUGO_PARAMS_homeDir\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e hugo server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr if you want to generate the html files, then run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eenv \u003cspan class=\"nv\"\u003eHUGO_PARAMS_homeDir\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIt is very easy to use environment variables in markdown using Hugo. Although there are many debates on if you should use them or not. That is why there is no straight forward process to do it in Hugo.\u003c/p\u003e\n\u003cp\u003eThank you for reading. If you have any questions or queries, please use the comment section below.\u003c/p\u003e\n","content":"Hugo is a fantastic framework to generate static site from markdown and serve them. Using environment variables in templates is a breeze but using them in markdown files can be a bit tricky. You need to use custom shortcodes as workaround to resolve this issue.Table of contents\u0026nbsp;  What is shortcodes Custom shortcodes Use environment variable in shortcodes  By getenv variable By site variable   In conclusion   \nWhat is shortcodes Now the question comes, what is shorcode? From Hugo\u0026rsquo;s documentation:\n Shortcodes can access page variables and also have their own specific built-in variables.\n Meaning you can use this to access different variables like from config file or you can write your own shortcodes to provide your custom variables. We will be using both to access environment variables. Let us see how to create custom shortcodes. This shortcodes will be used in markdown files.\nCustom shortcodes First, you need to create a new folder named shortcodes inside the layouts directory. Inside that, you need to create a template which will be treated as a shortcode. For example, if you create layouts/shortcodes/abc.html, then you can access variables inside home_dir.html in markdown files via {{\u0026lt; home_dir \u0026gt;}}. The folder structure will look like this:\nHugo Project ├── content ├── layouts │ └── shortcodes │ ├── home_dir.html │ └── custom_dir.html ├── static ├── themes └──config.toml More information can be found in hugo\u0026rsquo;s documentation.\nUse environment variable in shortcodes Now it is time to use environment variables in these shortcodes. There are two ways you can achieve this.\nBy getenv variable You can use getenv in the shortcodes. For example, if you write {{ getenv \u0026quot;HOME\u0026quot; }} in home_dir.html then, if you use {{\u0026lt; home_dir \u0026gt;}} in markdown, it should render the home directory name in rendered pages.\nBy site variable You can directly access site-level variables(or global variables) in shortcodes. For that, first you need to declare them in config.toml(or json or other formats):\ntheme = \u0026#34;your theme\u0026#34; baseURL = \u0026#34;/\u0026#34; [params] homeDir = \u0026#34;/home/arnab\u0026#34; Then in home_dir.html, you can write:\n{{ .Site.Params.homeDir }} Finally, if you want to provide your environment variable as homeDir, then pass it as argument when running hugo server:\nenv HUGO_PARAMS_homeDir=${HOME} hugo server Or if you want to generate the html files, then run:\nenv HUGO_PARAMS_homeDir=${HOME} hugo In conclusion It is very easy to use environment variables in markdown using Hugo. Although there are many debates on if you should use them or not. That is why there is no straight forward process to do it in Hugo.\nThank you for reading. If you have any questions or queries, please use the comment section below.\n","description":"By using custom shortcodes, here is how to pass environment variables in markdown files for Hugo."},{"date_published":"2020-03-30T00:00:02+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"March 30, 2020","id":"https://ruddra.com/project-battle-of-capstones-results/","url":"https://ruddra.com/project-battle-of-capstones-results/","title":"Find Best Neighborhood to Fight Pandemic in NYC - Results","image":"https://ruddra.com/content/images/2020/06/use-mask.jpg","tags":["Python","Data Science","COVID-19"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003eDisclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis report consists of three parts: \u003ca href=\"/project-battle-of-capstones/\"\u003e\u003cstrong\u003ebusiness problem and data preparation\u003c/strong\u003e\u003c/a\u003e, \u003ca href=\"/project-battle-of-capstones-methodology/\"\u003e\u003cstrong\u003emethodology\u003c/strong\u003e\u003c/a\u003e, \u003cstrong\u003evisualization and results\u003c/strong\u003e. In this part, we are going visualize the data, discuss about the results and draw a conclusion.\u003c/p\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#visualize-with-folium\"\u003eVisualize with folium\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-scatter-plot\"\u003eUse scatter plot\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#results-and-discussion\"\u003eResults and discussion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#what-could-be-done-better\"\u003eWhat could be done better\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"visualize-with-folium\"\u003eVisualize with folium\u003c/h2\u003e\n\u003cp\u003eNow, we are going to use \u003ca href=\"https://python-visualization.github.io/folium/\"\u003e\u003cstrong\u003e\u003ccode\u003efolium\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to visualize the distribution. The first map illustrates the clusters where the radius of the Circle marker is proportional to hospital beds per hundred people.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1184\" height=\"1082\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1184 1082'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/13.bed_per_people_map_hu45978efd10667761d8f4af1b0a1c69b9_251277_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/13.bed_per_people_map_hu45978efd10667761d8f4af1b0a1c69b9_251277_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/13.bed_per_people_map_hu45978efd10667761d8f4af1b0a1c69b9_251277_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/13.bed_per_people_map_hu45978efd10667761d8f4af1b0a1c69b9_251277_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cluster Maps' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/13.bed_per_people_map.jpg\" width=\"1184\" height=\"1082\" alt='Cluster Maps'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThe second map illustrates the clusters where the radius of the Circle marker is proportional to icu beds per hundred people.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1086\" height=\"1054\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1086 1054'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/14.icu_bed_people_map_hu8c6eedb01fe79429634cf48044844b37_226479_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/14.icu_bed_people_map_hu8c6eedb01fe79429634cf48044844b37_226479_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/14.icu_bed_people_map_hu8c6eedb01fe79429634cf48044844b37_226479_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/14.icu_bed_people_map_hu8c6eedb01fe79429634cf48044844b37_226479_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cluster Maps' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/14.icu_bed_people_map.jpg\" width=\"1086\" height=\"1054\" alt='Cluster Maps'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eWe can see that one of the clusters (blue circle) consists in one borough - \u003cstrong\u003eManhattan\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"use-scatter-plot\"\u003eUse scatter plot\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s look at the scatter plots of our data and define our clusters with colors. The grey circle marker is representing the centroid of each cluster. Don\u0026rsquo;t forget that our data is normalized, so the axes do not deliver real values.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"657\" height=\"435\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 657 435'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/15.scatter_bed_per_people_huf55b1124210fe157f9957d19635ea913_26278_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/15.scatter_bed_per_people_huf55b1124210fe157f9957d19635ea913_26278_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/15.scatter_bed_per_people_huf55b1124210fe157f9957d19635ea913_26278_600x0_resize_q75_lanczos.jpg 600w'\n        alt='Scatter Plot 1' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/15.scatter_bed_per_people.jpg\" width=\"657\" height=\"435\" alt='Scatter Plot 1'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"680\" height=\"443\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 680 443'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/16.scatter_bed_per_people_hua6b8225b0fbc6fcd3e5659c133ef6c0b_27267_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/16.scatter_bed_per_people_hua6b8225b0fbc6fcd3e5659c133ef6c0b_27267_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/16.scatter_bed_per_people_hua6b8225b0fbc6fcd3e5659c133ef6c0b_27267_600x0_resize_q75_lanczos.jpg 600w'\n        alt='Scatter Plot 2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/16.scatter_bed_per_people.jpg\" width=\"680\" height=\"443\" alt='Scatter Plot 2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eWe can observe the obvious outlier here. This neighborhood has a high number of beds per people ratio. From maps above we can easily say that it is \u003cstrong\u003eMurray Hill\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"results-and-discussion\"\u003eResults and discussion\u003c/h2\u003e\n\u003cp\u003eDuring the analysis, three clusters were defined. One cluster(cluster 2), that consists of only one area, has been defined as the outsider, due to the high number of hospital beds, which means it is better equipped to handle this pandemic. Two other groups were clustered according to bed per hundred people and icu bed per hundred people. It is obvious that the cluster with the lowest beds per person is the place where we should concentrate on providing beds and other equipment(Cluster 0). We also should look into conditions in Queens Village and Williamsburg as they have very low beds per hundred people. Furthermore, in hundred other neighborhoods, there is no hospital data. Hence, people living there are at high risk of not being treated during pandemic.\u003c/p\u003e\n\u003ch2 id=\"what-could-be-done-better\"\u003eWhat could be done better\u003c/h2\u003e\n\u003cp\u003eFoursquare doesn\u0026rsquo;t represent the full picture, since many hospitals are not on the list. For that reason, other maps could be utilized such as Google map or OpenStreet map.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNYS Health Profile website\u003c/strong\u003e might lacks the latest information regarding hospital information. It could lack information regarding new hospitals. Also, hospital ids were extracted manually from NYS, which could have missing hospitals. We also dropped neighborhoods which did not have any hospital data matching in \u003cstrong\u003eNYS Health Profile website\u003c/strong\u003e. For this project, we are only using data from 74 hospitals in NYC.\u003c/p\u003e\n\u003cp\u003eWe are using fuzzy-wuzzy to match hospital data from Foursquare and NYS Health Profile. It is not a correct measure because we are matching the names nearest possible, it could be wrong in real life scenario.\u003c/p\u003e\n\u003cp\u003eWe are also only considering hospital data. We did not consider other medical facilities like nursing home or health clinic.\u003c/p\u003e\n\u003cp\u003eWe used population data from 2010(as per Wikipedia pages), which are not accurate currently. We should have used the latest population data.\u003c/p\u003e\n\u003cp\u003eFinally, to battle COVID-19, we should have had patient data for the neighborhood. Unfortunately, we could not find it like this(for example, get patient per latitude longitude) from any source, hence could not incorporate it.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eTo conclude, the basic data analysis was performed to identify the most well equipped hospital in the NYC neighborhoods. During the analysis, several important statistical features of the boroughs/neighborhoods were explored and visualized. Furthermore, clustering helped to highlight the group of optimal areas. Finally, \u003cstrong\u003eManhattan-Murray Hill\u003c/strong\u003e was chosen as the most well equipped(as per hospital bed count and icu bed count) area to battle pandemic.\u003c/p\u003e\n","content":" Disclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this part, we are going visualize the data, discuss about the results and draw a conclusion.\nTable of contents\u0026nbsp;  Visualize with folium Use scatter plot Results and discussion What could be done better Conclusion    Visualize with folium Now, we are going to use folium to visualize the distribution. The first map illustrates the clusters where the radius of the Circle marker is proportional to hospital beds per hundred people.\n   The second map illustrates the clusters where the radius of the Circle marker is proportional to icu beds per hundred people.\n   We can see that one of the clusters (blue circle) consists in one borough - Manhattan.\nUse scatter plot Let\u0026rsquo;s look at the scatter plots of our data and define our clusters with colors. The grey circle marker is representing the centroid of each cluster. Don\u0026rsquo;t forget that our data is normalized, so the axes do not deliver real values.\n     \nWe can observe the obvious outlier here. This neighborhood has a high number of beds per people ratio. From maps above we can easily say that it is Murray Hill.\nResults and discussion During the analysis, three clusters were defined. One cluster(cluster 2), that consists of only one area, has been defined as the outsider, due to the high number of hospital beds, which means it is better equipped to handle this pandemic. Two other groups were clustered according to bed per hundred people and icu bed per hundred people. It is obvious that the cluster with the lowest beds per person is the place where we should concentrate on providing beds and other equipment(Cluster 0). We also should look into conditions in Queens Village and Williamsburg as they have very low beds per hundred people. Furthermore, in hundred other neighborhoods, there is no hospital data. Hence, people living there are at high risk of not being treated during pandemic.\nWhat could be done better Foursquare doesn\u0026rsquo;t represent the full picture, since many hospitals are not on the list. For that reason, other maps could be utilized such as Google map or OpenStreet map.\nNYS Health Profile website might lacks the latest information regarding hospital information. It could lack information regarding new hospitals. Also, hospital ids were extracted manually from NYS, which could have missing hospitals. We also dropped neighborhoods which did not have any hospital data matching in NYS Health Profile website. For this project, we are only using data from 74 hospitals in NYC.\nWe are using fuzzy-wuzzy to match hospital data from Foursquare and NYS Health Profile. It is not a correct measure because we are matching the names nearest possible, it could be wrong in real life scenario.\nWe are also only considering hospital data. We did not consider other medical facilities like nursing home or health clinic.\nWe used population data from 2010(as per Wikipedia pages), which are not accurate currently. We should have used the latest population data.\nFinally, to battle COVID-19, we should have had patient data for the neighborhood. Unfortunately, we could not find it like this(for example, get patient per latitude longitude) from any source, hence could not incorporate it.\nConclusion To conclude, the basic data analysis was performed to identify the most well equipped hospital in the NYC neighborhoods. During the analysis, several important statistical features of the boroughs/neighborhoods were explored and visualized. Furthermore, clustering helped to highlight the group of optimal areas. Finally, Manhattan-Murray Hill was chosen as the most well equipped(as per hospital bed count and icu bed count) area to battle pandemic.\n","description":"Disclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this part, we are going visualize the data, discuss about the results and draw a conclusion."},{"date_published":"2020-03-30T00:00:01+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"March 30, 2020","id":"https://ruddra.com/project-battle-of-capstones-methodology/","url":"https://ruddra.com/project-battle-of-capstones-methodology/","title":"Find Best Neighborhood to Fight Pandemic in NYC - Methodology","image":"https://ruddra.com/content/images/2020/06/use-masks.jpg","tags":["Python","Data Science","COVID-19"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003eDisclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis report consists of three parts: \u003ca href=\"/project-battle-of-capstones/\"\u003e\u003cstrong\u003ebusiness problem and data preparation\u003c/strong\u003e\u003c/a\u003e, \u003cstrong\u003emethodology\u003c/strong\u003e, \u003ca href=\"/project-battle-of-capstones-results/\"\u003e\u003cstrong\u003evisualization and results\u003c/strong\u003e\u003c/a\u003e. In this article we are going to describe the methodology we used in step by step: \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#step-one-new-york-city-data-with-latitude-and-longitude\"\u003eStep one: New York city data with latitude and longitude\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-two-new-york-city-data-with-population\"\u003eStep two: New York city data with population\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-three-combine-step-one-and-step-two\"\u003eStep three: combine step one and step two\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-four-collect-hospital-data-from-foursquare\"\u003eStep four: collect hospital data from Foursquare\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-five-collect-hospital-bed-data-from-nys-health-profile\"\u003eStep five: collect hospital bed data from NYS Health Profile\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-six-combine-step-four-and-step-five\"\u003eStep six: combine step four and step five\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-seven-combine-data-from-step-three-and-step-six\"\u003eStep seven: combine data from step three and step six\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-eight-add-bed-and-icu-per-hundred-people-to-data-frame\"\u003eStep eight: add bed and icu per hundred people to data frame\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-nine-k-means-clustering\"\u003eStep nine: K-means clustering\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-ten-merge-cluster-labels-with-dataset\"\u003eStep ten: merge cluster labels with dataset\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-eleven-see-which-borough-goes-to-which-cluster\"\u003eStep eleven: see which borough goes to which cluster\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-twelve-neighborhoods-without-hospital\"\u003eStep twelve: neighborhoods without hospital\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"step-one-new-york-city-data-with-latitude-and-longitude\"\u003eStep one: New York city data with latitude and longitude\u003c/h2\u003e\n\u003cp\u003eWe are using \u003ca href=\"https://requests.readthedocs.io/en/master/\"\u003e\u003cstrong\u003e\u003ccode\u003erequests\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to get the json data from \u003ca href=\"https://cocl.us/new_york_dataset\"\u003enyc dataset\u003c/a\u003e and stored it in a data frame.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"696\" height=\"432\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 696 432'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/1.nyc_data_hu79c60a0410b3d0e8361bd9643b2cb7a6_33067_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/1.nyc_data_hu79c60a0410b3d0e8361bd9643b2cb7a6_33067_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/1.nyc_data_hu79c60a0410b3d0e8361bd9643b2cb7a6_33067_600x0_resize_q75_lanczos.jpg 600w'\n        alt='NYC Data' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/1.nyc_data.jpg\" width=\"696\" height=\"432\" alt='NYC Data'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-two-new-york-city-data-with-population\"\u003eStep two: New York city data with population\u003c/h2\u003e\n\u003cp\u003eThen we can use \u003ca href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\"\u003e\u003cstrong\u003e\u003ccode\u003eBeautifulSoup\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to scrape boroughs from Wikipedia. Then we have collected every link given in neighborhood column of the table. From each link, we can run iteration via requests to visit those Wikipedia pages, and scrap population data from right hand side table.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"628\" height=\"432\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 628 432'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/2.nyc_population_data_hub41e5fc2b8e026ebbf754b5ccf9bd1ce_25120_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/2.nyc_population_data_hub41e5fc2b8e026ebbf754b5ccf9bd1ce_25120_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/2.nyc_population_data_hub41e5fc2b8e026ebbf754b5ccf9bd1ce_25120_600x0_resize_q75_lanczos.jpg 600w'\n        alt='NYC Population Data' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/2.nyc_population_data.jpg\" width=\"628\" height=\"432\" alt='NYC Population Data'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-three-combine-step-one-and-step-two\"\u003eStep three: combine step one and step two\u003c/h2\u003e\n\u003cp\u003eWe can combine data frames from previous steps into one based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1522\" height=\"558\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1522 558'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/3.nyc_combined_data_hu958406278d3c4e5514ab937d384ca039_67262_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/3.nyc_combined_data_hu958406278d3c4e5514ab937d384ca039_67262_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/3.nyc_combined_data_hu958406278d3c4e5514ab937d384ca039_67262_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/3.nyc_combined_data_hu958406278d3c4e5514ab937d384ca039_67262_720x0_resize_q75_lanczos.jpg 720w'\n        alt='NYC Combined Data' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/3.nyc_combined_data.jpg\" width=\"1522\" height=\"558\" alt='NYC Combined Data'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eHere is a box chart of \u0026ldquo;Population\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='Population vs borough'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAlso, another box chart of \u0026ldquo;neighborhood\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='Population vs borough'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-four-collect-hospital-data-from-foursquare\"\u003eStep four: collect hospital data from Foursquare\u003c/h2\u003e\n\u003cp\u003eAfter collecting population data, now it is time to collect the hospital data. We can use the \u003cstrong\u003eFoursquare\u003c/strong\u003e API to fetch hospital data for latitude and longitude of each neighborhood from the previous dataset.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1644\" height=\"620\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1644 620'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/4.hospital_per_neighborhood_borough_huedfc480cbaa5c76736dba5c99e2686c4_110784_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/4.hospital_per_neighborhood_borough_huedfc480cbaa5c76736dba5c99e2686c4_110784_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/4.hospital_per_neighborhood_borough_huedfc480cbaa5c76736dba5c99e2686c4_110784_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/4.hospital_per_neighborhood_borough_huedfc480cbaa5c76736dba5c99e2686c4_110784_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Hospital per borough' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/4.hospital_per_neighborhood_borough.jpg\" width=\"1644\" height=\"620\" alt='Hospital per borough'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-five-collect-hospital-bed-data-from-nys-health-profile\"\u003eStep five: collect hospital bed data from NYS Health Profile\u003c/h2\u003e\n\u003cp\u003eWe can also collect hospital bed related data from \u003ca href=\"https://profiles.health.ny.gov/\"\u003eNYS Health Profile website\u003c/a\u003e. We can scrap data by using \u003ca href=\"https://www.selenium.dev/\"\u003e\u003cstrong\u003e\u003ccode\u003eSelenium\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e with \u003cstrong\u003e\u003ccode\u003eBeautifulSoap\u003c/code\u003e\u003c/strong\u003e. We have collected the IDs of hospitals in NYC manually, and based on those IDs, we have scraped data from \u003cstrong\u003eNYS Health Profile website\u003c/strong\u003e. The data frame looks like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1106\" height=\"326\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1106 326'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/5.hospital_bed_data_hue643a67fe2c424f628eb1420a42b7b93_31234_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/5.hospital_bed_data_hue643a67fe2c424f628eb1420a42b7b93_31234_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/5.hospital_bed_data_hue643a67fe2c424f628eb1420a42b7b93_31234_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/5.hospital_bed_data_hue643a67fe2c424f628eb1420a42b7b93_31234_720x0_resize_q75_lanczos.jpg 720w'\n        alt='NYS' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/5.hospital_bed_data.jpg\" width=\"1106\" height=\"326\" alt='NYS'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-six-combine-step-four-and-step-five\"\u003eStep six: combine step four and step five\u003c/h2\u003e\n\u003cp\u003eNow we are going to combine data from step four and step five. We are going to internally join the data frame based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1394\" height=\"460\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1394 460'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/6.combine_hospital_neighbor_bed_data_hucf7fa3c3dc665e945b5f8f881f9f3d79_61760_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/6.combine_hospital_neighbor_bed_data_hucf7fa3c3dc665e945b5f8f881f9f3d79_61760_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/6.combine_hospital_neighbor_bed_data_hucf7fa3c3dc665e945b5f8f881f9f3d79_61760_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/6.combine_hospital_neighbor_bed_data_hucf7fa3c3dc665e945b5f8f881f9f3d79_61760_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Combine hospital data' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/6.combine_hospital_neighbor_bed_data.jpg\" width=\"1394\" height=\"460\" alt='Combine hospital data'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eWe are going to clean up the data a little bit and sum up bed count and icu bed count grouping by \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"884\" height=\"454\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 884 454'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/7.neighborhood_per_bed_data_hu02e1ae53cdc5d81acf89a00f27827b26_23610_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/7.neighborhood_per_bed_data_hu02e1ae53cdc5d81acf89a00f27827b26_23610_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/7.neighborhood_per_bed_data_hu02e1ae53cdc5d81acf89a00f27827b26_23610_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/7.neighborhood_per_bed_data_hu02e1ae53cdc5d81acf89a00f27827b26_23610_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cleaned hospital data' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/7.neighborhood_per_bed_data.jpg\" width=\"884\" height=\"454\" alt='Cleaned hospital data'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eHere is a box charts of \u0026ldquo;bed count\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='Bed count per boroguh'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAlso another box charts of \u0026ldquo;ICU bed count\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='Bed count per borough'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-seven-combine-data-from-step-three-and-step-six\"\u003eStep seven: combine data from step three and step six\u003c/h2\u003e\n\u003cp\u003eNow we are going to combine data from step three and step six. Means, we are going to combine the population data with hospital bed count data. We are going to merge two data frames based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;. New data frame looks like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1254\" height=\"464\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1254 464'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/8.combined_nyc_h_data_hu8ee5fa154de44828c1248bb5cd5b5261_61431_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/8.combined_nyc_h_data_hu8ee5fa154de44828c1248bb5cd5b5261_61431_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/8.combined_nyc_h_data_hu8ee5fa154de44828c1248bb5cd5b5261_61431_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/8.combined_nyc_h_data_hu8ee5fa154de44828c1248bb5cd5b5261_61431_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Bed count per borough' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/8.combined_nyc_h_data.jpg\" width=\"1254\" height=\"464\" alt='Bed count per borough'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-eight-add-bed-and-icu-per-hundred-people-to-data-frame\"\u003eStep eight: add bed and icu per hundred people to data frame\u003c/h2\u003e\n\u003cp\u003eNow we are going to calculate bed per hundred people based on two rows: \u003ccode\u003ePopulation\u003c/code\u003e and \u003ccode\u003eBed Number\u003c/code\u003e. Then add this to the data frame. Similarly, we are going to add ICU data to data frame:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1624\" height=\"428\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1624 428'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/9.icu_bed_per_100_hu2e27faee39e8299bd174f10791f5df13_63970_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/9.icu_bed_per_100_hu2e27faee39e8299bd174f10791f5df13_63970_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/9.icu_bed_per_100_hu2e27faee39e8299bd174f10791f5df13_63970_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/9.icu_bed_per_100_hu2e27faee39e8299bd174f10791f5df13_63970_720x0_resize_q75_lanczos.jpg 720w'\n        alt='With bed/icu per 100 people' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/9.icu_bed_per_100.jpg\" width=\"1624\" height=\"428\" alt='With bed/icu per 100 people'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-nine-k-means-clustering\"\u003eStep nine: K-means clustering\u003c/h2\u003e\n\u003cp\u003eNow we are going to use k-means clustering to partition the data into \u003cstrong\u003ek\u003c/strong\u003e groups. we will be using \u003ca href=\"https://www.geeksforgeeks.org/elbow-method-for-optimal-value-of-k-in-kmeans/\"\u003e\u003cstrong\u003e\u003ccode\u003eelbow method\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to find the optimal number of \u003cstrong\u003ek\u003c/strong\u003e. The \u0026ldquo;elbow\u0026rdquo; (the point of inflection on the curve) is a good indication that the underlying model fits best at that point. In the visualizer \u0026ldquo;elbow\u0026rdquo;, value of \u003cstrong\u003ek\u003c/strong\u003e is 3.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='K-means elbow'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-ten-merge-cluster-labels-with-dataset\"\u003eStep ten: merge cluster labels with dataset\u003c/h2\u003e\n\u003cp\u003eAfter that, we are going to merge cluster labels of groups with data frames. The data frame looks like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1702\" height=\"454\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1702 454'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/11.with_cluster_label_hu8f292b8322d68522d9809c51de174c78_67316_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/11.with_cluster_label_hu8f292b8322d68522d9809c51de174c78_67316_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/11.with_cluster_label_hu8f292b8322d68522d9809c51de174c78_67316_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/11.with_cluster_label_hu8f292b8322d68522d9809c51de174c78_67316_720x0_resize_q75_lanczos.jpg 720w'\n        alt='DF with cluster label' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/11.with_cluster_label.jpg\" width=\"1702\" height=\"454\" alt='DF with cluster label'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-eleven-see-which-borough-goes-to-which-cluster\"\u003eStep eleven: see which borough goes to which cluster\u003c/h2\u003e\n\u003cp\u003eLet us see which boroughs belong to which clusters.\u003c/p\u003e\n\u003cp\u003eHere is the dataset for \u003cem\u003ecluster 0\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2296\" height=\"864\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2296 864'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/21.cluster_0_hu9cf996b86fdf767a483e98175208133d_128780_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/21.cluster_0_hu9cf996b86fdf767a483e98175208133d_128780_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/21.cluster_0_hu9cf996b86fdf767a483e98175208133d_128780_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/21.cluster_0_hu9cf996b86fdf767a483e98175208133d_128780_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cluster 0' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/21.cluster_0.jpg\" width=\"2296\" height=\"864\" alt='Cluster 0'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eHere is the dataset for \u003cem\u003ecluster 1\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1864\" height=\"1330\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1864 1330'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/22.cluster_1_hu4a668240d78f8adeb7a7b76ca6873f8a_143196_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/22.cluster_1_hu4a668240d78f8adeb7a7b76ca6873f8a_143196_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/22.cluster_1_hu4a668240d78f8adeb7a7b76ca6873f8a_143196_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/22.cluster_1_hu4a668240d78f8adeb7a7b76ca6873f8a_143196_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cluster 1' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/22.cluster_1.jpg\" width=\"1864\" height=\"1330\" alt='Cluster 1'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eHere is the dataset for \u003cem\u003ecluster 2\u003c/em\u003e:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2156\" height=\"222\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2156 222'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/23.cluster_2_hu0eacd327f2215a0c885500714e7bdc00_35680_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/23.cluster_2_hu0eacd327f2215a0c885500714e7bdc00_35680_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/23.cluster_2_hu0eacd327f2215a0c885500714e7bdc00_35680_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/23.cluster_2_hu0eacd327f2215a0c885500714e7bdc00_35680_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Cluster 2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/23.cluster_2.jpg\" width=\"2156\" height=\"222\" alt='Cluster 2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"step-twelve-neighborhoods-without-hospital\"\u003eStep twelve: neighborhoods without hospital\u003c/h2\u003e\n\u003cp\u003eSo far, we have analyzed dataset for neighborhoods with hospitals. Now, we should look into neighborhoods without hospital data:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"246\" height=\"300\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 246 300'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/24.data_without_hospital_hu9c0b851243dc7a6e721ec80d62e4d823_12591_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/24.data_without_hospital_hu9c0b851243dc7a6e721ec80d62e4d823_12591_500x0_resize_q75_lanczos.jpg 500w'\n        alt='neighborhood without hospital' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/24.data_without_hospital.jpg\" width=\"246\" height=\"300\" alt='neighborhood without hospital'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIf we see the indexes of neighborhoods with and without hospital, it should look like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"404\" height=\"45\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 404 45'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/25.neighborhood_count_huae8937be8c4c6dea2bfc6df10d18574b_5494_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/25.neighborhood_count_huae8937be8c4c6dea2bfc6df10d18574b_5494_500x0_resize_q75_lanczos.jpg 500w'\n        alt='Count of neighborhoods w/o hospital' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/25.neighborhood_count.jpg\" width=\"404\" height=\"45\" alt='Count of neighborhoods w/o hospital'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eWe can see that there are 100 neighborhoods which does not have any hospital.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eIn \u003ca href=\"/project-battle-of-capstones-results/\"\u003enext article\u003c/a\u003e, we are going to visualize the data collected from previous steps and discuss about our results.\u003c/p\u003e\n","content":" Disclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this article we are going to describe the methodology we used in step by step: Table of contents\u0026nbsp;  Step one: New York city data with latitude and longitude Step two: New York city data with population Step three: combine step one and step two Step four: collect hospital data from Foursquare Step five: collect hospital bed data from NYS Health Profile Step six: combine step four and step five Step seven: combine data from step three and step six Step eight: add bed and icu per hundred people to data frame Step nine: K-means clustering Step ten: merge cluster labels with dataset Step eleven: see which borough goes to which cluster Step twelve: neighborhoods without hospital Conclusion   \nStep one: New York city data with latitude and longitude We are using requests to get the json data from nyc dataset and stored it in a data frame.\n   Step two: New York city data with population Then we can use BeautifulSoup to scrape boroughs from Wikipedia. Then we have collected every link given in neighborhood column of the table. From each link, we can run iteration via requests to visit those Wikipedia pages, and scrap population data from right hand side table.\n   Step three: combine step one and step two We can combine data frames from previous steps into one based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;:\n   Here is a box chart of \u0026ldquo;Population\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\n   Also, another box chart of \u0026ldquo;neighborhood\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\n   Step four: collect hospital data from Foursquare After collecting population data, now it is time to collect the hospital data. We can use the Foursquare API to fetch hospital data for latitude and longitude of each neighborhood from the previous dataset.\n   Step five: collect hospital bed data from NYS Health Profile We can also collect hospital bed related data from NYS Health Profile website. We can scrap data by using Selenium with BeautifulSoap. We have collected the IDs of hospitals in NYC manually, and based on those IDs, we have scraped data from NYS Health Profile website. The data frame looks like this:\n   Step six: combine step four and step five Now we are going to combine data from step four and step five. We are going to internally join the data frame based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;.\n   We are going to clean up the data a little bit and sum up bed count and icu bed count grouping by \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;:\n   Here is a box charts of \u0026ldquo;bed count\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\n   Also another box charts of \u0026ldquo;ICU bed count\u0026rdquo; per \u0026ldquo;borough\u0026rdquo;:\n   Step seven: combine data from step three and step six Now we are going to combine data from step three and step six. Means, we are going to combine the population data with hospital bed count data. We are going to merge two data frames based on \u0026ldquo;neighborhood\u0026rdquo; and \u0026ldquo;borough\u0026rdquo;. New data frame looks like this:\n   Step eight: add bed and icu per hundred people to data frame Now we are going to calculate bed per hundred people based on two rows: Population and Bed Number. Then add this to the data frame. Similarly, we are going to add ICU data to data frame:\n   Step nine: K-means clustering Now we are going to use k-means clustering to partition the data into k groups. we will be using elbow method to find the optimal number of k. The \u0026ldquo;elbow\u0026rdquo; (the point of inflection on the curve) is a good indication that the underlying model fits best at that point. In the visualizer \u0026ldquo;elbow\u0026rdquo;, value of k is 3.\n   Step ten: merge cluster labels with dataset After that, we are going to merge cluster labels of groups with data frames. The data frame looks like this:\n   Step eleven: see which borough goes to which cluster Let us see which boroughs belong to which clusters.\nHere is the dataset for cluster 0:\n   Here is the dataset for cluster 1:\n   Here is the dataset for cluster 2:\n   Step twelve: neighborhoods without hospital So far, we have analyzed dataset for neighborhoods with hospitals. Now, we should look into neighborhoods without hospital data:\n   If we see the indexes of neighborhoods with and without hospital, it should look like this:\n   We can see that there are 100 neighborhoods which does not have any hospital.\nConclusion In next article, we are going to visualize the data collected from previous steps and discuss about our results.\n","description":"Disclaimer: this article has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this article we are going to describe the methodology we used in step by step: Table of contents\u0026nbsp;  Step one: New York city data with latitude and longitude Step two: New York city data with population Step three: combine step one and step two Step four: collect hospital data from Foursquare Step five: collect hospital bed data from NYS Health Profile Step six: combine step four and step five Step seven: combine data from step three and step six Step eight: add bed and icu per hundred people to data frame Step nine: K-means clustering Step ten: merge cluster labels with dataset Step eleven: see which borough goes to which cluster Step twelve: neighborhoods without hospital Conclusion"},{"date_published":"2020-03-30T00:00:00+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"March 30, 2020","id":"https://ruddra.com/project-battle-of-capstones/","url":"https://ruddra.com/project-battle-of-capstones/","title":"Find Best Neighborhood to Fight Pandemic in NYC - Data Preparation","image":"https://ruddra.com/content/images/2020/03/hospital.jpg","tags":["Python","Data Science","COVID-19"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003eDisclaimer: this report has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis report consists of three parts: \u003cstrong\u003ebusiness problem and data preparation\u003c/strong\u003e, \u003ca href=\"/project-battle-of-capstones-methodology/\"\u003e\u003cstrong\u003emethodology\u003c/strong\u003e\u003c/a\u003e, \u003ca href=\"/project-battle-of-capstones-visualization-results/\"\u003e\u003cstrong\u003evisualization and results\u003c/strong\u003e\u003c/a\u003e. In this part, we will discuss about business problem and data preparation steps.\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#business-problem\"\u003eBusiness problem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#data\"\u003eData\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#approach\"\u003eApproach\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#data-preparation\"\u003eData preparation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#source-code\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"business-problem\"\u003eBusiness problem\u003c/h2\u003e\n\u003cp\u003eRight now, New York is one of the worst hit state by \u003ca href=\"https://en.wikipedia.org/wiki/Coronavirus_disease_2019\"\u003eCOVID-19\u003c/a\u003e in USA. New York city is at the center of the disaster. The hospitals are already stretched thin with patients overflowing. According to \u003ca href=\"https://www.nytimes.com/2020/03/26/nyregion/coronavirus-new-york-update.html\"\u003eNew York Times\u003c/a\u003e report, (at the moment of writing) death toll was 365, case count topped 23,000.\u003c/p\u003e\n\u003cp\u003eI was motivated by this to create something useful which would give some insight on this situation. In this project we are going to determine which neighborhood is best prepared for this pandemic, by finding out the best ratio of hospital beds per person for each neighborhood in this city.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eBy all means, the reports here should not be used as a measuring tool, because in reality the situation has been changed a lot since Coronavirus COVID-19 has hit the city.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"data\"\u003eData\u003c/h2\u003e\n\u003cp\u003eWe will be collecting data from following sources:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eNew York City data that contains \u003cstrong\u003eborough\u003c/strong\u003e, \u003cstrong\u003eneighborhoods\u003c/strong\u003e along with their \u003cstrong\u003elatitudes\u003c/strong\u003e and \u003cstrong\u003elongitudes\u003c/strong\u003e.\n\u003cul\u003e\n\u003cli\u003eData source: \u003ca href=\"https://cocl.us/new_york_dataset\"\u003eNYC data set\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe are going to get \u003cstrong\u003epopulation\u003c/strong\u003e data from Scraping Wikipedia.\n\u003cul\u003e\n\u003cli\u003eData source: Wikipedia page of \u003ca href=\"https://en.wikipedia.org/wiki/neighborhoods_in_New_York_City\"\u003eNYC neighborhood\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eWe are going to go through each of the links of neighborhood and find the population of each of them.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHospital information is going to be fetched from foursquare API.\n\u003cul\u003e\n\u003cli\u003eData source: foursquare API\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eHospital bed information is going to be fetched from \u003cstrong\u003eNYS Health Profile website\u003c/strong\u003e.\n\u003cul\u003e\n\u003cli\u003eData source: \u003ca href=\"https://profiles.health.ny.gov/\"\u003eNYS Health Profile\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"approach\"\u003eApproach\u003c/h2\u003e\n\u003cp\u003eThis is our approach to resolve issue:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCollect the \u003ca href=\"https://cocl.us/new_york_dataset\"\u003eNew York city dataset\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eCollect population data for each neighborhood by scraping Wikipedia.\u003c/li\u003e\n\u003cli\u003eUsing Foursquare API we will get hospitals for each neighborhood.\u003c/li\u003e\n\u003cli\u003eCollect hospital bed data by scraping data from \u003cstrong\u003eNYS Health Profile\u003c/strong\u003e.\u003c/li\u003e\n\u003cli\u003eData Visualization and some statistical analysis.\u003c/li\u003e\n\u003cli\u003eAnalyzing using Clustering (Specially K-Means).\u003c/li\u003e\n\u003cli\u003eFind the best value of K\u003c/li\u003e\n\u003cli\u003eVisualize the neighborhood max density of hospital beds per 100 people.\u003c/li\u003e\n\u003cli\u003eVisualize the neighborhood max density of hospital ICU beds per 100 people.\u003c/li\u003e\n\u003cli\u003eInference From these results and related conclusions.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"data-preparation\"\u003eData preparation\u003c/h2\u003e\n\u003cp\u003eData used in the analysis are listed below:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, collect \u003ca href=\"https://cocl.us/new_york_dataset\"\u003ethe json dataset\u003c/a\u003e, which will contain borough, neighborhood, latitude and longitude information.\u003c/li\u003e\n\u003cli\u003eneighborhood data in New York City will be collected from scraping the \u003ca href=\"https://en.wikipedia.org/wiki/neighborhoods_in_New_York_City\"\u003eWikipedia\u003c/a\u003e page. links given in the neighborhood section of the table will be visited via scraper, and find the population for each of them. Then data will be cleaned up and used to create a data frame containing borough, neighborhood and population.\u003c/li\u003e\n\u003cli\u003eHospitals per neighborhood information will be collected from foursquare API.\u003c/li\u003e\n\u003cli\u003eWe will collect bed and icu capacity information from \u003ca href=\"https://profiles.health.ny.gov/\"\u003eNYS Health Profile website\u003c/a\u003e. Will be using selenium based scraping as this is a dynamic site.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"source-code\"\u003eSource code\u003c/h2\u003e\n\u003cp\u003eSource code of this project can be found on \u003ca href=\"https://github.com/ruddra/project-capstone-nyc-fights-pandemic\"\u003e\u003cstrong\u003egithub\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eWe will discuss about the methodologies we used to retrieve the results in \u003ca href=\"/project-battle-of-capstones-methodology/\"\u003enext article\u003c/a\u003e.\u003c/p\u003e\n","content":" Disclaimer: this report has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this part, we will discuss about business problem and data preparation steps. Table of contents\u0026nbsp;  Business problem Data Approach Data preparation Source code Conclusion   \nBusiness problem Right now, New York is one of the worst hit state by COVID-19 in USA. New York city is at the center of the disaster. The hospitals are already stretched thin with patients overflowing. According to New York Times report, (at the moment of writing) death toll was 365, case count topped 23,000.\nI was motivated by this to create something useful which would give some insight on this situation. In this project we are going to determine which neighborhood is best prepared for this pandemic, by finding out the best ratio of hospital beds per person for each neighborhood in this city.\nBy all means, the reports here should not be used as a measuring tool, because in reality the situation has been changed a lot since Coronavirus COVID-19 has hit the city.\nData We will be collecting data from following sources:\n New York City data that contains borough, neighborhoods along with their latitudes and longitudes.  Data source: NYC data set.   We are going to get population data from Scraping Wikipedia.  Data source: Wikipedia page of NYC neighborhood. We are going to go through each of the links of neighborhood and find the population of each of them.   Hospital information is going to be fetched from foursquare API.  Data source: foursquare API   Hospital bed information is going to be fetched from NYS Health Profile website.  Data source: NYS Health Profile.    Approach This is our approach to resolve issue:\n Collect the New York city dataset. Collect population data for each neighborhood by scraping Wikipedia. Using Foursquare API we will get hospitals for each neighborhood. Collect hospital bed data by scraping data from NYS Health Profile. Data Visualization and some statistical analysis. Analyzing using Clustering (Specially K-Means). Find the best value of K Visualize the neighborhood max density of hospital beds per 100 people. Visualize the neighborhood max density of hospital ICU beds per 100 people. Inference From these results and related conclusions.  Data preparation Data used in the analysis are listed below:\n First, collect the json dataset, which will contain borough, neighborhood, latitude and longitude information. neighborhood data in New York City will be collected from scraping the Wikipedia page. links given in the neighborhood section of the table will be visited via scraper, and find the population for each of them. Then data will be cleaned up and used to create a data frame containing borough, neighborhood and population. Hospitals per neighborhood information will be collected from foursquare API. We will collect bed and icu capacity information from NYS Health Profile website. Will be using selenium based scraping as this is a dynamic site.  Source code Source code of this project can be found on github.\nConclusion We will discuss about the methodologies we used to retrieve the results in next article.\n","description":"Disclaimer: this report has been generated as part of IBM Data Science Professional Certificate course\u0026rsquo;s final submission.\n This report consists of three parts: business problem and data preparation, methodology, visualization and results. In this part, we will discuss about business problem and data preparation steps. Table of contents\u0026nbsp;  Business problem Data Approach Data preparation Source code Conclusion"},{"date_published":"2020-03-06T00:59:54+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"March 6, 2020","id":"https://ruddra.com/hugo-deploy-static-page-using-github-actions/","url":"https://ruddra.com/hugo-deploy-static-page-using-github-actions/","title":"Hugo: Deploy Static Site using GitHub Actions","image":"https://ruddra.com/content/images/2020/03/hugo_boss.jpg","tags":["Hugo","GitHub","CI/CD","Pipeline"],"content_html":"\u003cp\u003eIf you are using Hugo to generate static pages, you are familiar with CLI commands which are to build the static pages in your local machine and make push to your \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e repository. When it comes to using Hugo for blogging, compared to platforms like Medium or WordPress, it is very painful because you do not have any web interface to make changes whenever you want or wherever you want.\u003c/p\u003e\n\u003cp\u003eBut thanks to \u003ca href=\"https://github.com/features/actions\"\u003eGitHub Actions\u003c/a\u003e, you can almost overcome this problem, just you won\u0026rsquo;t have an admin panel like other platforms, but use GitHub\u0026rsquo;s UI to make changes. In this article, we will see how you can do that and without using any CLI, deploy your static pages!!\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-github-actions\"\u003eWhat is GitHub Actions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#steps-to-deploy-hugo-with-github-actions\"\u003eSteps to deploy Hugo with GitHub actions\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#step-1-setting-up-repo-named-usernamegithubio-in-github\"\u003eStep 1: Setting up repo named \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e in GitHub\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-2-install-and-create-a-hugo-project\"\u003eStep 2: Install and create a Hugo project\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-3-push-hugo-site-code-in-github\"\u003eStep 3: Push Hugo site code in GitHub\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-4-create-github-token\"\u003eStep 4: Create GitHub token\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-5-add-token-as-secret-in-github\"\u003eStep 5: Add token as secret in GitHub\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-6-create-a-github-action\"\u003eStep 6: Create A GitHub Action\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-7-push-to-github\"\u003eStep 7: Push to GitHub\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#step-8-never-use-cli-again\"\u003eStep 8: Never use CLI again\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-is-github-actions\"\u003eWhat is GitHub Actions\u003c/h2\u003e\n\u003cp\u003eGitHub Actions is a CI/CD tool to automate test, build and deployment process in GitHub. It is kind of equivalent to \u003ca href=\"https://docs.gitlab.com/ee/ci/\"\u003eGitLab CI/CD\u003c/a\u003e or \u003ca href=\"https://bitbucket.org/product/features/pipelines\"\u003eBitBucket Pipelines\u003c/a\u003e. GitHub actions will make it easy to automate all your software workflows.\u003c/p\u003e\n\u003ch2 id=\"steps-to-deploy-hugo-with-github-actions\"\u003eSteps to deploy Hugo with GitHub actions\u003c/h2\u003e\n\u003cp\u003eWe are going to deploy our site in \u003ca href=\"https://pages.github.com/\"\u003eGitHub Static Pages\u003c/a\u003e for this article. Let us go step by step from setting up Hugo to create actions for deployment. Also, in the first few steps you need to use CLI from your local machine, but just bear with me and you will be rewarded handsomely at the end 😄.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eFYI:\u003c/strong\u003e If you already have a \u003cem\u003eHugo based setup in GitHub\u003c/em\u003e, you can skip \u003cem\u003ethe first three steps\u003c/em\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"step-1-setting-up-repo-named-usernamegithubio-in-github\"\u003eStep 1: Setting up repo named \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e in GitHub\u003c/h3\u003e\n\u003cp\u003eYou need to create a repository named \u003ccode\u003e\u0026lt;your GitHub username\u0026gt;.github.io\u003c/code\u003e. Contents on that page will be accessible via url same name as the repo.\u003c/p\u003e\n\u003ch3 id=\"step-2-install-and-create-a-hugo-project\"\u003eStep 2: Install and create a Hugo project\u003c/h3\u003e\n\u003cp\u003eYou need to install Hugo in your local machine and use that to create a \u003cstrong\u003esite\u003c/strong\u003e. Please take a look at the \u003ca href=\"https://gohugo.io/getting-started/quick-start/\"\u003eofficial documentation\u003c/a\u003e on how to do that.\u003c/p\u003e\n\u003ch3 id=\"step-3-push-hugo-site-code-in-github\"\u003eStep 3: Push Hugo site code in GitHub\u003c/h3\u003e\n\u003cp\u003eNow create a new GitHub repo for that Hugo site, and push to master branch. Just follow this steps:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit remote add origin git@github.com:\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit add --all\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit commit -m \u003cspan class=\"s2\"\u003e\u0026#34;Commit MSG\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit push origin master\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you have added a theme, then consider adding it as submodule(also stated in the \u003ca href=\"https://gohugo.io/getting-started/quick-start/#step-3-add-a-theme\"\u003ehugo documentation\u003c/a\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBetter if you update the submodule to get latest theme changes before pushing the code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit submodule update --init --recursive\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit push origin master\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr you can always update the latest theme in the actions. Example has been shared in \u003ca href=\"#step-6-create-a-github-action\"\u003ecreate github action section\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"step-4-create-github-token\"\u003eStep 4: Create GitHub token\u003c/h3\u003e\n\u003cp\u003eNow you need to generate a token with repo access from the \u003ca href=\"https://github.com/settings/tokens/new\"\u003eGitHub\u0026rsquo;s tokens\u003c/a\u003e page. You will get a 40 character long token by generating the token. Store it somewhere securely.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1524\" height=\"868\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1524 868'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/github_token_hu7fba9da1679ce4a56c592454604cb9c1_173034_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/github_token_hu7fba9da1679ce4a56c592454604cb9c1_173034_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/github_token_hu7fba9da1679ce4a56c592454604cb9c1_173034_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/github_token_hu7fba9da1679ce4a56c592454604cb9c1_173034_720x0_resize_q75_lanczos.jpg 720w'\n        alt='github' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/github_token.jpg\" width=\"1524\" height=\"868\" alt='github'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"step-5-add-token-as-secret-in-github\"\u003eStep 5: Add token as secret in GitHub\u003c/h3\u003e\n\u003cp\u003eThe token last step, you can store it in the \u003ccode\u003eSecrets\u003c/code\u003e setting of the repo. It can be accessible from \u003ccode\u003ehttps://github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt;/settings/secrets\u003c/code\u003e. Store it like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1502\" height=\"1198\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1502 1198'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/github_secret_hu7fba9da1679ce4a56c592454604cb9c1_153648_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/github_secret_hu7fba9da1679ce4a56c592454604cb9c1_153648_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/github_secret_hu7fba9da1679ce4a56c592454604cb9c1_153648_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/github_secret_hu7fba9da1679ce4a56c592454604cb9c1_153648_720x0_resize_q75_lanczos.jpg 720w'\n        alt='github' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/github_secret.jpg\" width=\"1502\" height=\"1198\" alt='github'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"step-6-create-a-github-action\"\u003eStep 6: Create A GitHub Action\u003c/h3\u003e\n\u003cp\u003eNow it is time to do the fun stuff. Let us create an action in \u003ccode\u003e.github/workflows/\u003c/code\u003e folder inside the repo(hugo site repo) and name it \u003ccode\u003emain.yml\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCI\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epush\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ejobs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edeploy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eubuntu-18.04\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esteps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGit checkout\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactions/checkout@v2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eUpdate theme\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c\"\u003e# (Optional)If you have the theme added as submodule, you can pull it and use the most updated version\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit submodule update --init --recursive\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetup hugo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeaceiris/actions-hugo@v2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehugo-version\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;0.64.0\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBuild\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c\"\u003e# remove --minify tag if you do not need it\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c\"\u003e# docs: https://gohugo.io/hugo-pipes/minification/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehugo --minify\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeploy\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeaceiris/actions-gh-pages@v3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epersonal_token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${{ secrets.TOKEN }}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eexternal_repository\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epublish_dir\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./public\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"c\"\u003e#   keep_files: true\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euser_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euser_email\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;username@email.com\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epublish_branch\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emaster\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"c\"\u003e#   cname: example.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs mentioned from \u003ccode\u003emain.yml\u003c/code\u003e file, it is named \u003cstrong\u003eCI\u003c/strong\u003e and this is going to be triggered when something is pushed to the repo. It will be using an \u003ccode\u003eubuntu-18.04\u003c/code\u003e based VPS to run the pipeline. Now let us go through steps to understand how it works:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eIn the \u003cstrong\u003e\u003ccode\u003eGit checkout\u003c/code\u003e\u003c/strong\u003e step, we are going to fetch the latest code of our repository which contains Hugo site.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the \u003cstrong\u003e\u003ccode\u003eSetup hugo\u003c/code\u003e\u003c/strong\u003e step, we are going to use \u003ca href=\"https://github.com/peaceiris/actions-hugo\"\u003epeaceiris/actions-hugo\u003c/a\u003e to install Hugo. You need to specify which hugo version you want to use. I would recommend using hugo version of your local machine(command: \u003ccode\u003ehugo version\u003c/code\u003e).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the \u003cstrong\u003e\u003ccode\u003eBuild\u003c/code\u003e\u003c/strong\u003e step, we are going to build the static contents using \u003ccode\u003ehugo --minify\u003c/code\u003e command. By using \u003ccode\u003e--minify\u003c/code\u003e, we are going to minify the assets in the site. For more information, checkout the \u003ca href=\"https://gohugo.io/hugo-pipes/minification/\"\u003ehugo documentation\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFinally, the \u003cstrong\u003e\u003ccode\u003eDeploy\u003c/code\u003e\u003c/strong\u003e step. Now we are going to deploy the static contents from the last step. And we are going to use \u003ca href=\"https://github.com/peaceiris/actions-gh-pages\"\u003epeaceiris/actions-gh-pages\u003c/a\u003e actions to run the deployment. Here, we used \u003ccode\u003eexternal_repository: \u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io\u003c/code\u003e because otherwise the static contents would be pushed in the same repo(in a different branch). As we specified the external repository, the static contents will be pushed to \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e. For this step, we will use the personal token which we specified in \u003ca href=\"#step-5-add-token-as-secret-in-github\"\u003eStep 5\u003c/a\u003e. If you uncomment \u003ccode\u003ekeep_files: true\u003c/code\u003e, then the deployment will keep old files from \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e, otherwise it will replace everything. Finally, if you have a custom domain, then configuring \u003ccode\u003ecname\u003c/code\u003e is necessary. For more information, please check \u003ca href=\"https://github.com/marketplace/actions/github-pages-action\"\u003edocumentation in GitHub marketplace\u003c/a\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"step-7-push-to-github\"\u003eStep 7: Push to GitHub\u003c/h3\u003e\n\u003cp\u003eNow push to your Hugo site repository and voila, your action will start automatically. You can check its progress in the \u003ccode\u003eactions\u003c/code\u003e tab.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1513\" height=\"153\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1513 153'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/03/github_actions_hub1dc45346a8c2fa2bc41a08ab45dcb5f_26415_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/03/github_actions_hub1dc45346a8c2fa2bc41a08ab45dcb5f_26415_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/03/github_actions_hub1dc45346a8c2fa2bc41a08ab45dcb5f_26415_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/03/github_actions_hub1dc45346a8c2fa2bc41a08ab45dcb5f_26415_720x0_resize_q75_lanczos.jpg 720w'\n        alt='github' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/03/github_actions.jpg\" width=\"1513\" height=\"153\" alt='github'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAfter each successful run, it will push the static contents to your static page repository.\u003c/p\u003e\n\u003ch3 id=\"step-8-never-use-cli-again\"\u003eStep 8: Never use CLI again\u003c/h3\u003e\n\u003cp\u003eNow you have everything in GitHub, so you do not need to come back to your local machine and use CLI to push changes. Use the web interface, and GitHub actions will take care of the rest.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eAlthough you need to create a Hugo site in your local machine and push it manually to GitHub at least for the first time and consequent changes can be done from the web(but you can do that from your local machine as well). Just create a \u003cstrong\u003emarkdown\u003c/strong\u003e file in repo and boom! It is on the internet.\u003c/p\u003e\n\u003cp\u003eThank you for reading. If you have any questions or a better solution, let us talk in the comment section below. Cheers!!\u003c/p\u003e\n","content":"If you are using Hugo to generate static pages, you are familiar with CLI commands which are to build the static pages in your local machine and make push to your \u0026lt;username\u0026gt;.github.io repository. When it comes to using Hugo for blogging, compared to platforms like Medium or WordPress, it is very painful because you do not have any web interface to make changes whenever you want or wherever you want.\nBut thanks to GitHub Actions, you can almost overcome this problem, just you won\u0026rsquo;t have an admin panel like other platforms, but use GitHub\u0026rsquo;s UI to make changes. In this article, we will see how you can do that and without using any CLI, deploy your static pages!!Table of contents\u0026nbsp;  What is GitHub Actions Steps to deploy Hugo with GitHub actions  Step 1: Setting up repo named \u0026lt;username\u0026gt;.github.io in GitHub Step 2: Install and create a Hugo project Step 3: Push Hugo site code in GitHub Step 4: Create GitHub token Step 5: Add token as secret in GitHub Step 6: Create A GitHub Action Step 7: Push to GitHub Step 8: Never use CLI again   In conclusion   \nWhat is GitHub Actions GitHub Actions is a CI/CD tool to automate test, build and deployment process in GitHub. It is kind of equivalent to GitLab CI/CD or BitBucket Pipelines. GitHub actions will make it easy to automate all your software workflows.\nSteps to deploy Hugo with GitHub actions We are going to deploy our site in GitHub Static Pages for this article. Let us go step by step from setting up Hugo to create actions for deployment. Also, in the first few steps you need to use CLI from your local machine, but just bear with me and you will be rewarded handsomely at the end 😄.\n FYI: If you already have a Hugo based setup in GitHub, you can skip the first three steps.\n Step 1: Setting up repo named \u0026lt;username\u0026gt;.github.io in GitHub You need to create a repository named \u0026lt;your GitHub username\u0026gt;.github.io. Contents on that page will be accessible via url same name as the repo.\nStep 2: Install and create a Hugo project You need to install Hugo in your local machine and use that to create a site. Please take a look at the official documentation on how to do that.\nStep 3: Push Hugo site code in GitHub Now create a new GitHub repo for that Hugo site, and push to master branch. Just follow this steps:\ngit init git remote add origin git@github.com:\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt; git add --all git commit -m \u0026#34;Commit MSG\u0026#34; git push origin master If you have added a theme, then consider adding it as submodule(also stated in the hugo documentation):\ngit submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke Better if you update the submodule to get latest theme changes before pushing the code:\ngit submodule update --init --recursive git push origin master Or you can always update the latest theme in the actions. Example has been shared in create github action section.\nStep 4: Create GitHub token Now you need to generate a token with repo access from the GitHub\u0026rsquo;s tokens page. You will get a 40 character long token by generating the token. Store it somewhere securely.\n   Step 5: Add token as secret in GitHub The token last step, you can store it in the Secrets setting of the repo. It can be accessible from https://github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt;/settings/secrets. Store it like this:\n   Step 6: Create A GitHub Action Now it is time to do the fun stuff. Let us create an action in .github/workflows/ folder inside the repo(hugo site repo) and name it main.yml.\nname:CIon:pushjobs:deploy:runs-on:ubuntu-18.04steps:- name:Git checkoutuses:actions/checkout@v2- name:Update theme# (Optional)If you have the theme added as submodule, you can pull it and use the most updated versionrun:git submodule update --init --recursive- name:Setup hugouses:peaceiris/actions-hugo@v2with:hugo-version:\u0026#34;0.64.0\u0026#34;- name:Build# remove --minify tag if you do not need it# docs: https://gohugo.io/hugo-pipes/minification/run:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:personal_token:${{ secrets.TOKEN }}external_repository:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.iopublish_dir:./public# keep_files: trueuser_name:\u0026lt;username\u0026gt;user_email:\u0026lt;username@email.com\u0026gt;publish_branch:master# cname: example.comAs mentioned from main.yml file, it is named CI and this is going to be triggered when something is pushed to the repo. It will be using an ubuntu-18.04 based VPS to run the pipeline. Now let us go through steps to understand how it works:\n  In the Git checkout step, we are going to fetch the latest code of our repository which contains Hugo site.\n  In the Setup hugo step, we are going to use peaceiris/actions-hugo to install Hugo. You need to specify which hugo version you want to use. I would recommend using hugo version of your local machine(command: hugo version).\n  In the Build step, we are going to build the static contents using hugo --minify command. By using --minify, we are going to minify the assets in the site. For more information, checkout the hugo documentation.\n  Finally, the Deploy step. Now we are going to deploy the static contents from the last step. And we are going to use peaceiris/actions-gh-pages actions to run the deployment. Here, we used external_repository: \u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io because otherwise the static contents would be pushed in the same repo(in a different branch). As we specified the external repository, the static contents will be pushed to \u0026lt;username\u0026gt;.github.io. For this step, we will use the personal token which we specified in Step 5. If you uncomment keep_files: true, then the deployment will keep old files from \u0026lt;username\u0026gt;.github.io, otherwise it will replace everything. Finally, if you have a custom domain, then configuring cname is necessary. For more information, please check documentation in GitHub marketplace.\n  Step 7: Push to GitHub Now push to your Hugo site repository and voila, your action will start automatically. You can check its progress in the actions tab.\n   After each successful run, it will push the static contents to your static page repository.\nStep 8: Never use CLI again Now you have everything in GitHub, so you do not need to come back to your local machine and use CLI to push changes. Use the web interface, and GitHub actions will take care of the rest.\nIn conclusion Although you need to create a Hugo site in your local machine and push it manually to GitHub at least for the first time and consequent changes can be done from the web(but you can do that from your local machine as well). Just create a markdown file in repo and boom! It is on the internet.\nThank you for reading. If you have any questions or a better solution, let us talk in the comment section below. Cheers!!\n","description":"If you are using Hugo to generate static pages, you are familiar with CLI commands which are to build the static pages in your local machine and make push to your \u0026lt;username\u0026gt;.github.io repository. When it comes to using Hugo for blogging, compared to platforms like Medium or WordPress, it is very painful because you do not have any web interface to make changes whenever you want or wherever you want."},{"date_published":"2020-02-28T00:53:28+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"February 28, 2020","id":"https://ruddra.com/docker-ship-database-with-container/","url":"https://ruddra.com/docker-ship-database-with-container/","title":"Ship Application with Database Inside Docker Container","image":"https://ruddra.com/content/images/2020/02/ship.jpg","tags":["Docker","MySQL","Postgres","DevOps"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eDISCLAIMER:\u003c/strong\u003e This is not the recommended process. Ideally you should have the database running in a separate container and use network to interact with that container.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eUsually, we don’t ship application with the database inside the same container. But sometimes we are forced to do that. In this article we are going to see a minimalist way of shipping application with database built-in inside docker container.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#overview-of-the-implementation\"\u003eOverview of the implementation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#codes-for-postgresql-based-image\"\u003eCodes for PostgreSQL based image\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#write-dockerfile-for-postgresql\"\u003eWrite Dockerfile for PostgreSQL\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#write-entrypoint-and-application-related-scripts-for-postgresql\"\u003eWrite entrypoint and application related scripts for PostgreSQL\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#build-and-run-docker-with-postgresql\"\u003eBuild and run docker with PostgreSQL\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#codes-for-mysql-based-image\"\u003eCodes for MySQL based image\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#write-dockerfile-for-mysql\"\u003eWrite Dockerfile for MySQL\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#write-entrypoint-and-application-related-scripts-for-mysql\"\u003eWrite entrypoint and application related scripts for MySQL\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#build-and-run-docker-with-mysql\"\u003eBuild and run docker with MySQL\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#working-examples-in-github\"\u003eWorking examples in github\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"overview-of-the-implementation\"\u003eOverview of the implementation\u003c/h2\u003e\n\u003cp\u003eWe will inherit the database image(ie official PostgreSQL image or MySQL image etc) as base and build it from there. We will write our own \u003ca href=\"https://docs.docker.com/engine/reference/builder/#entrypoint\"\u003e\u003cstrong\u003e\u003ccode\u003eentrypoint\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e script, and call the parent image\u0026rsquo;s \u003cstrong\u003eentrypoint script\u003c/strong\u003e inside our \u003cstrong\u003eentrypoint\u003c/strong\u003e with arguments we receive from \u003ca href=\"https://docs.docker.com/engine/reference/builder/#cmd\"\u003e\u003cstrong\u003e\u003ccode\u003eCMD\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e directive. With that, we will run additional commands which are required for running our application. Key points to remember here are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOverride the base image\u0026rsquo;s \u003cstrong\u003eentrypoint\u003c/strong\u003e script inside our \u003cstrong\u003eentrypoint\u003c/strong\u003e script.\u003c/li\u003e\n\u003cli\u003eKeep the \u003ccode\u003eCMD\u003c/code\u003e of the child(our \u003ccode\u003eDockerfile\u003c/code\u003e) same as the parent. For example: \u003ccode\u003eCMD [\u0026quot;postgres\u0026quot;]\u003c/code\u003e for PostgreSQL, \u003ccode\u003eCMD [\u0026quot;mysqld\u0026quot;]\u003c/code\u003e for MySQL.\u003c/li\u003e\n\u003cli\u003eIn our \u003cstrong\u003eentrypoint\u003c/strong\u003e, we will add additional commands and scripts for running our application.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"codes-for-postgresql-based-image\"\u003eCodes for PostgreSQL based image\u003c/h2\u003e\n\u003ch3 id=\"write-dockerfile-for-postgresql\"\u003eWrite Dockerfile for PostgreSQL\u003c/h3\u003e\n\u003cp\u003eFirst let us write a \u003ccode\u003eDockerfile\u003c/code\u003e based on \u003ca href=\"https://github.com/docker-library/postgres/tree/master/12/alpine\"\u003e\u003cstrong\u003e\u003ccode\u003epostgres:12-alpine\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e postgres:12-alpine\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e POSTGRES_USERNAME \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e POSTGRES_PASSWORD \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e POSTGRES_DB \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install your dependencies here\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e ./src /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e my-entry-point.sh /\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chmod +x /my-entry-point.sh\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# not necessary if you are planning to run commands without a bash file\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e application-related-commands.sh /\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chmod +x /application-related-commands.sh\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# entrypoint\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENTRYPOINT\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/my-entry-point.sh\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;postgres\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# expose port necessary for your application\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eEXPOSE\u003c/span\u003e\u003cspan class=\"s\"\u003e 8000\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"write-entrypoint-and-application-related-scripts-for-postgresql\"\u003eWrite entrypoint and application related scripts for PostgreSQL\u003c/h3\u003e\n\u003cp\u003eNow, write necessary commands inside \u003ccode\u003eapplication-related-commands.sh\u003c/code\u003e to run our app and put it in the same directory as \u003ccode\u003eDockerfile\u003c/code\u003e. Finally add your \u003ccode\u003emy-entry-point.sh\u003c/code\u003e in the same directory as \u003ccode\u003eDockerfile\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#!/bin/sh\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e/usr/local/bin/docker-entrypoint.sh \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$@\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e /application-related-commands.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInstead of \u003ccode\u003e/application-related-commands\u003c/code\u003e, you can add your custom commands without needing any files.\u003c/p\u003e\n\u003cp\u003eHere we are running the parent image\u0026rsquo;s(PostgreSQL) entry point script by \u003ccode\u003e/usr/local/bin/docker-entrypoint.sh\u003c/code\u003e because if you check the \u003ca href=\"https://github.com/docker-library/postgres/blob/master/12/alpine/Dockerfile#L147\"\u003esource code in github\u003c/a\u003e, you will see that the entry point script is being stored in \u003ccode\u003e/usr/local/bin/\u003c/code\u003e folder.\u003c/p\u003e\n\u003ch3 id=\"build-and-run-docker-with-postgresql\"\u003eBuild and run docker with PostgreSQL\u003c/h3\u003e\n\u003cp\u003eUse this command to build:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker build . -t psql-based-image\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd run with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -p 8000:8000 -v /your/path:/var/lib/postgresql/data/ -t psql-based-image\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"codes-for-mysql-based-image\"\u003eCodes for MySQL based image\u003c/h2\u003e\n\u003ch3 id=\"write-dockerfile-for-mysql\"\u003eWrite Dockerfile for MySQL\u003c/h3\u003e\n\u003cp\u003eThis is similar to the above implementation, apart from the \u003ccode\u003eCMD\u003c/code\u003e directive. Let us write a \u003ccode\u003eDockerfile\u003c/code\u003e based on \u003ca href=\"https://github.com/docker-library/mysql/blob/master/8.0/Dockerfile\"\u003e\u003cstrong\u003e\u003ccode\u003emysql:8\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e mysql:8\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e MYSQL_ROOT_PASSWORD \u003cspan class=\"s1\"\u003e\u0026#39;mypassword\u0026#39;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# Install your dependencies here\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e ./*.jar /src/runable.jar\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e my-entry-point.sh /\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chmod +x /my-entry-point.sh\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# not necessary if you are planning to run commands without a bash file\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e application-related-commands.sh /\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chmod +x /application-related-commands.sh\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# entrypoint\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENTRYPOINT\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/my-entry-point.sh\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;mysqld\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# expose port necessary for your application\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eEXPOSE\u003c/span\u003e\u003cspan class=\"s\"\u003e 7654\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"write-entrypoint-and-application-related-scripts-for-mysql\"\u003eWrite entrypoint and application related scripts for MySQL\u003c/h3\u003e\n\u003cp\u003eImplementation of the rest of the stuff(\u003ccode\u003emy-entry-point.sh\u003c/code\u003e and \u003ccode\u003eapplication-related-commands.sh\u003c/code\u003e) are same as \u003ca href=\"#write-entrypoint-and-application-related-scripts-for-postgresql\"\u003e\u003cstrong\u003ePostgreSQL image\u003c/strong\u003e\u003c/a\u003e based implementation.\u003c/p\u003e\n\u003ch3 id=\"build-and-run-docker-with-mysql\"\u003eBuild and run docker with MySQL\u003c/h3\u003e\n\u003cp\u003eUse this command to build:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker build . -t mysql-based-image\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd run with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -p 7654:7654 -t mysql-based-image\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"working-examples-in-github\"\u003eWorking examples in github\u003c/h2\u003e\n\u003cp\u003eIn this article, we have seen an overview on how we might be able to ship applications with database. For working examples, please \u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker\"\u003e\u003cstrong\u003echeckout this repository on github\u003c/strong\u003e\u003c/a\u003e. It has examples of:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/python-mysql-docker\"\u003eA Python Application with MySQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/python-postgres-docker\"\u003eA Python Application with PostgreSQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/django-mysql-docker\"\u003eA Django Project with MySQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/django-postgres-docker\"\u003eA Django Project with PostgreSQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/java-mysql-docker\"\u003eA Java App with MySQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ruddra/ship-app-with-db-docker/blob/master/java-postgres-docker\"\u003eA Java App with PostgreSQL in Docker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eI still think this solution is far from perfect, maybe you can suggest better ideas. Let us discuss more in the comment section below.\u003c/p\u003e\n","content":" DISCLAIMER: This is not the recommended process. Ideally you should have the database running in a separate container and use network to interact with that container.\n Usually, we don’t ship application with the database inside the same container. But sometimes we are forced to do that. In this article we are going to see a minimalist way of shipping application with database built-in inside docker container.Table of contents\u0026nbsp;  Overview of the implementation Codes for PostgreSQL based image  Write Dockerfile for PostgreSQL Write entrypoint and application related scripts for PostgreSQL Build and run docker with PostgreSQL   Codes for MySQL based image  Write Dockerfile for MySQL Write entrypoint and application related scripts for MySQL Build and run docker with MySQL   Working examples in github In conclusion   \nOverview of the implementation We will inherit the database image(ie official PostgreSQL image or MySQL image etc) as base and build it from there. We will write our own entrypoint script, and call the parent image\u0026rsquo;s entrypoint script inside our entrypoint with arguments we receive from CMD directive. With that, we will run additional commands which are required for running our application. Key points to remember here are:\n Override the base image\u0026rsquo;s entrypoint script inside our entrypoint script. Keep the CMD of the child(our Dockerfile) same as the parent. For example: CMD [\u0026quot;postgres\u0026quot;] for PostgreSQL, CMD [\u0026quot;mysqld\u0026quot;] for MySQL. In our entrypoint, we will add additional commands and scripts for running our application.  Codes for PostgreSQL based image Write Dockerfile for PostgreSQL First let us write a Dockerfile based on postgres:12-alpine:\nFROMpostgres:12-alpineENV POSTGRES_USERNAME \u0026#39;postgres\u0026#39;ENV POSTGRES_PASSWORD \u0026#39;postgres\u0026#39;ENV POSTGRES_DB \u0026#39;postgres\u0026#39;# Install your dependencies hereWORKDIR/srcADD ./src /srcCOPY my-entry-point.sh /RUN chmod +x /my-entry-point.sh# not necessary if you are planning to run commands without a bash fileCOPY application-related-commands.sh /RUN chmod +x /application-related-commands.sh# entrypointENTRYPOINT [\u0026#34;/my-entry-point.sh\u0026#34;]CMD [\u0026#34;postgres\u0026#34;]# expose port necessary for your applicationEXPOSE8000Write entrypoint and application related scripts for PostgreSQL Now, write necessary commands inside application-related-commands.sh to run our app and put it in the same directory as Dockerfile. Finally add your my-entry-point.sh in the same directory as Dockerfile like this:\n#!/bin/sh /usr/local/bin/docker-entrypoint.sh \u0026#34;$@\u0026#34; \u0026amp; /application-related-commands.sh Instead of /application-related-commands, you can add your custom commands without needing any files.\nHere we are running the parent image\u0026rsquo;s(PostgreSQL) entry point script by /usr/local/bin/docker-entrypoint.sh because if you check the source code in github, you will see that the entry point script is being stored in /usr/local/bin/ folder.\nBuild and run docker with PostgreSQL Use this command to build:\ndocker build . -t psql-based-image And run with:\ndocker run -p 8000:8000 -v /your/path:/var/lib/postgresql/data/ -t psql-based-image Codes for MySQL based image Write Dockerfile for MySQL This is similar to the above implementation, apart from the CMD directive. Let us write a Dockerfile based on mysql:8:\nFROMmysql:8ENV MYSQL_ROOT_PASSWORD \u0026#39;mypassword\u0026#39;# Install your dependencies hereWORKDIR/srcADD ./*.jar /src/runable.jarCOPY my-entry-point.sh /RUN chmod +x /my-entry-point.sh# not necessary if you are planning to run commands without a bash fileCOPY application-related-commands.sh /RUN chmod +x /application-related-commands.sh# entrypointENTRYPOINT [\u0026#34;/my-entry-point.sh\u0026#34;]CMD [\u0026#34;mysqld\u0026#34;]# expose port necessary for your applicationEXPOSE7654Write entrypoint and application related scripts for MySQL Implementation of the rest of the stuff(my-entry-point.sh and application-related-commands.sh) are same as PostgreSQL image based implementation.\nBuild and run docker with MySQL Use this command to build:\ndocker build . -t mysql-based-image And run with:\ndocker run -p 7654:7654 -t mysql-based-image Working examples in github In this article, we have seen an overview on how we might be able to ship applications with database. For working examples, please checkout this repository on github. It has examples of:\n A Python Application with MySQL in Docker A Python Application with PostgreSQL in Docker A Django Project with MySQL in Docker A Django Project with PostgreSQL in Docker A Java App with MySQL in Docker A Java App with PostgreSQL in Docker  In conclusion I still think this solution is far from perfect, maybe you can suggest better ideas. Let us discuss more in the comment section below.\n","description":"DISCLAIMER: This is not the recommended process. Ideally you should have the database running in a separate container and use network to interact with that container.\n Usually, we don’t ship application with the database inside the same container. But sometimes we are forced to do that. In this article we are going to see a minimalist way of shipping application with database built-in inside docker container."},{"date_published":"2020-02-14T01:00:00+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"February 14, 2020","id":"https://ruddra.com/reactjs-maintain-auth-layer-from-redux-middleware-router/","url":"https://ruddra.com/reactjs-maintain-auth-layer-from-redux-middleware-router/","title":"Maintain Authentication Layer from Redux Middleware Using React Router","image":"https://ruddra.com/content/images/2020/02/middleware.jpg","tags":["React","Redux","React Router"],"content_html":"\u003cp\u003eMaintaining authentication layer in \u003ca href=\"https://reactjs.org/\"\u003e\u003cstrong\u003e\u003ccode\u003eReactJS\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e can be painful. Back in the old days(even now-a-days), you needed to override every \u003ccode\u003ecomponentDidMount\u003c/code\u003e method in class based components to see if the user is authenticated. In the latest ReactJS, there are hooks(specially \u003ccode\u003euseEffect\u003c/code\u003e) where you need to write these checks. Either way, some codes will be redundant.\u003c/p\u003e\n\u003cp\u003eNo worries, with the help of \u003ca href=\"https://redux.js.org/\"\u003e\u003cstrong\u003e\u003ccode\u003eredux\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e and \u003ca href=\"https://reacttraining.com/react-router/web/guides/quick-start\"\u003e\u003cstrong\u003e\u003ccode\u003ereact router\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e, you can overcome this problem easily using redux middleware. In this article, I am going to share how you can achieve this!!\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisite\"\u003ePrerequisite\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#connect-router-to-redux\"\u003eConnect router to redux\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-a-middleware\"\u003eCreate a middleware\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#add-middleware-to-redux-store\"\u003eAdd middleware to redux store\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-path-to-authentication-map\"\u003eCreate path to authentication map\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-pathtoauthmap-to-validate-path\"\u003eUse \u0026lsquo;pathToAuthMap\u0026rsquo; to validate path\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-checkauthrequired-in-middleware\"\u003eUse \u0026lsquo;checkAuthRequired\u0026rsquo; in middleware\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#advantages-of-this-approach\"\u003eAdvantages of this approach\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#disadvantages-of-this-approach\"\u003eDisadvantages of this approach\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"prerequisite\"\u003ePrerequisite\u003c/h2\u003e\n\u003cp\u003eYou need to use \u003cstrong\u003ereact router\u003c/strong\u003e and \u003cstrong\u003eredux\u003c/strong\u003e, otherwise it won\u0026rsquo;t work. So probably it is better to avoid this approach in smaller projects where you are not using \u003cstrong\u003eredux\u003c/strong\u003e or \u003cstrong\u003ereact router\u003c/strong\u003e, and it will over-complicate the project.\u003c/p\u003e\n\u003ch2 id=\"connect-router-to-redux\"\u003eConnect router to redux\u003c/h2\u003e\n\u003cp\u003eFirst, you need to connect \u003cstrong\u003ereact router\u003c/strong\u003e and \u003cstrong\u003eredux\u003c/strong\u003e. To connect them, you need to use \u003ca href=\"https://github.com/supasate/connected-react-router/\"\u003e\u003cstrong\u003e\u003ccode\u003econnected react router\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e. Just follow their steps to \u003ca href=\"https://github.com/supasate/connected-react-router/#installation\"\u003e\u003cstrong\u003e\u003ccode\u003einstall\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e and \u003ca href=\"https://github.com/supasate/connected-react-router/#usage\"\u003e\u003cstrong\u003e\u003ccode\u003econfigure\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e the package.\u003c/p\u003e\n\u003ch2 id=\"create-a-middleware\"\u003eCreate a middleware\u003c/h2\u003e\n\u003cp\u003eOnce you have connected the \u003cstrong\u003erouter\u003c/strong\u003e to \u003cstrong\u003eredux\u003c/strong\u003e, now it is time to listen to Route Changes. We are going to use a middleware to listen to it. Let us create one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// authentication middleware\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthentication\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;@@router/LOCATION_CHANGE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epathname\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see here, we are looking for an action type named \u003cstrong\u003e\u003ccode\u003e@@router/LOCATION_CHANGE\u003c/code\u003e\u003c/strong\u003e. This action is fired when a route is changed. From it\u0026rsquo;s payload, we can grab the path name as well. Later we are going to use that path for certain functions and actions.\u003c/p\u003e\n\u003ch2 id=\"add-middleware-to-redux-store\"\u003eAdd middleware to redux store\u003c/h2\u003e\n\u003cp\u003eNow, we need to add that middleware to \u003cstrong\u003eredux store\u003c/strong\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ecompose\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;redux\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthentication\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./authenticationMiddleware\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// some code\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateBrowserHistory\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003ebasename\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;baseName\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003erouter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erouterMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003emiddlewareEnhancer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ethunkMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthentication\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003ecomposedEnhancers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecompose\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emiddlewareEnhancer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eotherMiddlewareEnhancers\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003econfigureStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epreloadedState\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ecreateRootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003epreloadedState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003ecomposedEnhancers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-path-to-authentication-map\"\u003eCreate path to authentication map\u003c/h2\u003e\n\u003cp\u003eWe have the path information available in middleware. So we are going to use that information to restrict which path can be accessed with/without authentication. Let us do that:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e//authenticationHelper.js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003epathToAuthMap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eisRegex\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003erequireAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/login\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eisRegex\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003erequireAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"sr\"\u003e/item\\/\\d+/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eisRegex\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003erequireAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-pathtoauthmap-to-validate-path\"\u003eUse \u0026lsquo;pathToAuthMap\u0026rsquo; to validate path\u003c/h2\u003e\n\u003cp\u003eIn the last step, we described which path requires authentication, and which don\u0026rsquo;t. Now, we are going to write a function to evaluate if a certain path requires authentication.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e//authenticationHelper.js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003echeckAuthRequired\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eelement\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nx\"\u003epathToAuthMap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eisRegex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erequireAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003eelement\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erequireAuth\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// default value\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-checkauthrequired-in-middleware\"\u003eUse \u0026lsquo;checkAuthRequired\u0026rsquo; in middleware\u003c/h2\u003e\n\u003cp\u003eFinally, we have everything in our hands, now it is time to connect them together. Means, we are going to use our \u003ccode\u003echeckAuthRequired\u003c/code\u003e method in middleware.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// authentication middleware\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003epush\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;connected-react-router\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003echeckAuthRequired\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./authenticationHelper\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eauthentication\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;@@router/LOCATION_CHANGE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epathname\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003echeckAuthRequired\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003eisAuthenticated\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/login\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWell, the code above is kind of self explanatory. It is checking if a path requires authentication or not, and if yes and user is not authenticated(\u003cem\u003ewe are getting that value from a reducer \u003ccode\u003eisAuthenticated\u003c/code\u003e, assuming we have that reducer from which we can identify if a user is authenticated or not\u003c/em\u003e), then we redirect the user to \u003ccode\u003e/login\u003c/code\u003e page. We are using \u003ccode\u003epush\u003c/code\u003e function from \u003cstrong\u003econnected react router\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eAnd that is it, we have a \u003cem\u003eauthentication middleware\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"advantages-of-this-approach\"\u003eAdvantages of this approach\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCleaner code and keeps the rest of the components simple.\u003c/li\u003e\n\u003cli\u003eEasily maintainable as all the logics for authentication in the same place.\u003c/li\u003e\n\u003cli\u003eNo redundant code in components.\u003c/li\u003e\n\u003cli\u003eMore reusable components.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"disadvantages-of-this-approach\"\u003eDisadvantages of this approach\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOver engineering.\u003c/li\u003e\n\u003cli\u003ePerformance issue might occur as we are checking each and every route change.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eRedundancy or over engineering, this topic is up for debate. But I feel this approach offers more pros than cons. I have not tested this code against server side rendering, but works fine for a create-react-app based solution.\u003c/p\u003e\n\u003cp\u003eThank you for reading, if you need any help or have questions, please use the comment section below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n","content":"Maintaining authentication layer in ReactJS can be painful. Back in the old days(even now-a-days), you needed to override every componentDidMount method in class based components to see if the user is authenticated. In the latest ReactJS, there are hooks(specially useEffect) where you need to write these checks. Either way, some codes will be redundant.\nNo worries, with the help of redux and react router, you can overcome this problem easily using redux middleware. In this article, I am going to share how you can achieve this!!Table of contents\u0026nbsp;  Prerequisite Connect router to redux Create a middleware Add middleware to redux store Create path to authentication map Use \u0026lsquo;pathToAuthMap\u0026rsquo; to validate path Use \u0026lsquo;checkAuthRequired\u0026rsquo; in middleware Advantages of this approach Disadvantages of this approach In conclusion   \nPrerequisite You need to use react router and redux, otherwise it won\u0026rsquo;t work. So probably it is better to avoid this approach in smaller projects where you are not using redux or react router, and it will over-complicate the project.\nConnect router to redux First, you need to connect react router and redux. To connect them, you need to use connected react router. Just follow their steps to install and configure the package.\nCreate a middleware Once you have connected the router to redux, now it is time to listen to Route Changes. We are going to use a middleware to listen to it. Let us create one:\n// authentication middleware export const authentication = (store) =\u0026gt; (next) =\u0026gt; (action) =\u0026gt; { if (action.type === \u0026#34;@@router/LOCATION_CHANGE\u0026#34;) { const path = action.payload.location.pathname; console.log(path); } return next(action); }; As you can see here, we are looking for an action type named @@router/LOCATION_CHANGE. This action is fired when a route is changed. From it\u0026rsquo;s payload, we can grab the path name as well. Later we are going to use that path for certain functions and actions.\nAdd middleware to redux store Now, we need to add that middleware to redux store like this:\nimport { applyMiddleware, createStore, compose } from \u0026#34;redux\u0026#34;; import authentication from \u0026#34;./authenticationMiddleware\u0026#34;; // some code  export const history = createBrowserHistory({ basename: \u0026#34;baseName\u0026#34;, }); const router = routerMiddleware(history); const middlewareEnhancer = applyMiddleware(thunkMiddleware, authentication); const composedEnhancers = compose(middlewareEnhancer, otherMiddlewareEnhancers); export default function configureStore(preloadedState) { return createStore( createRootReducer(history), preloadedState, composedEnhancers ); } Create path to authentication map We have the path information available in middleware. So we are going to use that information to restrict which path can be accessed with/without authentication. Let us do that:\n//authenticationHelper.js const pathToAuthMap = [ { url: \u0026#34;/\u0026#34;, isRegex: false, requireAuth: true, }, { url: \u0026#34;/login\u0026#34;, isRegex: false, requireAuth: false, }, { url: /item\\/\\d+/, isRegex: true, requireAuth: true, }, ]; Use \u0026lsquo;pathToAuthMap\u0026rsquo; to validate path In the last step, we described which path requires authentication, and which don\u0026rsquo;t. Now, we are going to write a function to evaluate if a certain path requires authentication.\n//authenticationHelper.js const checkAuthRequired = (path) =\u0026gt; { for (const element of pathToAuthMap) { if (element.isRegex) { if (element.url.test(path)) { return element.requireAuth; } } else if (element.url == path) { return element.requireAuth; } } return false; // default value }; Use \u0026lsquo;checkAuthRequired\u0026rsquo; in middleware Finally, we have everything in our hands, now it is time to connect them together. Means, we are going to use our checkAuthRequired method in middleware.\n// authentication middleware import { push } from \u0026#34;connected-react-router\u0026#34;; import { checkAuthRequired } from \u0026#34;./authenticationHelper\u0026#34;; export const authentication = (store) =\u0026gt; (next) =\u0026gt; (action) =\u0026gt; { if (action.type === \u0026#34;@@router/LOCATION_CHANGE\u0026#34;) { const path = action.payload.location.pathname; if (checkAuthRequired(path) \u0026amp;\u0026amp; !store.getState().isAuthenticated) { return store.dispatch(push(\u0026#34;/login\u0026#34;)); } } return next(action); }; Well, the code above is kind of self explanatory. It is checking if a path requires authentication or not, and if yes and user is not authenticated(we are getting that value from a reducer isAuthenticated, assuming we have that reducer from which we can identify if a user is authenticated or not), then we redirect the user to /login page. We are using push function from connected react router.\nAnd that is it, we have a authentication middleware.\nAdvantages of this approach  Cleaner code and keeps the rest of the components simple. Easily maintainable as all the logics for authentication in the same place. No redundant code in components. More reusable components.  Disadvantages of this approach  Over engineering. Performance issue might occur as we are checking each and every route change.  In conclusion Redundancy or over engineering, this topic is up for debate. But I feel this approach offers more pros than cons. I have not tested this code against server side rendering, but works fine for a create-react-app based solution.\nThank you for reading, if you need any help or have questions, please use the comment section below.\nCheers!!\n","description":"Maintaining authentication layer in ReactJS can be painful. Back in the old days(even now-a-days), you needed to override every componentDidMount method in class based components to see if the user is authenticated. In the latest ReactJS, there are hooks(specially useEffect) where you need to write these checks. Either way, some codes will be redundant."},{"date_published":"2020-01-31T19:08:29+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"January 31, 2020","id":"https://ruddra.com/aws-codebuild-use-database/","url":"https://ruddra.com/aws-codebuild-use-database/","title":"Use Docker for Accessing Database in AWS CodeBuild","image":"https://ruddra.com/content/images/2020/01/build.jpg","tags":["Docker","CodeBuild","AWS","Pipeline","CI/CD","DevOps"],"content_html":"\u003cp\u003e\u003ca href=\"https://aws.amazon.com/codebuild/\"\u003e\u003cstrong\u003eAWS CodeBuild\u003c/strong\u003e\u003c/a\u003e is an extraordinary tool for building your code. Recently I have been using it to build projects and store docker images in AWS ECR. During those CodeBuild processes, I needed Database for running tests. As the need of the Database was for a limited time and I didn\u0026rsquo;t want to pay extra for it(that is why I did not use AWS RDS), I decided to create database using docker inside CodeBuild. In this post, I am going to describe how I did it.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#create-buildspecyml-file\"\u003eCreate \u0026lsquo;buildspec.yml\u0026rsquo; file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configure-codebuild\"\u003eConfigure \u0026lsquo;CodeBuild\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#start-build\"\u003eStart build\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"create-buildspecyml-file\"\u003eCreate \u0026lsquo;buildspec.yml\u0026rsquo; file\u003c/h2\u003e\n\u003cp\u003eYou need to create a \u003cstrong\u003e\u003ccode\u003ebuildspec.yml\u003c/code\u003e\u003c/strong\u003e file in the root of the project. There you need to define instruction on how to pull docker image of the database you want to run. Here is an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0.2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003evariables\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ePGDATABASE\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XXXXX\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ePGUSER\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XXXXX\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ePGPASSWORD\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XXXXX\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ephases\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eruntime-versions\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epython\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3.8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommands\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edocker pull postgres:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epre_build\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommands\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eecho Running postgres\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edocker run -e PGPASSWORD -e PGUSER -e PGDATABASE -d -p 5432:5432 postgres\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommands\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eecho Build started on `date`\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eecho Installing dependencies\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003epip install -r requirements.txt\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eecho Running tests\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003epython manage.py test\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epost_build\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommands\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eecho Build completed on `date`\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ereports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003emyReport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;**/*\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ecache\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epaths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;/root/.cache/pip/*\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see in the \u003ccode\u003einstall\u003c/code\u003e section of \u003cstrong\u003e\u003ccode\u003ebuildspec.yml\u003c/code\u003e\u003c/strong\u003e, I pulled the \u003cstrong\u003ePostgres\u003c/strong\u003e docker image. Then in \u003ccode\u003epre_build\u003c/code\u003e section, I ran the image with environment variables which were defined in \u003ccode\u003eenv\u003c/code\u003e section. After that, I ran tests in django.\u003c/p\u003e\n\u003ch2 id=\"configure-codebuild\"\u003eConfigure \u0026lsquo;CodeBuild\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003eNow its time to \u003ca href=\"https://docs.aws.amazon.com/codebuild/latest/userguide/getting-started.html\"\u003e\u003cstrong\u003econfigure the \u003ccode\u003eCodeBuild\u003c/code\u003e in AWS console\u003c/strong\u003e\u003c/a\u003e. I think the configuration is quite straightforward. But you need to make sure to tick mark the \u003ccode\u003eprivileged\u003c/code\u003e section of the settings. It should look like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"756\" height=\"268\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 756 268'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2020/01/aws-codedeploy_hu3ed38ab41814fd41a3e7c77e442214fd_49360_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2020/01/aws-codedeploy_hu3ed38ab41814fd41a3e7c77e442214fd_49360_500x0_resize_q75_lanczos.jpg 500w,/content/images/2020/01/aws-codedeploy_hu3ed38ab41814fd41a3e7c77e442214fd_49360_600x0_resize_q75_lanczos.jpg 600w,/content/images/2020/01/aws-codedeploy_hu3ed38ab41814fd41a3e7c77e442214fd_49360_720x0_resize_q75_lanczos.jpg 720w'\n        alt='AWS Code' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2020/01/aws-codedeploy.jpg\" width=\"756\" height=\"268\" alt='AWS Code'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"start-build\"\u003eStart build\u003c/h2\u003e\n\u003cp\u003eAfter configuring CodeBuild, now it is time to start the build process from the dashboard. It can be either triggered from git(if you configured it like this), or you need to start the build manually. That is it, inside CodeBuild processes, it will start a Postgres Database, and allow django to run migrations.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eSpinning up a docker container for database, seems to me like a very efficient solution. Similarly you can spin up any docker container to use as a temporary service, for example run redis, memcache etc.\u003c/p\u003e\n","content":"AWS CodeBuild is an extraordinary tool for building your code. Recently I have been using it to build projects and store docker images in AWS ECR. During those CodeBuild processes, I needed Database for running tests. As the need of the Database was for a limited time and I didn\u0026rsquo;t want to pay extra for it(that is why I did not use AWS RDS), I decided to create database using docker inside CodeBuild. In this post, I am going to describe how I did it.Table of contents\u0026nbsp;  Create \u0026lsquo;buildspec.yml\u0026rsquo; file Configure \u0026lsquo;CodeBuild\u0026rsquo; Start build In conclusion   \nCreate \u0026lsquo;buildspec.yml\u0026rsquo; file You need to create a buildspec.yml file in the root of the project. There you need to define instruction on how to pull docker image of the database you want to run. Here is an example:\nversion:0.2env:variables:PGDATABASE:\u0026#34;XXXXX\u0026#34;PGUSER:\u0026#34;XXXXX\u0026#34;PGPASSWORD:\u0026#34;XXXXX\u0026#34;phases:install:runtime-versions:python:3.8commands:- docker pull postgres:latestpre_build:commands:- echo Running postgres- docker run -e PGPASSWORD -e PGUSER -e PGDATABASE -d -p 5432:5432 postgresbuild:commands:- echo Build started on `date`- echo Installing dependencies- pip install -r requirements.txt- echo Running tests- python manage.py testpost_build:commands:- echo Build completed on `date`reports:myReport:files:- \u0026#34;**/*\u0026#34;cache:paths:- \u0026#34;/root/.cache/pip/*\u0026#34;As you can see in the install section of buildspec.yml, I pulled the Postgres docker image. Then in pre_build section, I ran the image with environment variables which were defined in env section. After that, I ran tests in django.\nConfigure \u0026lsquo;CodeBuild\u0026rsquo; Now its time to configure the CodeBuild in AWS console. I think the configuration is quite straightforward. But you need to make sure to tick mark the privileged section of the settings. It should look like this:\n   Start build After configuring CodeBuild, now it is time to start the build process from the dashboard. It can be either triggered from git(if you configured it like this), or you need to start the build manually. That is it, inside CodeBuild processes, it will start a Postgres Database, and allow django to run migrations.\nIn conclusion Spinning up a docker container for database, seems to me like a very efficient solution. Similarly you can spin up any docker container to use as a temporary service, for example run redis, memcache etc.\n","description":"Using docker to access temporary database in AWS CodeBuild when running test cases."},{"date_published":"2020-01-15T00:50:56+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"January 15, 2020","id":"https://ruddra.com/networking-with-docker/","url":"https://ruddra.com/networking-with-docker/","title":"Basic Networking in Docker","image":"https://ruddra.com/content/images/2020/01/network.jpg","tags":["Docker","Bridge Network"],"content_html":"\u003cp\u003eWe already know that Docker is used for containerization. But networking in docker makes it even better tool for deployment. You can make standalone deployments in containers and communicate between them, or make containers act as host, or even assign mac addresses to containers and act them as devices. It does not matter which host machine you are in, you can make dockers communicate in-between them. In this article, we are going to discuss about bridge networking in docker, and in the end will see on how to communicate from container to host or vice versa.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#communication-between-containers\"\u003eCommunication between containers\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#how-it-works\"\u003eHow it works\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-bridge-network\"\u003eCreate bridge network\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#connect-containers-to-network\"\u003eConnect containers to network\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#disconnect-containers-from-network\"\u003eDisconnect containers from network\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#examples-on-how-to-communicate-between-containers\"\u003eExamples on how to communicate between containers\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#example-with-docker-compose\"\u003eExample with \u0026lsquo;Docker Compose\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#communication-between-host-and-container\"\u003eCommunication between host and container\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#from-container-to-host\"\u003eFrom container to host\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#from-host-to-container\"\u003eFrom host to container\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"communication-between-containers\"\u003eCommunication between containers\u003c/h2\u003e\n\u003cp\u003eIf you have several standalone applications in different containers and need to communicate between them, then you can use \u003cstrong\u003ebridge\u003c/strong\u003e as network driver in docker. Its the default driver, it will be assigned if you don\u0026rsquo;t specify network driver type. It is used when you deploy standalone applications in different containers and they need communication.\u003c/p\u003e\n\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003cp\u003eThe \u003ca href=\"https://docs.docker.com/network/bridge/\"\u003edocker documentation\u003c/a\u003e states:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn terms of Docker, a bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eMeans, the containers connected to bridge network can communicate with each other, but can\u0026rsquo;t communicate which are outside of that network. It won\u0026rsquo;t be exposed unless you explicitly do that.\u003c/p\u003e\n\u003ch2 id=\"create-bridge-network\"\u003eCreate bridge network\u003c/h2\u003e\n\u003cp\u003eYou can create a bridge network by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker network create skynet\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr remove it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker network rm skynet\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can also inspect the network using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker network inspect skynet\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"connect-containers-to-network\"\u003eConnect containers to network\u003c/h2\u003e\n\u003cp\u003eAfter creating the network, now its time to add your containers to that network like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e docker create --name nz01 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  --network skynet \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  --publish 8080:80 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  nginx:latest\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr you can add a running container to network:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker network connect skynet nz01\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"disconnect-containers-from-network\"\u003eDisconnect containers from network\u003c/h2\u003e\n\u003cp\u003eYou can use the following command to do that:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker network disconnect skynet nz01\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"examples-on-how-to-communicate-between-containers\"\u003eExamples on how to communicate between containers\u003c/h2\u003e\n\u003cp\u003eIt is pretty simple, you need to use the name of a container and port it is exposing. For example, if you want to access nginx container(named \u003ccode\u003enz01\u003c/code\u003e in previous example) from another container, then try like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewget nz01:80\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKeep in mind that the port number is the port where the application is running inside the container, not the port it has exposed. In docker, port mappings are writtern in \u003ccode\u003e\u0026lt;EXPOSED PORT\u0026gt;:\u0026lt;INTERNAL PORT\u0026gt;\u003c/code\u003e, in this example \u003ccode\u003e8080\u003c/code\u003e is accessable from outside world, where nginx is running in port \u003ccode\u003e80\u003c/code\u003e inside the container.\u003c/p\u003e\n\u003cp\u003eHere is another example, lets say an web application is running in container \u003ccode\u003eweb\u003c/code\u003e at port 8000 and from \u003ccode\u003enginx\u003c/code\u003e you want to expose it. Then the nginx configuration should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003eupstream\u003c/span\u003e \u003cspan class=\"err\"\u003eweb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003eip_hash;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003eserver\u003c/span\u003e \u003cspan class=\"err\"\u003eweb:8000;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// here web is the name of the container or service if you are using docker compose and application is running at port 8000\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003eserver\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003elocation\u003c/span\u003e \u003cspan class=\"err\"\u003e/\u003c/span\u003e \u003cspan class=\"err\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eproxy_pass\u003c/span\u003e \u003cspan class=\"err\"\u003ehttp:\u003c/span\u003e\u003cspan class=\"c1\"\u003e//web/;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003elisten\u003c/span\u003e \u003cspan class=\"mi\"\u003e8000\u003c/span\u003e\u003cspan class=\"err\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003eserver_name\u003c/span\u003e \u003cspan class=\"err\"\u003elocalhost;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"example-with-docker-compose\"\u003eExample with \u0026lsquo;Docker Compose\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker Compose\u003c/a\u003e provides a better way of writing networks. Here is an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enginx:alpine\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./config/nginx:/etc/nginx/conf.d\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003enetworks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eskynet\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edockerfile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecompose/django/Dockerfile\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eexpose\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003enetworks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eskynet\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003enetworks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eskynet\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edriver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebridge\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere I just provided a networks section in each of the services defining which network to connect. And inside networks section at the bottom, I have defined which driver to use for communication. We could have defined multiple networks if needed.\u003c/p\u003e\n\u003ch2 id=\"communication-between-host-and-container\"\u003eCommunication between host and container\u003c/h2\u003e\n\u003ch3 id=\"from-container-to-host\"\u003eFrom container to host\u003c/h3\u003e\n\u003cp\u003eCommunication from container to host is pretty straight forward. You just need to expose the container in certain port and from host machine access it through localhost:port or 127.0.0.1:8000. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt; docker run -p 8000:80 -it web\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt; wget localhost:8000\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"from-host-to-container\"\u003eFrom host to container\u003c/h3\u003e\n\u003cp\u003eThis communication has been made simple for MacOs and Windows, but not in linux(at the moment of writing). All you need to do is use \u003ccode\u003ehost.docker.internal\u003c/code\u003e. For example, if you want to use postgres database in django from host machine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDATABASES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;ENGINE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;django.db.backends.postgresql_psycopg2\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;USER\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;PASSWORD\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;HOST\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;host.docker.internal\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;PORT\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e5432\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut for linux machine, you can add the following lines in \u003ccode\u003edocker-entrypoint.sh\u003c/code\u003e(copy pasted from \u003ca href=\"https://dev.to/bufferings/access-host-from-a-docker-container-4099\"\u003ethis article\u003c/a\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eHOST_DOMAIN\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;host.docker.internal\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eping -q -c1 \u003cspan class=\"nv\"\u003e$HOST_DOMAIN\u003c/span\u003e \u0026gt; /dev/null 2\u0026gt;\u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003e$?\u003c/span\u003e -ne \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eHOST_IP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003eip route \u003cspan class=\"p\"\u003e|\u003c/span\u003e awk \u003cspan class=\"s1\"\u003e\u0026#39;NR==1 {print $3}\u0026#39;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e -e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$HOST_IP\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\t\u003c/span\u003e\u003cspan class=\"nv\"\u003e$HOST_DOMAIN\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; /etc/hosts\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003emain entrypoint\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhat its doing is that if \u003ccode\u003ehost.docker.internal\u003c/code\u003e does not work when pining, it will add the \u003ccode\u003ehost.docker.internal\u003c/code\u003e as alias of HOST IP and add it in \u003ccode\u003e/etc/hosts\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eAlthough in this article we focused on bridge networking, but there or other types of networking which can be used based on situations. Networking in docker is a breeze compared to doing it manually, and making it a very powerful means of deployment and distribution(along with its awesome platform agnostic services). Thank you for reading, if you have any opinion regarding this article, please share in the comment section below.\u003c/p\u003e\n","content":"We already know that Docker is used for containerization. But networking in docker makes it even better tool for deployment. You can make standalone deployments in containers and communicate between them, or make containers act as host, or even assign mac addresses to containers and act them as devices. It does not matter which host machine you are in, you can make dockers communicate in-between them. In this article, we are going to discuss about bridge networking in docker, and in the end will see on how to communicate from container to host or vice versa.Table of contents\u0026nbsp;  Communication between containers How it works Create bridge network Connect containers to network Disconnect containers from network Examples on how to communicate between containers Example with \u0026lsquo;Docker Compose\u0026rsquo; Communication between host and container  From container to host From host to container   In conclusion   \nCommunication between containers If you have several standalone applications in different containers and need to communicate between them, then you can use bridge as network driver in docker. Its the default driver, it will be assigned if you don\u0026rsquo;t specify network driver type. It is used when you deploy standalone applications in different containers and they need communication.\nHow it works The docker documentation states:\n In terms of Docker, a bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, while providing isolation from containers which are not connected to that bridge network.\n Means, the containers connected to bridge network can communicate with each other, but can\u0026rsquo;t communicate which are outside of that network. It won\u0026rsquo;t be exposed unless you explicitly do that.\nCreate bridge network You can create a bridge network by:\ndocker network create skynet Or remove it:\ndocker network rm skynet You can also inspect the network using:\ndocker network inspect skynet Connect containers to network After creating the network, now its time to add your containers to that network like this:\ndocker create --name nz01 \\  --network skynet \\  --publish 8080:80 \\  nginx:latest Or you can add a running container to network:\ndocker network connect skynet nz01 Disconnect containers from network You can use the following command to do that:\ndocker network disconnect skynet nz01 Examples on how to communicate between containers It is pretty simple, you need to use the name of a container and port it is exposing. For example, if you want to access nginx container(named nz01 in previous example) from another container, then try like this:\nwget nz01:80 Keep in mind that the port number is the port where the application is running inside the container, not the port it has exposed. In docker, port mappings are writtern in \u0026lt;EXPOSED PORT\u0026gt;:\u0026lt;INTERNAL PORT\u0026gt;, in this example 8080 is accessable from outside world, where nginx is running in port 80 inside the container.\nHere is another example, lets say an web application is running in container web at port 8000 and from nginx you want to expose it. Then the nginx configuration should look like this:\nupstream web { ip_hash; server web:8000; // here web is the name of the container or service if you are using docker compose and application is running at port 8000 } server { location / { proxy_pass http://web/;  } listen 8000; server_name localhost; } Example with \u0026lsquo;Docker Compose\u0026rsquo; Docker Compose provides a better way of writing networks. Here is an example:\nversion:\u0026#34;3\u0026#34;services:nginx:image:nginx:alpinecontainer_name:nz01ports:- \u0026#34;8000:8000\u0026#34;volumes:- ./config/nginx:/etc/nginx/conf.ddepends_on:- webnetworks:- skynetweb:build:context:.dockerfile:compose/django/Dockerfilecontainer_name:dz01volumes:- ./src:/srcexpose:- \u0026#34;8000\u0026#34;networks:- skynetnetworks:skynet:driver:bridgeHere I just provided a networks section in each of the services defining which network to connect. And inside networks section at the bottom, I have defined which driver to use for communication. We could have defined multiple networks if needed.\nCommunication between host and container From container to host Communication from container to host is pretty straight forward. You just need to expose the container in certain port and from host machine access it through localhost:port or 127.0.0.1:8000. For example:\n\u0026gt; docker run -p 8000:80 -it web \u0026gt; wget localhost:8000 From host to container This communication has been made simple for MacOs and Windows, but not in linux(at the moment of writing). All you need to do is use host.docker.internal. For example, if you want to use postgres database in django from host machine:\nDATABASES = { \u0026#39;default\u0026#39;: { \u0026#39;ENGINE\u0026#39;: \u0026#39;django.db.backends.postgresql_psycopg2\u0026#39;, \u0026#39;NAME\u0026#39;: \u0026#39;postgres\u0026#39;, \u0026#39;USER\u0026#39;: \u0026#39;postgres\u0026#39;, \u0026#39;PASSWORD\u0026#39;: \u0026#39;postgres\u0026#39;, \u0026#39;HOST\u0026#39;: \u0026#39;host.docker.internal\u0026#39;, \u0026#39;PORT\u0026#39;: 5432, } } But for linux machine, you can add the following lines in docker-entrypoint.sh(copy pasted from this article):\nHOST_DOMAIN=\u0026#34;host.docker.internal\u0026#34; ping -q -c1 $HOST_DOMAIN \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 if [ $? -ne 0 ]; then HOST_IP=$(ip route | awk \u0026#39;NR==1 {print $3}\u0026#39;) echo -e \u0026#34;$HOST_IP\\t$HOST_DOMAIN\u0026#34; \u0026gt;\u0026gt; /etc/hosts fi (main entrypoint) What its doing is that if host.docker.internal does not work when pining, it will add the host.docker.internal as alias of HOST IP and add it in /etc/hosts.\nIn conclusion Although in this article we focused on bridge networking, but there or other types of networking which can be used based on situations. Networking in docker is a breeze compared to doing it manually, and making it a very powerful means of deployment and distribution(along with its awesome platform agnostic services). Thank you for reading, if you have any opinion regarding this article, please share in the comment section below.\n","description":"We already know that Docker is used for containerization. But networking in docker makes it even better tool for deployment. You can make standalone deployments in containers and communicate between them, or make containers act as host, or even assign mac addresses to containers and act them as devices. It does not matter which host machine you are in, you can make dockers communicate in-between them."},{"date_published":"2019-12-12T00:12:08+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"December 12, 2019","id":"https://ruddra.com/implement-newsletters-using-staticman/","url":"https://ruddra.com/implement-newsletters-using-staticman/","title":"Implement Newsletter Subscription Using Staticman","image":"https://ruddra.com/content/images/2019/12/staticman.jpg","tags":["Hugo","Staticman"],"content_html":"\u003cp\u003eCollecting data in static sites or serverless sites(with POST request) is a hassle because you don\u0026rsquo;t have a server to receive POST requests and store data. But \u003cstrong\u003eStaticman\u003c/strong\u003e is here to help. It will enable users to make POST requests, that will allow you to gather these data. In this article, I am going to tweak Staticman a little to implement newsletter subscription.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFYI:\u003c/strong\u003e _I am not going to share how to make a commenting system using Staticman because there are countless examples available on the internet, even from \u003ca href=\"https://github.com/eduardoboucas\"\u003eEduardo Bouças\u003c/a\u003e, creator of Staticman._\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#how-staticman-works\"\u003eHow \u0026lsquo;Staticman\u0026rsquo; works\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#how-are-we-going-to-tweak-staticman\"\u003eHow are we going to tweak \u0026lsquo;Staticman\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#steps-for-setting-up-newsletter-subscription\"\u003eSteps for setting up newsletter subscription\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#host-your-staticman-server\"\u003eHost your \u0026lsquo;Staticman\u0026rsquo; server\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#create-a-staticmanyml-in-your-public-repository\"\u003eCreate a \u003ccode\u003estaticman.yml\u003c/code\u003e in your public repository\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#setup-the-form\"\u003eSetup the form\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#push-changes\"\u003ePush changes\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#after-mailing-list-is-created\"\u003eAfter mailing list is created\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#useful-links\"\u003eUseful links\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"how-staticman-works\"\u003eHow \u0026lsquo;Staticman\u0026rsquo; works\u003c/h2\u003e\n\u003cp\u003eBefore starting anything, you need to understand how Staticman works. First, you have a form, when you submit the form(with any kind of data), it will make a POST request to Staticman server, then the data is sent your git repository. Checkout the following image for understanding it better:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"496\" height=\"957\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 496 957'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/12/staticman1_hu7f232fb32ad7b21e4540fe1fbc653e8a_28567_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/12/staticman1_hu7f232fb32ad7b21e4540fe1fbc653e8a_28567_500x0_resize_q75_lanczos.jpg 500w'\n        alt='staticman' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/12/staticman1.jpg\" width=\"496\" height=\"957\" alt='staticman'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"how-are-we-going-to-tweak-staticman\"\u003eHow are we going to tweak \u0026lsquo;Staticman\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003eWhat Staticman does when notification is allowed, that it creates a mailing list in mailgun. For each data entry, they create a mailing list/add emails to an existing mailing list. Similarly for newsletter, we need a mailing list. So, we are going to use it to collect email addresses to create a mailing list for newsletter.\u003c/p\u003e\n\u003ch2 id=\"steps-for-setting-up-newsletter-subscription\"\u003eSteps for setting up newsletter subscription\u003c/h2\u003e\n\u003ch3 id=\"host-your-staticman-server\"\u003eHost your \u0026lsquo;Staticman\u0026rsquo; server\u003c/h3\u003e\n\u003cp\u003eDefault Staticman server is already being over used by many people, so it does not work properly. So, its better to host your own. Checkout this \u003ca href=\"https://vincenttam.gitlab.io/post/2018-09-16-Staticman-powered-gitlab-pages/2/\"\u003e\u003cstrong\u003earticle\u003c/strong\u003e\u003c/a\u003e to install Staticman in Heroku server.\u003c/p\u003e\n\u003ch3 id=\"create-a-staticmanyml-in-your-public-repository\"\u003eCreate a \u003ccode\u003estaticman.yml\u003c/code\u003e in your public repository\u003c/h3\u003e\n\u003cp\u003eYou need to create a public git repo, there you need to create a \u003ca href=\"https://staticman.net/docs/configuration\"\u003e\u003cstrong\u003e\u003ccode\u003estaticman.yml\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e file with following(which has bare minimum settings):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ecomments\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eallowedFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;other_fields_if_necessary\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003emoderation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;newsletter-subscription\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erequiredFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enotifications\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XXXXXX\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edomain\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;XXXXXX\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eImportant thing to remember here is that, you need to allow \u003ccode\u003eemail\u003c/code\u003e field and also add \u003ccode\u003eemail\u003c/code\u003e in \u003ccode\u003erequiredFields\u003c/code\u003e. You can add additional fields in \u003ccode\u003eallowedField\u003c/code\u003e(like if you already have a commenting system them fields like name, comment etc are necessary).\u003c/p\u003e\n\u003cp\u003eMost crucial part, you must configure mailgun to generate API Key, then put the value in \u003ccode\u003enotifications\u003c/code\u003e. Value of API Key and Domain must be base64 encoded.\u003c/p\u003e\n\u003cp\u003eYou can enable moderation to keep the code clean, so when someone submits a newsletter form, it will not be stored in git immediately, instead you can close the Pull Request(because the email is already stored in mailing list).\u003c/p\u003e\n\u003ch3 id=\"setup-the-form\"\u003eSetup the form\u003c/h3\u003e\n\u003cp\u003eFor newsletter subscription, you need to render a form. For that, you can use the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eNewsletter Subscription\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;comment-form\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eaction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://your.Staticman.server\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[redirect]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://your-domain.com/submitted\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[parent]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a-random-name-which-will-consistant-in-all-pages\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[slug]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a-random-name-which-will-consistant-in-all-pages\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[origin]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://your-domain.net/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[redirectError]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://your-doamin.net/error\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;fields[email]\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003eplaceholder\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Enter your email\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"na\"\u003erequired\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;options[subscribe]\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;checkbox\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;email\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003erequired\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e I\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  want to receive emails\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;submit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eSubscribe\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebutton\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eform\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the form, for \u003ccode\u003einput\u003c/code\u003e field you need to make sure you a consistant value for slug and parent in every page where you put this form. Because based on the value of \u003ccode\u003eslug\u003c/code\u003e a mailing list will be created.\u003c/p\u003e\n\u003ch3 id=\"push-changes\"\u003ePush changes\u003c/h3\u003e\n\u003cp\u003eAll is done. Now its time for testing. Upload the code to your git repository or serverless hosting(like \u003cstrong\u003eNetlify\u003c/strong\u003e) and see how it goes. There for each form submission, a new email will be added to a specific mailing list in mailgun.\u003c/p\u003e\n\u003ch3 id=\"after-mailing-list-is-created\"\u003eAfter mailing list is created\u003c/h3\u003e\n\u003cp\u003eNow its up to you, you need to create templates and send bulk emails to that mailing list.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eAlthough Staticman is for collecting any kind of data, most of the people use it for a decent commenting system. My idea here was to use Staticman for both commenting and newsletter subscription. In this Article, I wrote about Newsletters(by the way they are GDPR complient), maybe you will find more usage of Staticman.\u003c/p\u003e\n\u003ch2 id=\"useful-links\"\u003eUseful links\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.gabescode.com/staticman/2019/01/04/staticman-comments-for-jekyll.html\"\u003ehttps://www.gabescode.com/staticman/2019/01/04/staticman-comments-for-jekyll.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://networkhobo.com/hugo-staticman-nested-replies-and-email-notifications/\"\u003ehttps://networkhobo.com/hugo-staticman-nested-replies-and-email-notifications/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://yasoob.me/posts/running_staticman_on_static_hugo_blog_with_nested_comments/\"\u003ehttps://yasoob.me/posts/running_staticman_on_static_hugo_blog_with_nested_comments/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://yasoob.me/posts/staticman_comment_notifications_mailgun/\"\u003ehttps://yasoob.me/posts/staticman_comment_notifications_mailgun/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions/\"\u003ehttps://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","content":"Collecting data in static sites or serverless sites(with POST request) is a hassle because you don\u0026rsquo;t have a server to receive POST requests and store data. But Staticman is here to help. It will enable users to make POST requests, that will allow you to gather these data. In this article, I am going to tweak Staticman a little to implement newsletter subscription.\nFYI: _I am not going to share how to make a commenting system using Staticman because there are countless examples available on the internet, even from Eduardo Bouças, creator of Staticman._Table of contents\u0026nbsp;  How \u0026lsquo;Staticman\u0026rsquo; works How are we going to tweak \u0026lsquo;Staticman\u0026rsquo; Steps for setting up newsletter subscription  Host your \u0026lsquo;Staticman\u0026rsquo; server Create a staticman.yml in your public repository Setup the form Push changes After mailing list is created   In conclusion Useful links   \nHow \u0026lsquo;Staticman\u0026rsquo; works Before starting anything, you need to understand how Staticman works. First, you have a form, when you submit the form(with any kind of data), it will make a POST request to Staticman server, then the data is sent your git repository. Checkout the following image for understanding it better:\n   How are we going to tweak \u0026lsquo;Staticman\u0026rsquo; What Staticman does when notification is allowed, that it creates a mailing list in mailgun. For each data entry, they create a mailing list/add emails to an existing mailing list. Similarly for newsletter, we need a mailing list. So, we are going to use it to collect email addresses to create a mailing list for newsletter.\nSteps for setting up newsletter subscription Host your \u0026lsquo;Staticman\u0026rsquo; server Default Staticman server is already being over used by many people, so it does not work properly. So, its better to host your own. Checkout this article to install Staticman in Heroku server.\nCreate a staticman.yml in your public repository You need to create a public git repo, there you need to create a staticman.yml file with following(which has bare minimum settings):\ncomments:allowedFields:[\u0026#34;email\u0026#34;,\u0026#34;other_fields_if_necessary\u0026#34;]moderation:truename:\u0026#34;newsletter-subscription\u0026#34;requiredFields:[\u0026#34;email\u0026#34;]notifications:enabled:trueapiKey:\u0026#34;XXXXXX\u0026#34;domain:\u0026#34;XXXXXX\u0026#34;Important thing to remember here is that, you need to allow email field and also add email in requiredFields. You can add additional fields in allowedField(like if you already have a commenting system them fields like name, comment etc are necessary).\nMost crucial part, you must configure mailgun to generate API Key, then put the value in notifications. Value of API Key and Domain must be base64 encoded.\nYou can enable moderation to keep the code clean, so when someone submits a newsletter form, it will not be stored in git immediately, instead you can close the Pull Request(because the email is already stored in mailing list).\nSetup the form For newsletter subscription, you need to render a form. For that, you can use the following:\n\u0026lt;h1\u0026gt;Newsletter Subscription\u0026lt;/h1\u0026gt; \u0026lt;form id=\u0026#34;comment-form\u0026#34; method=\u0026#34;post\u0026#34; action=\u0026#34;https://your.Staticman.server\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;options[redirect]\u0026#34; value=\u0026#34;https://your-domain.com/submitted\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;options[parent]\u0026#34; value=\u0026#34;a-random-name-which-will-consistant-in-all-pages\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;options[slug]\u0026#34; value=\u0026#34;a-random-name-which-will-consistant-in-all-pages\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;options[origin]\u0026#34; value=\u0026#34;https://your-domain.net/\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;options[redirectError]\u0026#34; value=\u0026#34;https://your-doamin.net/error\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;email\u0026#34; name=\u0026#34;fields[email]\u0026#34; placeholder=\u0026#34;Enter your email\u0026#34; required /\u0026gt; \u0026lt;input name=\u0026#34;options[subscribe]\u0026#34; type=\u0026#34;checkbox\u0026#34; value=\u0026#34;email\u0026#34; required /\u0026gt; I want to receive emails \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;Subscribe\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; In the form, for input field you need to make sure you a consistant value for slug and parent in every page where you put this form. Because based on the value of slug a mailing list will be created.\nPush changes All is done. Now its time for testing. Upload the code to your git repository or serverless hosting(like Netlify) and see how it goes. There for each form submission, a new email will be added to a specific mailing list in mailgun.\nAfter mailing list is created Now its up to you, you need to create templates and send bulk emails to that mailing list.\nIn conclusion Although Staticman is for collecting any kind of data, most of the people use it for a decent commenting system. My idea here was to use Staticman for both commenting and newsletter subscription. In this Article, I wrote about Newsletters(by the way they are GDPR complient), maybe you will find more usage of Staticman.\nUseful links  https://www.gabescode.com/staticman/2019/01/04/staticman-comments-for-jekyll.html https://networkhobo.com/hugo-staticman-nested-replies-and-email-notifications/ https://yasoob.me/posts/running_staticman_on_static_hugo_blog_with_nested_comments/ https://yasoob.me/posts/staticman_comment_notifications_mailgun/ https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions/  ","description":"Use staticman to build newsletter services, no need to use third party websites."},{"date_published":"2019-11-09T00:56:04+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"November 9, 2019","id":"https://ruddra.com/docker-volume-entrypoint-ignorefile/","url":"https://ruddra.com/docker-volume-entrypoint-ignorefile/","title":"How to Use Volume, EntryPoint and Ignore Files in Docker","image":"https://ruddra.com/content/images/2019/11/dock3.jpg","tags":["Docker","DevOps"],"content_html":"\u003cp\u003eHave you worked with Docker before? Do you think you have trouble with it, like when you are developing an application, you need to build every time to see the results, or thinking of the best way to load data in DB, or may be you are annoyed because there are lots of markdown files, screenshots etc that are taking a lot of space in your container. Here are some tips about \u003ccode\u003eVOLUME\u003c/code\u003e, \u003ccode\u003eENTRYPOINT\u003c/code\u003e, and \u003ccode\u003e.dockerignore\u003c/code\u003e file to fix these problems.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#use-volume-wisely\"\u003eUse \u003ccode\u003eVOLUME\u003c/code\u003e wisely\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#usage-of-volume\"\u003eUsage of volume\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#do-heavy-lifting-by-entrypoint\"\u003eDo heavy lifting by \u003ccode\u003eENTRYPOINT\u003c/code\u003e\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#what-is-entrypoint\"\u003eWhat is \u003ccode\u003eENTRYPOINT\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#usage-of-entry-point\"\u003eUsage of entry point\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#exclude-unnecessary-files-using-dockerignore\"\u003eExclude unnecessary files using \u003ccode\u003e.dockerignore\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#relevent-posts\"\u003eRelevent posts\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"use-volume-wisely\"\u003eUse \u003ccode\u003eVOLUME\u003c/code\u003e wisely\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eVOLUME\u003c/code\u003e is a fantastic feature where you can share a space from your local machine to container. But there are other usages to that as well. For example:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou can put your source code in Docker Container through Volume. Then whenever you change in your source code, it will be immediately reflected inside Docker Container. FYI: this is not recommended for production. In production, you should use \u003ccode\u003eCOPY\u003c/code\u003e to copy the source code in docker file.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eVOLUME\u003c/code\u003e directory is a place where you can change without any permission. I mean, normally after an Image is built, you can\u0026rsquo;t change inside \u003ccode\u003eContainer\u003c/code\u003e apart from \u003ccode\u003etemp\u003c/code\u003e directory. If you need to do that, then you need to give permission to the docker container user to allow write. Instead, use volume to do the necessary changes, like installing packages. Even you can install package in local machine and it will automatically synced inside docker container.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"usage-of-volume\"\u003eUsage of volume\u003c/h3\u003e\n\u003cp\u003eIf you want to run it in traditional way, then use a \u003ccode\u003e-v\u003c/code\u003e tag:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -v /db-data /var/lib/mysql/data -it mysql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr if you are using Docker Compose, then use the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3.7\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003emysql\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emysql\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e- \u003cspan class=\"l\"\u003edb-data:/var/lib/mysql/data\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"do-heavy-lifting-by-entrypoint\"\u003eDo heavy lifting by \u003ccode\u003eENTRYPOINT\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eIf you want to load data in your docker container or execute scripts before running the actual command, it is better to do them in \u003ccode\u003eENTRYPOINT\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"what-is-entrypoint\"\u003eWhat is \u003ccode\u003eENTRYPOINT\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eENTRYPOINT\u003c/code\u003e is the binary which is executing. You can define it in \u003ccode\u003eDockerfile\u003c/code\u003e or you can provide like this \u003ccode\u003edocker run --entrypoint=\u0026quot;/bin/bash/\u0026quot; ...\u003c/code\u003e. \u003cstrong\u003eCMD\u003c/strong\u003e is the default argument to container. Without the ENTRYPOINT, default argument is command that is executed. With ENTRYPOINT, CMD is passed to entrypoint as argument. You can emulate a command with entrypoint.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cat Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFROM python:3-alpine\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eENTRYPOINT \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/bin/sh\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ docker run -it your_docker_image your_cmd\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"usage-of-entry-point\"\u003eUsage of entry point\u003c/h3\u003e\n\u003cp\u003eFor that lets write a \u003ccode\u003edocker-entrypoint.sh\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#!/bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003ebash -e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py makemigrations\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py migrate\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py collectstatic --no-input\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexec\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$@\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen use it in \u003ccode\u003eDockerfile\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3-alpine\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e docker-entrypoint.sh /usr/local/bin/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e ln -s /usr/local/bin/docker-entrypoint.sh / \u003cspan class=\"c1\"\u003e# backwards compatible\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENTRYPOINT\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;docker-entrypoint.sh\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;manage.py\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;runserver\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"exclude-unnecessary-files-using-dockerignore\"\u003eExclude unnecessary files using \u003ccode\u003e.dockerignore\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eYou can ignore unnecessary files like readme files, version controlling, example codes etc when building the image, using \u003ccode\u003e.dockerignore\u003c/code\u003e file. Here is an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e.ipynb_checkpoints\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e.DS_Store\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e.gitignore\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eREADME.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eenv.*\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e# To prevent storing dev/temporary container data\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e*.csv\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etmp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso, be sure to read \u003ccode\u003e.dockerignore\u003c/code\u003e file whenever you are using a repository(if there is one with .dockerignore). Because it might ignore necessary files in \u003ccode\u003eDocker\u003c/code\u003e which are needed by you.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eVOLUME\u003c/code\u003e, \u003ccode\u003eENTRYPOINT\u003c/code\u003e and \u003ccode\u003e.dockerignore\u003c/code\u003e, they are all powerful features of Docker. They can make your life a breeze when you know how to use them. But If you want to master them, it is better to try them yourself.\u003c/p\u003e\n\u003ch2 id=\"relevent-posts\"\u003eRelevent posts\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/docker-write-dockerfile-and-reduce-size-build-time-for-image/\"\u003eTips on Writing Dockerfile, Reduce Size and Build Time of an Image\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/docker-compose-arg-env/\"\u003eTips on using Docker Compose, Build Argument and Environment Variable\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOfficial Documentation on Builder: \u003ca href=\"https://docs.docker.com/engine/reference/builder/\"\u003ehttps://docs.docker.com/engine/reference/builder/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eOfficial Documentation on Volume: \u003ca href=\"https://docs.docker.com/storage/volumes/\"\u003ehttps://docs.docker.com/storage/volumes/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","content":"Have you worked with Docker before? Do you think you have trouble with it, like when you are developing an application, you need to build every time to see the results, or thinking of the best way to load data in DB, or may be you are annoyed because there are lots of markdown files, screenshots etc that are taking a lot of space in your container. Here are some tips about VOLUME, ENTRYPOINT, and .dockerignore file to fix these problems.Table of contents\u0026nbsp;  Use VOLUME wisely  Usage of volume   Do heavy lifting by ENTRYPOINT  What is ENTRYPOINT Usage of entry point   Exclude unnecessary files using .dockerignore In conclusion Relevent posts References   \nUse VOLUME wisely VOLUME is a fantastic feature where you can share a space from your local machine to container. But there are other usages to that as well. For example:\n  You can put your source code in Docker Container through Volume. Then whenever you change in your source code, it will be immediately reflected inside Docker Container. FYI: this is not recommended for production. In production, you should use COPY to copy the source code in docker file.\n  VOLUME directory is a place where you can change without any permission. I mean, normally after an Image is built, you can\u0026rsquo;t change inside Container apart from temp directory. If you need to do that, then you need to give permission to the docker container user to allow write. Instead, use volume to do the necessary changes, like installing packages. Even you can install package in local machine and it will automatically synced inside docker container.\n  Usage of volume If you want to run it in traditional way, then use a -v tag:\ndocker run -v /db-data /var/lib/mysql/data -it mysql Or if you are using Docker Compose, then use the following:\nversion:\u0026#34;3.7\u0026#34;mysql:image:mysqlvolumes:- db-data:/var/lib/mysql/dataDo heavy lifting by ENTRYPOINT If you want to load data in your docker container or execute scripts before running the actual command, it is better to do them in ENTRYPOINT.\nWhat is ENTRYPOINT ENTRYPOINT is the binary which is executing. You can define it in Dockerfile or you can provide like this docker run --entrypoint=\u0026quot;/bin/bash/\u0026quot; .... CMD is the default argument to container. Without the ENTRYPOINT, default argument is command that is executed. With ENTRYPOINT, CMD is passed to entrypoint as argument. You can emulate a command with entrypoint.\n$ cat Dockerfile FROM python:3-alpine ... ENTRYPOINT [\u0026#34;/bin/sh\u0026#34;] $ docker run -it your_docker_image your_cmd Usage of entry point For that lets write a docker-entrypoint.sh file:\n#!/bin/bash bash -e python manage.py makemigrations python manage.py migrate python manage.py collectstatic --no-input exec \u0026#34;$@\u0026#34; Then use it in Dockerfile:\nFROMpython:3-alpineCOPY docker-entrypoint.sh /usr/local/bin/RUN ln -s /usr/local/bin/docker-entrypoint.sh / # backwards compatibleENTRYPOINT [\u0026#34;docker-entrypoint.sh\u0026#34;]CMD [\u0026#34;python\u0026#34;,\u0026#34;manage.py\u0026#34;, \u0026#34;runserver\u0026#34;]Exclude unnecessary files using .dockerignore You can ignore unnecessary files like readme files, version controlling, example codes etc when building the image, using .dockerignore file. Here is an example:\n.git .ipynb_checkpoints .DS_Store .gitignore README.md env.* # To prevent storing dev/temporary container data *.csv tmp Also, be sure to read .dockerignore file whenever you are using a repository(if there is one with .dockerignore). Because it might ignore necessary files in Docker which are needed by you.\nIn conclusion VOLUME, ENTRYPOINT and .dockerignore, they are all powerful features of Docker. They can make your life a breeze when you know how to use them. But If you want to master them, it is better to try them yourself.\nRelevent posts  Tips on Writing Dockerfile, Reduce Size and Build Time of an Image Tips on using Docker Compose, Build Argument and Environment Variable  References  Official Documentation on Builder: https://docs.docker.com/engine/reference/builder/ Official Documentation on Volume: https://docs.docker.com/storage/volumes/  ","description":"Have you worked with Docker before? Do you think you have trouble with it, like when you are developing an application, you need to build every time to see the results, or thinking of the best way to load data in DB, or may be you are annoyed because there are lots of markdown files, screenshots etc that are taking a lot of space in your container."},{"date_published":"2019-11-09T00:00:00+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"November 9, 2019","id":"https://ruddra.com/docker-compose-arg-env/","url":"https://ruddra.com/docker-compose-arg-env/","title":"Why Use Docker Compose, Build Argument and Environment Variable","image":"https://ruddra.com/content/images/2019/11/dock2.jpg","tags":["Docker","DevOps"],"content_html":"\u003cp\u003eImagine, you have some microservices and you want to use API from one service to another, how can you do that if all of them are running in different docker container? \u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker Compose\u003c/a\u003e has a solution for you.\u003c/p\u003e\n\u003cp\u003eSuppose you want to deploy a project in test, stage and production environment with same \u003ccode\u003eDockerfile\u003c/code\u003e for all of them through a single \u003cstrong\u003eDockerfile\u003c/strong\u003e. You can do that through Build Argument and Environment Variable.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#supercharge-your-containers-using-docker-compose\"\u003eSupercharge your containers using \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#example\"\u003eExample\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#use-multiple-compose-file-in-same-project\"\u003eUse multiple compose file in same project\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#share-services-from-one-container-to-another\"\u003eShare services from one container to another\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#docker-compose-shell-and-logs\"\u003eDocker compose shell and logs\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#build-arguments-or-arg\"\u003eBuild arguments or \u003ccode\u003eARG\u003c/code\u003e\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#basic-usages-of-arg\"\u003eBasic usages of \u003ccode\u003eARG\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#envionment-variable-or-env\"\u003eEnvionment variable or \u003ccode\u003eENV\u003c/code\u003e\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#basic-usages-of-env\"\u003eBasic usages of \u003ccode\u003eENV\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#set-default-value-for-environment-variables\"\u003eSet default value for environment variables\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#loading-environment-variables-from-file\"\u003eLoading environment variables from file\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#using-env-in-docker-compose\"\u003eUsing \u003ccode\u003e.env\u003c/code\u003e in docker compose\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#use-host-machine-environment-variables\"\u003eUse host machine environment variables\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#arg-vs-env\"\u003e\u003ccode\u003eARG\u003c/code\u003e vs \u003ccode\u003eENV\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#relevent-posts\"\u003eRelevent posts\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"supercharge-your-containers-using-docker-compose\"\u003eSupercharge your containers using \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.docker.com/compose/\"\u003e\u003cstrong\u003e\u003ccode\u003edocker-compose\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e is a great tool for orchestrating multiple docker instances. But it is not like kubernetes or docker swarm. Rather, its a simple application which allows you to communicate between docker containers, allow you to easily configure things, even help you generate \u003ccode\u003eservice\u003c/code\u003e, \u003ccode\u003eroute\u003c/code\u003e, \u003ccode\u003ebuild config\u003c/code\u003e etc for kubernetes if you use \u003ca href=\"https://github.com/kubernetes/kompose\"\u003e\u003cstrong\u003e\u003ccode\u003ekompose\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"example\"\u003eExample\u003c/h3\u003e\n\u003cp\u003eHere is an example of \u003ccode\u003edocker-compose.yml\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epostgres:alpine\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"use-multiple-compose-file-in-same-project\"\u003eUse multiple compose file in same project\u003c/h3\u003e\n\u003cp\u003eIf you want to have different compose files for building the same project(like one for test server, another for production server), then just write two or more \u003ccode\u003e.yml\u003c/code\u003e files and when building one of them or run them just use \u003ccode\u003e-f\u003c/code\u003e argument. Like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose -f your_file_name.yml build\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"share-services-from-one-container-to-another\"\u003eShare services from one container to another\u003c/h3\u003e\n\u003cp\u003eLet us say you have a database in one container and a server in another container, how can you use that database from that server? Rather than doing the communication manually, I would recommend using docker compose. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eexpose\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epostgres:alpine\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;5432:5432\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn here, database service is defined as \u003ccode\u003edb\u003c/code\u003e. From \u003cstrong\u003eweb\u003c/strong\u003e container, you can simply access the database using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epsql -h db -p \u003cspan class=\"m\"\u003e5432\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEven \u003ccode\u003ewget db:5432\u003c/code\u003e will work, because the word \u003ccode\u003edb\u003c/code\u003e will be resolved automatically through docker compose.\u003c/p\u003e\n\u003ch3 id=\"docker-compose-shell-and-logs\"\u003eDocker compose shell and logs\u003c/h3\u003e\n\u003cp\u003eAccess docker compose shell by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -ti container_name /bin/sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAccess docker compose log by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose logs service_name\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"build-arguments-or-arg\"\u003eBuild arguments or \u003ccode\u003eARG\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eBuild arguments or \u003ccode\u003eARG\u003c/code\u003e is value which is available during build. It is useful for many cases:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e.\u003c/strong\u003e Set value of environment variable during build.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e.\u003c/strong\u003e Use same Dockerfile in multiple projects. For example, you have a django Docker Image, and you can use it in similar projects. Just you need to know project root and where the \u003ccode\u003erequirements\u003c/code\u003e file is. Example code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eARG PROJECT_ROOT\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eARG REQUIREMENTS_DIR\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eENV SRC_DIR PROJECT_ROOT \u003cspan class=\"c1\"\u003e# Setting the environment variable from Build Argument\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eADD SRC_DIR /app\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eWORKDIR /app\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRUN pip install -r \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eREQUIREMENTS_DIR\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Installing Requirements from ARGS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCMD \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;python\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;manage.py\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;runserver\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"basic-usages-of-arg\"\u003eBasic usages of \u003ccode\u003eARG\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003ePass build arguments when building the image like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker build --build-arg \u003cspan class=\"nv\"\u003ePROJECT_ROOT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e./src \u003cspan class=\"nv\"\u003eREQUIREMENTS_DIR\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e./requirements/local.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr if you use \u003ccode\u003edocker-compose.yml\u003c/code\u003e then update file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edjango\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./app\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edockerfile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDockerfile\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ePROJECT_ROOT\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eREQUIREMENTS_DIR\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./requirements/local.pip\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"envionment-variable-or-env\"\u003eEnvionment variable or \u003ccode\u003eENV\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eUsing \u003ccode\u003eENV\u003c/code\u003e will create environment variables inside Docker container. You can also send them from outside when building the Dockerfile(through Build Arguments) or running the image.\u003c/p\u003e\n\u003ch3 id=\"basic-usages-of-env\"\u003eBasic usages of \u003ccode\u003eENV\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eIf you are running the Image using \u003ccode\u003edocker\u003c/code\u003e command in terminal or command line, then use argument \u003ccode\u003e-e\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -e \u003cspan class=\"s2\"\u003e\u0026#34;SRC_DIR=./src\u0026#34;\u003c/span\u003e django\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr you can declare them in \u003ccode\u003edocker-compose.yml\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edjango\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eenvironment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;SRC_DIR=./src\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"set-default-value-for-environment-variables\"\u003eSet default value for environment variables\u003c/h3\u003e\n\u003cp\u003eYou can simply do that by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# With default value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eENV ABC ./src\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Without Default value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eENV XYZ\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd you can override the value of \u003ccode\u003eABC\u003c/code\u003e here by passing the environment from outside of container, ie \u003ccode\u003edocker run -e ABC=./abc ...\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"loading-environment-variables-from-file\"\u003eLoading environment variables from file\u003c/h3\u003e\n\u003cp\u003eYou can store your environment variables in a file and load them in \u003ccode\u003edocker-compose.yml\u003c/code\u003e via \u003ccode\u003eenv_file\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003edjango\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv_file\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003eweb-variables.env\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhich is similar to what you can use \u003ccode\u003edocker run --env-file=FILE ...\u003c/code\u003e for load the environment file when running a docker image.\u003c/p\u003e\n\u003ch3 id=\"using-env-in-docker-compose\"\u003eUsing \u003ccode\u003e.env\u003c/code\u003e in docker compose\u003c/h3\u003e\n\u003cp\u003eYou can put environment variables inside \u003ccode\u003e.env\u003c/code\u003e file and it will be picked up automatically from docker compose. This pretty cool feature as there are some interesting usages within the docker compose file itself.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cat .env\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003ePORT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e8088\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cat docker-compose.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eversion: \u003cspan class=\"s1\"\u003e\u0026#39;3\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eservices:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  django:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    build:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      context: .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      dockerfile: ./compose/django/Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    image: django\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ports:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      - \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePORT\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:8000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo when you run \u003ccode\u003edocker-compose up\u003c/code\u003e then the variable \u003ccode\u003e${PORT}\u003c/code\u003e will be replaced by 8088.\u003c/p\u003e\n\u003ch3 id=\"use-host-machine-environment-variables\"\u003eUse host machine environment variables\u003c/h3\u003e\n\u003cp\u003eIt will work almost same as above example. Just define the value of \u003ccode\u003ePORT\u003c/code\u003e in your host machine, then it will automatically be picked up when you run \u003ccode\u003edocker-compose up\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003ePORT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e8088\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cat docker-compose.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eversion: \u003cspan class=\"s1\"\u003e\u0026#39;3\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eservices:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  django:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    build:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      context: .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      dockerfile: ./compose/django/Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    image: django\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ports:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      - \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePORT\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e:8000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"arg-vs-env\"\u003e\u003ccode\u003eARG\u003c/code\u003e vs \u003ccode\u003eENV\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eAs explained above, \u003ccode\u003eARG\u003c/code\u003e is only build time variables. Means it will be available when you are building the Image from a Dockerfile. On the other hand, \u003ccode\u003eENV\u003c/code\u003e can be accessed when you are running the Image. But you can still use the environment variable when building the Image. Then you have to use either \u003ccode\u003eARG\u003c/code\u003e to update the \u003ccode\u003eENV\u003c/code\u003e value or use a default value.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIn this post, I tried to explain usages of docker compose, build arguments and environment variables in as detail as possible. But its better to use them in your own project to understand these better. Also checkout the reference links given below which has more detailed explanation.\u003c/p\u003e\n\u003ch2 id=\"relevent-posts\"\u003eRelevent posts\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/docker-write-dockerfile-and-reduce-size-build-time-for-image/\"\u003eTips on Writing Dockerfile, Reduce Size and Build Time of an Image\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/docker-volume-entrypoint-ignorefile/\"\u003eTips on Using Volume, Entrypoint and .dockerignore file\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://vsupalov.com/docker-arg-env-variable-guide/\"\u003ehttps://vsupalov.com/docker-arg-env-variable-guide/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eOfficial Documentation on Environment Variable: \u003ca href=\"https://docs.docker.com/compose/environment-variables/\"\u003ehttps://docs.docker.com/compose/environment-variables/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eOfficial Documentation Docker Compose: \u003ca href=\"https://docs.docker.com/compose/\"\u003ehttps://docs.docker.com/compose/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","content":"Imagine, you have some microservices and you want to use API from one service to another, how can you do that if all of them are running in different docker container? Docker Compose has a solution for you.\nSuppose you want to deploy a project in test, stage and production environment with same Dockerfile for all of them through a single Dockerfile. You can do that through Build Argument and Environment Variable.Table of contents\u0026nbsp;  Supercharge your containers using docker-compose  Example Use multiple compose file in same project Share services from one container to another Docker compose shell and logs   Build arguments or ARG  Basic usages of ARG   Envionment variable or ENV  Basic usages of ENV Set default value for environment variables Loading environment variables from file Using .env in docker compose Use host machine environment variables   ARG vs ENV In conclusion Relevent posts References   \nSupercharge your containers using docker-compose docker-compose is a great tool for orchestrating multiple docker instances. But it is not like kubernetes or docker swarm. Rather, its a simple application which allows you to communicate between docker containers, allow you to easily configure things, even help you generate service, route, build config etc for kubernetes if you use kompose.\nExample Here is an example of docker-compose.yml:\nversion:3services:web:build:.container_name:dz01db:image:postgres:alpinecontainer_name:pz01Use multiple compose file in same project If you want to have different compose files for building the same project(like one for test server, another for production server), then just write two or more .yml files and when building one of them or run them just use -f argument. Like this:\ndocker-compose -f your_file_name.yml build Share services from one container to another Let us say you have a database in one container and a server in another container, how can you use that database from that server? Rather than doing the communication manually, I would recommend using docker compose. For example:\nversion:\u0026#34;2\u0026#34;services:web:build:.container_name:dz01depends_on:- dbvolumes:- ./src:/srcexpose:- \u0026#34;8000\u0026#34;db:image:postgres:alpinecontainer_name:pz01port:- \u0026#34;5432:5432\u0026#34;In here, database service is defined as db. From web container, you can simply access the database using:\npsql -h db -p 5432 Even wget db:5432 will work, because the word db will be resolved automatically through docker compose.\nDocker compose shell and logs Access docker compose shell by:\ndocker exec -ti container_name /bin/sh Access docker compose log by:\ndocker-compose logs service_name Build arguments or ARG Build arguments or ARG is value which is available during build. It is useful for many cases:\n. Set value of environment variable during build.\n. Use same Dockerfile in multiple projects. For example, you have a django Docker Image, and you can use it in similar projects. Just you need to know project root and where the requirements file is. Example code:\nARG PROJECT_ROOT ARG REQUIREMENTS_DIR ENV SRC_DIR PROJECT_ROOT # Setting the environment variable from Build Argument ADD SRC_DIR /app WORKDIR /app RUN pip install -r \u0026#34;${REQUIREMENTS_DIR}\u0026#34; # Installing Requirements from ARGS CMD [\u0026#34;python\u0026#34;, \u0026#34;manage.py\u0026#34;, \u0026#34;runserver\u0026#34;] Basic usages of ARG Pass build arguments when building the image like this:\ndocker build --build-arg PROJECT_ROOT=./src REQUIREMENTS_DIR=./requirements/local.txt Or if you use docker-compose.yml then update file like this:\nversion:\u0026#34;3\u0026#34;services:django:build:context:./appdockerfile:Dockerfileargs:PROJECT_ROOT:./srcREQUIREMENTS_DIR:./requirements/local.pipEnvionment variable or ENV Using ENV will create environment variables inside Docker container. You can also send them from outside when building the Dockerfile(through Build Arguments) or running the image.\nBasic usages of ENV If you are running the Image using docker command in terminal or command line, then use argument -e.\ndocker run -e \u0026#34;SRC_DIR=./src\u0026#34; django Or you can declare them in docker-compose.yml file:\nversion:\u0026#34;3\u0026#34;services:django:environment:- \u0026#34;SRC_DIR=./src\u0026#34;Set default value for environment variables You can simply do that by:\n# With default value ENV ABC ./src # Without Default value ENV XYZ And you can override the value of ABC here by passing the environment from outside of container, ie docker run -e ABC=./abc ....\nLoading environment variables from file You can store your environment variables in a file and load them in docker-compose.yml via env_file:\ndjango:env_file:- web-variables.envWhich is similar to what you can use docker run --env-file=FILE ... for load the environment file when running a docker image.\nUsing .env in docker compose You can put environment variables inside .env file and it will be picked up automatically from docker compose. This pretty cool feature as there are some interesting usages within the docker compose file itself.\n$ cat .env PORT=8088 $ cat docker-compose.yml version: \u0026#39;3\u0026#39; services: django: build: context: . dockerfile: ./compose/django/Dockerfile image: django ports: - \u0026#34;${PORT}:8000\u0026#34; So when you run docker-compose up then the variable ${PORT} will be replaced by 8088.\nUse host machine environment variables It will work almost same as above example. Just define the value of PORT in your host machine, then it will automatically be picked up when you run docker-compose up\n$ export PORT=8088 $ cat docker-compose.yml version: \u0026#39;3\u0026#39; services: django: build: context: . dockerfile: ./compose/django/Dockerfile image: django ports: - \u0026#34;${PORT}:8000\u0026#34; ARG vs ENV As explained above, ARG is only build time variables. Means it will be available when you are building the Image from a Dockerfile. On the other hand, ENV can be accessed when you are running the Image. But you can still use the environment variable when building the Image. Then you have to use either ARG to update the ENV value or use a default value.\nIn conclusion In this post, I tried to explain usages of docker compose, build arguments and environment variables in as detail as possible. But its better to use them in your own project to understand these better. Also checkout the reference links given below which has more detailed explanation.\nRelevent posts  Tips on Writing Dockerfile, Reduce Size and Build Time of an Image Tips on Using Volume, Entrypoint and .dockerignore file  References  https://vsupalov.com/docker-arg-env-variable-guide/ Official Documentation on Environment Variable: https://docs.docker.com/compose/environment-variables/ Official Documentation Docker Compose: https://docs.docker.com/compose/  ","description":"Usage of docker compose, argument and environment variable in different build scenarios."},{"date_published":"2019-11-08T00:15:22+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"November 8, 2019","id":"https://ruddra.com/docker-write-dockerfile-and-reduce-size-build-time-for-image/","url":"https://ruddra.com/docker-write-dockerfile-and-reduce-size-build-time-for-image/","title":"How to Write Dockerfile to Reduce Size and Build Time of Docker Images","image":"https://ruddra.com/content/images/2019/11/dock.jpg","tags":["Docker","DevOps"],"content_html":"\u003cp\u003eFor the past couple of years, I have been creating Dockerfile for different projects. based on those experiences I am going to share some tips on writing docker files to communication between containers.\u003c/p\u003e\n\u003cp\u003e_\u003cstrong\u003eFYI:\u003c/strong\u003e before reading this article, please read the article from \u003ca href=\"https://www.docker.com/blog/intro-guide-to-dockerfile-best-practices/\"\u003eofficial docker blog site\u003c/a\u003e to learn about best practices for creating Dockerfile._\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#look-for-official-docker-images\"\u003eLook for official docker images\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#reduce-the-size-of-docker-image\"\u003eReduce the size of docker image\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#1-use-alpine-based-images\"\u003e1. Use \u003ccode\u003eAlpine\u003c/code\u003e based images\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#2-delete-packages-after-dependent-applications-are-installed\"\u003e2. Delete packages after dependent applications are installed\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#3-remove-cache\"\u003e3. Remove cache\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#4-reduce-layers-in-dockerfile\"\u003e4. Reduce layers in Dockerfile\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#5-no-need-to-install-debug-tools\"\u003e5. No need to install debug tools\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#reduce-build-time-by-caching-layers\"\u003eReduce build time by caching layers\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#relevent-posts\"\u003eRelevent posts\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"look-for-official-docker-images\"\u003eLook for official docker images\u003c/h2\u003e\n\u003cp\u003eWhen you are trying to run a project in Docker, its better to use official images rather than writing your own. If you need to install different packages that does not come with the official image, then you can extend the official images. For example, if you want to install Flask in your Docker Container, instead of creating an Image from Ubuntu or Alpine Linux, use Python\u0026rsquo;s official image:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.7-alpine\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install flask\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reduce-the-size-of-docker-image\"\u003eReduce the size of docker image\u003c/h2\u003e\n\u003cp\u003eReducing size of a docker image is very important. Because before you know it, your image might take 1-3 GB of space. There are different ways you can reduce it. For example:\u003c/p\u003e\n\u003ch3 id=\"1-use-alpine-based-images\"\u003e1. Use \u003ccode\u003eAlpine\u003c/code\u003e based images\u003c/h3\u003e\n\u003cp\u003eFor most of the official docker images, there is a alpine varient. Alpine varients are much more light weight then their ubuntu/debian counter parts. Also, alpine base image is only 5MB.\u003c/p\u003e\n\u003ch3 id=\"2-delete-packages-after-dependent-applications-are-installed\"\u003e2. Delete packages after dependent applications are installed\u003c/h3\u003e\n\u003cp\u003eLets say you want to install \u003ccode\u003epsycopg2\u003c/code\u003e python package in your docker, for that you need to add packages like \u003ccode\u003epostgres-dev\u003c/code\u003e, \u003ccode\u003epython-dev\u003c/code\u003e, \u003ccode\u003emusl-dev\u003c/code\u003e etc. But those packages won\u0026rsquo;t be needed once \u003ccode\u003epsycopg2\u003c/code\u003e is installed, so its better to delete them. For that, in alpine you can use the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apk update \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk add --virtual build-deps gcc python3-dev musl-dev \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk add postgresql-dev \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e pip install psycopg2 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk del build-deps\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eExplanation:\u003c/strong\u003e here I am installing the packages using \u003ccode\u003e--virtual build-deps\u003c/code\u003e tag, which means those packages will be installed \u003ccode\u003ebuild-deps\u003c/code\u003e directory. After \u003ccode\u003epsycopg2\u003c/code\u003e is installed, I can simply delete it.\u003c/p\u003e\n\u003ch3 id=\"3-remove-cache\"\u003e3. Remove cache\u003c/h3\u003e\n\u003cp\u003eRemove cache from alpine image by adding \u003ccode\u003e--no-cache\u003c/code\u003e at the end of \u003ccode\u003eapk add\u003c/code\u003e. But down side is that each time you build the image, your packages will be installed again.\u003c/p\u003e\n\u003cp\u003eProbably you can do the same in \u003ccode\u003eUbuntu\u003c/code\u003e or \u003ccode\u003edebian\u003c/code\u003e based images using \u003ccode\u003e-- no-install-recommends\u003c/code\u003e on apt-get install.\u003c/p\u003e\n\u003cp\u003eYou can do the same thing with package manager, for example in \u003ccode\u003epip\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install --no-cache-dir django\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-reduce-layers-in-dockerfile\"\u003e4. Reduce layers in Dockerfile\u003c/h3\u003e\n\u003cp\u003eReduce multiple lines into one if possible. Because each layer takes space in image. For example, reduce the following:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apk add gcc\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apk add python3-dev\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo this one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apk add gcc python3-dev\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"5-no-need-to-install-debug-tools\"\u003e5. No need to install debug tools\u003c/h3\u003e\n\u003cp\u003eYou don\u0026rsquo;t need debug tools like \u003ccode\u003ecURL\u003c/code\u003e or \u003ccode\u003eVim\u003c/code\u003e in Docker(at least not in production). Install only the necessary packages.\u003c/p\u003e\n\u003ch2 id=\"reduce-build-time-by-caching-layers\"\u003eReduce build time by caching layers\u003c/h2\u003e\n\u003cp\u003eSometimes its better to cache layers which takes long time to install or download. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e /PLUGIN_DIR/pom.xml .\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mvn dependency:go-offline\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mvn package\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this code, I use an extra layer \u003ccode\u003eRUN mvn dependency:go-offline\u003c/code\u003e. When the image is built for the first time, this layer executes to resolve dependencies. But consecutive builds after that, they don\u0026rsquo;t execute this layer as its alredy cached. It reduces build time significantly.\u003c/p\u003e\n\u003cp\u003eHere is another example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip3 install \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003epandas\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e0.25.2 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003enumpy\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.17.3 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003epsycopg2\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e2.8.4 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"nv\"\u003egensim\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e3.8.1\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip3 install -r requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere you can see I am using extra layer to install pandas, numpy, scipy etc, and that layer will be cached after first build.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThats it for now. I will add more stuff in future in this article or future articles. So stay tuned 😄 . Finally, feel free to share your feedback in comment section below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n\u003ch2 id=\"relevent-posts\"\u003eRelevent posts\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/docker-compose-arg-env/\"\u003eTips on using Docker Compose, Build Argument and Environment Variable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/docker-volume-entrypoint-ignorefile/\"\u003eTips on Using Docker Volume, Entrypoint and .dockerignore file\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://hackernoon.com/tips-to-reduce-docker-image-sizes-876095da3b34\"\u003ehttps://hackernoon.com/tips-to-reduce-docker-image-sizes-876095da3b34\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","content":"For the past couple of years, I have been creating Dockerfile for different projects. based on those experiences I am going to share some tips on writing docker files to communication between containers.\n_FYI: before reading this article, please read the article from official docker blog site to learn about best practices for creating Dockerfile._Table of contents\u0026nbsp;  Look for official docker images Reduce the size of docker image  1. Use Alpine based images 2. Delete packages after dependent applications are installed 3. Remove cache 4. Reduce layers in Dockerfile 5. No need to install debug tools   Reduce build time by caching layers In conclusion Relevent posts References   \nLook for official docker images When you are trying to run a project in Docker, its better to use official images rather than writing your own. If you need to install different packages that does not come with the official image, then you can extend the official images. For example, if you want to install Flask in your Docker Container, instead of creating an Image from Ubuntu or Alpine Linux, use Python\u0026rsquo;s official image:\nFROMpython:3.7-alpineRUN pip install flaskReduce the size of docker image Reducing size of a docker image is very important. Because before you know it, your image might take 1-3 GB of space. There are different ways you can reduce it. For example:\n1. Use Alpine based images For most of the official docker images, there is a alpine varient. Alpine varients are much more light weight then their ubuntu/debian counter parts. Also, alpine base image is only 5MB.\n2. Delete packages after dependent applications are installed Lets say you want to install psycopg2 python package in your docker, for that you need to add packages like postgres-dev, python-dev, musl-dev etc. But those packages won\u0026rsquo;t be needed once psycopg2 is installed, so its better to delete them. For that, in alpine you can use the following code:\nRUN apk update \\  \u0026amp;\u0026amp; apk add --virtual build-deps gcc python3-dev musl-dev \\  \u0026amp;\u0026amp; apk add postgresql-dev \\  \u0026amp;\u0026amp; pip install psycopg2 \\  \u0026amp;\u0026amp; apk del build-depsExplanation: here I am installing the packages using --virtual build-deps tag, which means those packages will be installed build-deps directory. After psycopg2 is installed, I can simply delete it.\n3. Remove cache Remove cache from alpine image by adding --no-cache at the end of apk add. But down side is that each time you build the image, your packages will be installed again.\nProbably you can do the same in Ubuntu or debian based images using -- no-install-recommends on apt-get install.\nYou can do the same thing with package manager, for example in pip:\nRUN pip install --no-cache-dir django4. Reduce layers in Dockerfile Reduce multiple lines into one if possible. Because each layer takes space in image. For example, reduce the following:\nRUN apk add gccRUN apk add python3-devTo this one:\nRUN apk add gcc python3-dev5. No need to install debug tools You don\u0026rsquo;t need debug tools like cURL or Vim in Docker(at least not in production). Install only the necessary packages.\nReduce build time by caching layers Sometimes its better to cache layers which takes long time to install or download. For example:\nCOPY /PLUGIN_DIR/pom.xml .RUN mvn dependency:go-offlineRUN mvn packageIn this code, I use an extra layer RUN mvn dependency:go-offline. When the image is built for the first time, this layer executes to resolve dependencies. But consecutive builds after that, they don\u0026rsquo;t execute this layer as its alredy cached. It reduces build time significantly.\nHere is another example:\nRUN pip3 install \\  pandas==0.25.2 \\  numpy==1.17.3 \\  psycopg2==2.8.4 \\  gensim==3.8.1RUN pip3 install -r requirements.pipHere you can see I am using extra layer to install pandas, numpy, scipy etc, and that layer will be cached after first build.\nIn conclusion Thats it for now. I will add more stuff in future in this article or future articles. So stay tuned 😄 . Finally, feel free to share your feedback in comment section below.\nCheers!!\nRelevent posts  Tips on using Docker Compose, Build Argument and Environment Variable Tips on Using Docker Volume, Entrypoint and .dockerignore file  References  https://hackernoon.com/tips-to-reduce-docker-image-sizes-876095da3b34  ","description":"For the past couple of years, I have been creating Dockerfile for different projects. based on those experiences I am going to share some tips on writing docker files to communication between containers.\n_FYI: before reading this article, please read the article from official docker blog site to learn about best practices for creating Dockerfile."},{"date_published":"2019-10-30T02:40:51+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"October 30, 2019","id":"https://ruddra.com/manjaro-kde-plasma-workspace-visual-improvements/","url":"https://ruddra.com/manjaro-kde-plasma-workspace-visual-improvements/","title":"Manjaro KDE Virtual Desktop Management and Visual Improvement Tips","image":"https://ruddra.com/content/images/2019/10/workspace.jpg","tags":["Manjaro","Linux"],"content_html":"\u003cp\u003eFor the past couple of days, I am testing out Manjaro linux. Most of the time, I was working with \u003ca href=\"https://manjaro.org/download/official/kde/\"\u003eKDE Plasma Edition\u003c/a\u003e. In my opinion, it is the most beautiful desktop environment from Manjaro official distributions.\u003c/p\u003e\n\u003cp\u003eI am a fan of Ubuntu Unity workspaces and wanted to use similar features in KDE plasma as well. Here is how I configure.\u003c/p\u003e\n\u003cp\u003eAlong with that, we shall see some visual and usability improvement shortcuts which can be very useful. Like stopping the dancing icons on application launch \u0026hellip;\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#workspace-or-virtual-desktop\"\u003e\u0026lsquo;Workspace\u0026rsquo; or \u0026lsquo;Virtual Desktop\u0026rsquo;\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#store-session-per-application-in-workspaces\"\u003eStore session per application in workspaces\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#2x2-workspaces\"\u003e2X2 workspaces\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#no-wrap-around-for-workspaces\"\u003eNo wrap around for workspaces\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#workspace-switch-shortcut\"\u003eWorkspace switch shortcut\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#visual-and-usability-improvement-shortcuts\"\u003eVisual and Usability Improvement Shortcuts\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#turn-keyboard-backlight-onoff\"\u003eTurn keyboard backlight on/off\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#fix-icon-from-taskbar-or-menu-bar\"\u003eFix icon from taskbar or menu bar\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#change-mouse-click-animation\"\u003eChange mouse click animation\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#mouse-single-click\"\u003eMouse single click\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#application-launch-animation\"\u003eApplication launch animation\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#close-button-x-on-left\"\u003eClose button (X) on left\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"workspace-or-virtual-desktop\"\u003e\u0026lsquo;Workspace\u0026rsquo; or \u0026lsquo;Virtual Desktop\u0026rsquo;\u003c/h2\u003e\n\u003ch3 id=\"store-session-per-application-in-workspaces\"\u003eStore session per application in workspaces\u003c/h3\u003e\n\u003cp\u003eImagine how many clicks you have to do when you restart your PC because you need to start multiple apps you need and place them in different workspaces. As a developer, I find pretty hard to do that for every restart/logout. You can fix it from \u003cstrong\u003eDesktop Session\u003c/strong\u003e. Click on \u003cem\u003eSuper Key\u003c/em\u003e(Key with windows icon) to open \u003cstrong\u003eApplication Launcher\u003c/strong\u003e and type \u003cstrong\u003eDesktop Session\u003c/strong\u003e, there you should see the options to store session after logout.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"519\" height=\"613\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 519 613'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/10/manjaro-shortcuts1_hudc76d26364d001405cf3b21033fb7ed1_39261_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/10/manjaro-shortcuts1_hudc76d26364d001405cf3b21033fb7ed1_39261_500x0_resize_q75_lanczos.jpg 500w'\n        alt='manjaro' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/10/manjaro-shortcuts1.jpg\" width=\"519\" height=\"613\" alt='manjaro'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"558\" height=\"562\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 558 562'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/10/manjaro-shortcuts2_hu3256cdaf814f0a244fae8200720d8f6e_30931_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/10/manjaro-shortcuts2_hu3256cdaf814f0a244fae8200720d8f6e_30931_500x0_resize_q75_lanczos.jpg 500w'\n        alt='manjaro' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/10/manjaro-shortcuts2.jpg\" width=\"558\" height=\"562\" alt='manjaro'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"2x2-workspaces\"\u003e2X2 workspaces\u003c/h3\u003e\n\u003cp\u003eI prefer 2 desktop 2X2(2 rows and 2 columns) for work purpose. Each workspace has its own app, so I don\u0026rsquo;t have to click mouse to get to that application. You can turn this setup on from: \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eVirtual Desktops\u003c/strong\u003e(you can find it by typing in search bar in application launcher).\u003c/p\u003e\n\u003ch3 id=\"no-wrap-around-for-workspaces\"\u003eNo wrap around for workspaces\u003c/h3\u003e\n\u003cp\u003eTo stop circulating in between workspaces, you enable no wrap around virtual desktop from \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eVirtual Desktops\u003c/strong\u003e settings. Just untic Navigations wraps around.\u003c/p\u003e\n\u003ch3 id=\"workspace-switch-shortcut\"\u003eWorkspace switch shortcut\u003c/h3\u003e\n\u003cp\u003eChange the workspace shortcut from: \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eGlobal Shortcuts\u003c/strong\u003e \u0026gt; \u003cstrong\u003eKWin\u003c/strong\u003e. I use the following ones:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1366\" height=\"768\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1366 768'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/10/manjaro-shortcuts3_hu7c6fd7dd84cc31e02a302f239eacd84a_89384_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/10/manjaro-shortcuts3_hu7c6fd7dd84cc31e02a302f239eacd84a_89384_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/10/manjaro-shortcuts3_hu7c6fd7dd84cc31e02a302f239eacd84a_89384_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/10/manjaro-shortcuts3_hu7c6fd7dd84cc31e02a302f239eacd84a_89384_720x0_resize_q75_lanczos.jpg 720w'\n        alt='manjaro' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/10/manjaro-shortcuts3.jpg\" width=\"1366\" height=\"768\" alt='manjaro'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"visual-and-usability-improvement-shortcuts\"\u003eVisual and Usability Improvement Shortcuts\u003c/h2\u003e\n\u003ch3 id=\"turn-keyboard-backlight-onoff\"\u003eTurn keyboard backlight on/off\u003c/h3\u003e\n\u003cp\u003eUsually keyboard backlight is off immediately after the laptop goes in battery mode. I find it annoying as most of the time I am working in the dark when there is load shedding. But you can turn that on by changing settings from \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eEnergy Saving\u003c/strong\u003e \u0026gt; \u003cstrong\u003e[your preferred power mode]\u003c/strong\u003e \u0026gt; \u003cstrong\u003eKeyboard Backlight\u003c/strong\u003e. Or click on the battery icon on the task bar and change the backlight settings there.\u003c/p\u003e\n\u003ch3 id=\"fix-icon-from-taskbar-or-menu-bar\"\u003eFix icon from taskbar or menu bar\u003c/h3\u003e\n\u003cp\u003eIt might happen that your Application\u0026rsquo;s icon is missing from Taskbar or Menu bar(for repeated install/uninstall from different package managers). Probably you need to fix that from any one of the following directories:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e1. __/usr/share/applications/*.desktop__\n2. __/home/\u0026lt;usename\u0026gt;/.local/share/__\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id=\"change-mouse-click-animation\"\u003eChange mouse click animation\u003c/h3\u003e\n\u003cp\u003eChange this settings from:\u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eDesktop Effect\u003c/strong\u003e \u0026gt; \u003cstrong\u003eMouse Click Animation\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"mouse-single-click\"\u003eMouse single click\u003c/h3\u003e\n\u003cp\u003eBy default, single click acts as double click in KDE. Turn that off from: \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eWorkspace Behaviour\u003c/strong\u003e \u0026gt; \u003cstrong\u003edouble click open file\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"application-launch-animation\"\u003eApplication launch animation\u003c/h3\u003e\n\u003cp\u003eAnother annoying effect on KDE is application launch animation(the dancing application icon), you can turn it off from: \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eApplication Launch Feedback\u003c/strong\u003e \u0026gt; \u003cstrong\u003eNo Animation\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"close-button-x-on-left\"\u003eClose button (X) on left\u003c/h3\u003e\n\u003cp\u003eI like Mac\u0026rsquo;s orientation of close and other title bar buttons. You can arrange it like that in KDE from: \u003cstrong\u003eApplication Launcher\u003c/strong\u003e \u0026gt; \u003cstrong\u003eWindow Decorations\u003c/strong\u003e \u0026gt; \u003cstrong\u003eTitle Bar buttons\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"in-conclusion\"\u003eIn conclusion\u003c/h3\u003e\n\u003cp\u003eThat\u0026rsquo;s it for now. Please suggest me more in the comment section below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n","content":"For the past couple of days, I am testing out Manjaro linux. Most of the time, I was working with KDE Plasma Edition. In my opinion, it is the most beautiful desktop environment from Manjaro official distributions.\nI am a fan of Ubuntu Unity workspaces and wanted to use similar features in KDE plasma as well. Here is how I configure.\nAlong with that, we shall see some visual and usability improvement shortcuts which can be very useful. Like stopping the dancing icons on application launch \u0026hellip;Table of contents\u0026nbsp;  \u0026lsquo;Workspace\u0026rsquo; or \u0026lsquo;Virtual Desktop\u0026rsquo;  Store session per application in workspaces 2X2 workspaces No wrap around for workspaces Workspace switch shortcut   Visual and Usability Improvement Shortcuts  Turn keyboard backlight on/off Fix icon from taskbar or menu bar Change mouse click animation Mouse single click Application launch animation Close button (X) on left In conclusion     \n\u0026lsquo;Workspace\u0026rsquo; or \u0026lsquo;Virtual Desktop\u0026rsquo; Store session per application in workspaces Imagine how many clicks you have to do when you restart your PC because you need to start multiple apps you need and place them in different workspaces. As a developer, I find pretty hard to do that for every restart/logout. You can fix it from Desktop Session. Click on Super Key(Key with windows icon) to open Application Launcher and type Desktop Session, there you should see the options to store session after logout.\n      2X2 workspaces I prefer 2 desktop 2X2(2 rows and 2 columns) for work purpose. Each workspace has its own app, so I don\u0026rsquo;t have to click mouse to get to that application. You can turn this setup on from: Application Launcher \u0026gt; Virtual Desktops(you can find it by typing in search bar in application launcher).\nNo wrap around for workspaces To stop circulating in between workspaces, you enable no wrap around virtual desktop from Application Launcher \u0026gt; Virtual Desktops settings. Just untic Navigations wraps around.\nWorkspace switch shortcut Change the workspace shortcut from: Application Launcher \u0026gt; Global Shortcuts \u0026gt; KWin. I use the following ones:\n   Visual and Usability Improvement Shortcuts Turn keyboard backlight on/off Usually keyboard backlight is off immediately after the laptop goes in battery mode. I find it annoying as most of the time I am working in the dark when there is load shedding. But you can turn that on by changing settings from Application Launcher \u0026gt; Energy Saving \u0026gt; [your preferred power mode] \u0026gt; Keyboard Backlight. Or click on the battery icon on the task bar and change the backlight settings there.\nFix icon from taskbar or menu bar It might happen that your Application\u0026rsquo;s icon is missing from Taskbar or Menu bar(for repeated install/uninstall from different package managers). Probably you need to fix that from any one of the following directories:\n1. __/usr/share/applications/*.desktop__ 2. __/home/\u0026lt;usename\u0026gt;/.local/share/__  Change mouse click animation Change this settings from:Application Launcher \u0026gt; Desktop Effect \u0026gt; Mouse Click Animation\nMouse single click By default, single click acts as double click in KDE. Turn that off from: Application Launcher \u0026gt; Workspace Behaviour \u0026gt; double click open file.\nApplication launch animation Another annoying effect on KDE is application launch animation(the dancing application icon), you can turn it off from: Application Launcher \u0026gt; Application Launch Feedback \u0026gt; No Animation.\nClose button (X) on left I like Mac\u0026rsquo;s orientation of close and other title bar buttons. You can arrange it like that in KDE from: Application Launcher \u0026gt; Window Decorations \u0026gt; Title Bar buttons.\nIn conclusion That\u0026rsquo;s it for now. Please suggest me more in the comment section below.\nCheers!!\n","description":"For the past couple of days, I am testing out Manjaro linux. Most of the time, I was working with KDE Plasma Edition. In my opinion, it is the most beautiful desktop environment from Manjaro official distributions.\nI am a fan of Ubuntu Unity workspaces and wanted to use similar features in KDE plasma as well."},{"date_published":"2019-10-14T01:32:28+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"October 14, 2019","id":"https://ruddra.com/manjaro-tricks-and-tips/","url":"https://ruddra.com/manjaro-tricks-and-tips/","title":"Manjaro: Tricks and Tips","image":"https://ruddra.com/content/images/2019/10/archlinux.jpg","tags":["Manjaro","Linux","Visual Studio Code"],"content_html":"\u003cp\u003eRecently I tried out \u003ca href=\"https://manjaro.org/download/\"\u003e\u003cstrong\u003eManjaro\u003c/strong\u003e\u003c/a\u003e operating system, and did some experiment with XFCE and KDE desktop environments. Here I am going to share some tips and tricks to setup Manjaro in you machine. Now, let us dive in.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#copy-bash-history-to-zsh\"\u003eCopy bash history to ZSH\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#backlight-on-using-terminal\"\u003eBacklight On using terminal\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#install-visual-studio-codevs-code\"\u003eInstall visual studio code(VS Code)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#wireless-headphone-muddy-sound-fix\"\u003eWireless headphone muddy sound fix\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#gpg-verify-key-error-fix\"\u003eGPG verify key error fix\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#package-managers\"\u003ePackage managers\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#aur-or-build-your-own-packages\"\u003eAUR or build your own packages\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#pacman\"\u003ePacman\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#snap\"\u003eSnap\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#bootstrap-manjaro-setup\"\u003eBootstrap manjaro setup\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#iosandroid-file-copy\"\u003eIOS/Android file copy\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#rows-and-columns-in-workspaces\"\u003eRows and columns in workspaces\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#backup-and-restore\"\u003eBackup and restore\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#copy-environment-to-other-machine\"\u003eCopy environment to other machine\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"copy-bash-history-to-zsh\"\u003eCopy bash history to ZSH\u003c/h2\u003e\n\u003cp\u003eLets say you are using bash for a long time, and now you have installed ZSH. All of a sudden all of your command history is gone, so you want to transfer you bash history to ZSH. You can do that using the following script(copy pasted from this \u003ca href=\"https://gist.github.com/muendelezaji/c14722ab66b505a49861b8a74e52b274\"\u003e\u003cstrong\u003esnippet\u003c/strong\u003e\u003c/a\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003etime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estdin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereadlines\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eline\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erstrip\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estartswith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;#\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisdigit\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003et\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estdout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;: \u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e:0;\u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUsage:\u003c/strong\u003e you can run like this \u003ccode\u003e$ cat ~/.bash_history | python bash-to-zsh-hist.py \u0026gt;\u0026gt; ~/.zsh_history\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"backlight-on-using-terminal\"\u003eBacklight On using terminal\u003c/h2\u003e\n\u003cp\u003eYou can turn backlight from command prompt like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo tee /sys/class/leds/tpacpi::kbd_backlight/brightness\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"install-visual-studio-codevs-code\"\u003eInstall visual studio code(VS Code)\u003c/h2\u003e\n\u003cp\u003einstall VSCode using the following commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://aur.archlinux.org/visual-studio-code-bin.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e visual-studio-code-bin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emakepkg -si\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnother way is to use \u003ccode\u003esnap\u003c/code\u003e. Use \u003ccode\u003esnap install code --classic\u003c/code\u003e to do that.\u003c/p\u003e\n\u003ch2 id=\"wireless-headphone-muddy-sound-fix\"\u003eWireless headphone muddy sound fix\u003c/h2\u003e\n\u003cp\u003eWireless headphone setup/fix guide can be found \u003ca href=\"https://wiki.archlinux.org/index.php/Bluetooth_headset\"\u003e\u003cstrong\u003e\u003ccode\u003ehere\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e. But the most common problem is hearing muddy sound in wireless headphones, its due to lack of \u003ccode\u003ea2dp\u003c/code\u003e profile in bluetooth settings. You can do it by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epacmd set-card-profile card_number a2dp_sink\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMore information can be found \u003ca href=\"https://wiki.archlinux.org/index.php/Bluetooth_headset#Bad_sound_/_Static_noise_/_%22Muddy%22_sound\"\u003ein this section of the Bluetooth Headset Article\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"gpg-verify-key-error-fix\"\u003eGPG verify key error fix\u003c/h2\u003e\n\u003cp\u003eSometimes when installing a package using pacman you will face an error \u003cstrong\u003eGPG signature could not be verified\u003c/strong\u003e, this means you are missing the required public key to verify that package or subpackage. So install that using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egpg --search \u0026lt;key\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egpg --recv-key \u0026lt;key\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"package-managers\"\u003ePackage managers\u003c/h2\u003e\n\u003cp\u003eThere are several ways to install packages through package managers, Like\u003c/p\u003e\n\u003ch3 id=\"aur-or-build-your-own-packages\"\u003eAUR or build your own packages\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://aur.archlinux.org/\"\u003e\u003cstrong\u003eAUR\u003c/strong\u003e\u003c/a\u003e is the repository for softwares for ArchLinux. You can install the packages using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone \u0026lt;package\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e \u0026lt;package-dir\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emakepkg -si // -sic\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can install the following packages from \u003cstrong\u003eAUR\u003c/strong\u003e: 1. \u003ca href=\"https://aur.archlinux.org/packages/dropbox/\"\u003eDropbox\u003c/a\u003e 2. \u003ca href=\"https://aur.archlinux.org/packages/visual-studio-code-bin/\"\u003eVisual Studio Code\u003c/a\u003e. 3. \u003ca href=\"https://aur.archlinux.org/packages/google-chrome/\"\u003eGoogle Chrome\u003c/a\u003e. 4. \u003ca href=\"https://aur.archlinux.org/pulseaudio-modules-bt-git.git\"\u003ePulse Audio Bluetooth Module Git\u003c/a\u003e. 5. \u003ca href=\"https://aur.archlinux.org/packages/pulseaudio-bluetooth-a2dp-gdm-fix\"\u003ePulse Audio A2DP Profile\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"pacman\"\u003ePacman\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://wiki.archlinux.org/index.php/pacman\"\u003e\u003cstrong\u003ePacman\u003c/strong\u003e\u003c/a\u003e is the package manager for Archlinux. Basic usages are:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo pacman -S \u0026lt;package\u0026gt;  \u003cspan class=\"c1\"\u003e# installing a package\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo pacman -R \u0026lt;package\u0026gt;  \u003cspan class=\"c1\"\u003e# uninstalling a package\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere are some packages which can be installed using pacman:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003edocker\u003c/li\u003e\n\u003cli\u003eifuse\u003c/li\u003e\n\u003cli\u003eusbmuxd\u003c/li\u003e\n\u003cli\u003elibplist\u003c/li\u003e\n\u003cli\u003elibimobiledevice\u003c/li\u003e\n\u003cli\u003evsftpd\u003c/li\u003e\n\u003cli\u003egit\u003c/li\u003e\n\u003cli\u003edeluge\u003c/li\u003e\n\u003cli\u003ezsh\u003c/li\u003e\n\u003cli\u003ehugo\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"snap\"\u003eSnap\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://snapcraft.io/\"\u003e\u003cstrong\u003eSnaps\u003c/strong\u003e\u003c/a\u003e are containerised software packages that are simple to create and install. It comes built it with Manjaro. Here are some basic usages:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esnap install \u0026lt;package\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esnap remove \u0026lt;package\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSome packages which can be installed by snap:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSpotify: \u003ccode\u003espotify\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eVSCode: \u003ccode\u003ecode --classic\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"bootstrap-manjaro-setup\"\u003eBootstrap manjaro setup\u003c/h2\u003e\n\u003cp\u003eHere are some gists containing useful scripts to bootstrap your manjaro setup with necessary packages:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://gist.github.com/gabrielmoreira/561ec9374e03567fa710\"\u003ehttps://gist.github.com/gabrielmoreira/561ec9374e03567fa710\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/hypnoglow/manjaro-bootstrap\"\u003ehttps://github.com/hypnoglow/manjaro-bootstrap\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gist.github.com/ruddra/db73009f778c0d36ebe88a9c9006bcd1\"\u003ehttps://gist.github.com/ruddra/db73009f778c0d36ebe88a9c9006bcd1\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"iosandroid-file-copy\"\u003eIOS/Android file copy\u003c/h2\u003e\n\u003cp\u003eManjaro works well with andriod, but for IOS it does not have proper support(as there is no itunes). You can install the following packages to copy files from IOS:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo pacman -Syyuu ifuse usbmuxd libplist libimobiledevice\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"rows-and-columns-in-workspaces\"\u003eRows and columns in workspaces\u003c/h2\u003e\n\u003cp\u003eAlthough KDE has this sorted out, but XFCE has some issues with it(only one row, no columns). You can sort it out by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003exprop -root -f _NET_DESKTOP_LAYOUT 32cccc -set _NET_DESKTOP_LAYOUT 0,2,2,0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003exprop -root -f _NET_NUMBER_OF_DESKTOPS 32c -set _NET_NUMBER_OF_DESKTOPS \u003cspan class=\"m\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"backup-and-restore\"\u003eBackup and restore\u003c/h2\u003e\n\u003cp\u003eAs Archlinux is kind of bleeding edge thing, so updates might break your system, better to use a backup tool like \u003ca href=\"https://github.com/teejee2008/timeshift\"\u003e\u003cstrong\u003etimeshift\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"copy-environment-to-other-machine\"\u003eCopy environment to other machine\u003c/h2\u003e\n\u003cp\u003eYou can use \u003ca href=\"https://github.com/teejee2008/aptik-gtk\"\u003e\u003cstrong\u003eAptik\u003c/strong\u003e\u003c/a\u003e to do that but as its now a paid software, its upto you to decide if you want to use it or not.\u003c/p\u003e\n\u003cp\u003eThats it for now. If you have any feedback or suggestion, then please use the comment section below.\u003c/p\u003e\n\u003cp\u003eThanks for reading. I will see you in the next article.\u003c/p\u003e\n","content":"Recently I tried out Manjaro operating system, and did some experiment with XFCE and KDE desktop environments. Here I am going to share some tips and tricks to setup Manjaro in you machine. Now, let us dive in.Table of contents\u0026nbsp;  Copy bash history to ZSH Backlight On using terminal Install visual studio code(VS Code) Wireless headphone muddy sound fix GPG verify key error fix Package managers  AUR or build your own packages Pacman Snap   Bootstrap manjaro setup IOS/Android file copy Rows and columns in workspaces Backup and restore Copy environment to other machine   \nCopy bash history to ZSH Lets say you are using bash for a long time, and now you have installed ZSH. All of a sudden all of your command history is gone, so you want to transfer you bash history to ZSH. You can do that using the following script(copy pasted from this snippet):\nimport sys import time def main(): timestamp = None for line in sys.stdin.readlines(): line = line.rstrip(\u0026#39;\\n\u0026#39;) if line.startswith(\u0026#39;#\u0026#39;) and timestamp is None: t = line[1:] if t.isdigit(): timestamp = t continue else: sys.stdout.write(\u0026#39;: %s:0;%s\\n\u0026#39; % (timestamp or time.time(), line)) timestamp = None if __name__ == \u0026#39;__main__\u0026#39;: main() Usage: you can run like this $ cat ~/.bash_history | python bash-to-zsh-hist.py \u0026gt;\u0026gt; ~/.zsh_history.\nBacklight On using terminal You can turn backlight from command prompt like this:\necho 2 | sudo tee /sys/class/leds/tpacpi::kbd_backlight/brightness Install visual studio code(VS Code) install VSCode using the following commands:\ngit clone https://aur.archlinux.org/visual-studio-code-bin.git cd visual-studio-code-bin makepkg -si Another way is to use snap. Use snap install code --classic to do that.\nWireless headphone muddy sound fix Wireless headphone setup/fix guide can be found here. But the most common problem is hearing muddy sound in wireless headphones, its due to lack of a2dp profile in bluetooth settings. You can do it by:\npacmd set-card-profile card_number a2dp_sink More information can be found in this section of the Bluetooth Headset Article.\nGPG verify key error fix Sometimes when installing a package using pacman you will face an error GPG signature could not be verified, this means you are missing the required public key to verify that package or subpackage. So install that using:\ngpg --search \u0026lt;key\u0026gt; gpg --recv-key \u0026lt;key\u0026gt; Package managers There are several ways to install packages through package managers, Like\nAUR or build your own packages AUR is the repository for softwares for ArchLinux. You can install the packages using:\ngit clone \u0026lt;package\u0026gt; cd \u0026lt;package-dir\u0026gt; makepkg -si // -sic You can install the following packages from AUR: 1. Dropbox 2. Visual Studio Code. 3. Google Chrome. 4. Pulse Audio Bluetooth Module Git. 5. Pulse Audio A2DP Profile.\nPacman Pacman is the package manager for Archlinux. Basic usages are:\nsudo pacman -S \u0026lt;package\u0026gt; # installing a package sudo pacman -R \u0026lt;package\u0026gt; # uninstalling a package Here are some packages which can be installed using pacman:\n docker ifuse usbmuxd libplist libimobiledevice vsftpd git deluge zsh hugo  Snap Snaps are containerised software packages that are simple to create and install. It comes built it with Manjaro. Here are some basic usages:\nsnap install \u0026lt;package\u0026gt; snap remove \u0026lt;package\u0026gt; Some packages which can be installed by snap:\n Spotify: spotify VSCode: code --classic  Bootstrap manjaro setup Here are some gists containing useful scripts to bootstrap your manjaro setup with necessary packages:\n https://gist.github.com/gabrielmoreira/561ec9374e03567fa710 https://github.com/hypnoglow/manjaro-bootstrap https://gist.github.com/ruddra/db73009f778c0d36ebe88a9c9006bcd1  IOS/Android file copy Manjaro works well with andriod, but for IOS it does not have proper support(as there is no itunes). You can install the following packages to copy files from IOS:\nsudo pacman -Syyuu ifuse usbmuxd libplist libimobiledevice Rows and columns in workspaces Although KDE has this sorted out, but XFCE has some issues with it(only one row, no columns). You can sort it out by:\nxprop -root -f _NET_DESKTOP_LAYOUT 32cccc -set _NET_DESKTOP_LAYOUT 0,2,2,0 xprop -root -f _NET_NUMBER_OF_DESKTOPS 32c -set _NET_NUMBER_OF_DESKTOPS 4 Backup and restore As Archlinux is kind of bleeding edge thing, so updates might break your system, better to use a backup tool like timeshift.\nCopy environment to other machine You can use Aptik to do that but as its now a paid software, its upto you to decide if you want to use it or not.\nThats it for now. If you have any feedback or suggestion, then please use the comment section below.\nThanks for reading. I will see you in the next article.\n","description":"A collection of tips and fixes for Bash, VSCode, Bluetooth Driver, Package Manager and many more on Manjaro Linux."},{"date_published":"2019-10-02T22:06:21+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"October 2, 2019","id":"https://ruddra.com/django-store-url-argument-through-middleware/","url":"https://ruddra.com/django-store-url-argument-through-middleware/","title":"Django Access URL Arguments Through Middleware","image":"https://ruddra.com/content/images/2019/10/django_store.jpg","tags":["Python","Django"],"content_html":"\u003cp\u003eLets say you have an API which is being used by many stores. Now for a specific store \u003cstrong\u003eABC\u003c/strong\u003e, they want to have a different response format. So how would you make this implementation generic without making different views for store \u003cstrong\u003eABC\u003c/strong\u003e? Simple, use middleware.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#how-it-works\"\u003eHow it works\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#another-usage-scenario\"\u003eAnother usage scenario\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"how-it-works\"\u003eHow it works\u003c/h2\u003e\n\u003cp\u003eFirst update the url like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;api/v1/\u0026lt;str:store_code\u0026gt;/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;api.urls\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen write a middleware to capture the value of \u003ccode\u003estore_code\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreCodeMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__call__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eview_func\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eview_args\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eview_kwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003estore_code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eview_kwargs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;store_code\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003estore_code\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;store_code\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estore_code\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere I am using \u003ca href=\"https://docs.djangoproject.com/en/2.2/topics/http/middleware/#process_view\"\u003e\u003cstrong\u003e\u003ccode\u003eprocess_view\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to capture the url argument. Because in \u003ccode\u003eprocess_view\u003c/code\u003e, there is a keyword argument named \u003ccode\u003eview_kwargs\u003c/code\u003e which is a dictionary, which will be passed to the view. Now, we can attach the \u003ccode\u003estore_code\u003c/code\u003e to \u003ccode\u003erequest\u003c/code\u003e object through another middleware.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreToRequestMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_response\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__call__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003estore_code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;store_code\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003estore_code\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_or_create\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estore_code\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# assuming `Store` is the model class where store information are being stored\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_response\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow lets add these middlewares in \u003ccode\u003esettings.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMIDDLEWARES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# rest of the middlewares\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;path.to.StoreCodeMiddleware\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;path.to.StoreToRequestMiddleware\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMake sure \u003ccode\u003eStoreCodeMiddleware\u003c/code\u003e is on top of \u003ccode\u003eStoreToMiddleware\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cp\u003eLets say you have an API view, then use \u003ccode\u003estore\u003c/code\u003e info like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreAPI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eserializer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCommonSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecode\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;ABC\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eserializer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eABCSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"another-usage-scenario\"\u003eAnother usage scenario\u003c/h2\u003e\n\u003cp\u003eLets say you are using a package like black box which provides everything through url(means you can\u0026rsquo;t override anything inside the views or models), then the approach is useful. For example, when using \u003ccode\u003edjoser\u003c/code\u003e or \u003ccode\u003edjango-rest-auth\u003c/code\u003e, they provide authentication services(like login, registration, password reset etc), you just need to include their url in your root url. When using these libraries, you might need to store additional information coming through url; then the given approach is really helpful.\u003c/p\u003e\n\u003cp\u003eHope it helps. Thanks for reading. Cheers!!\u003c/p\u003e\n","content":"Lets say you have an API which is being used by many stores. Now for a specific store ABC, they want to have a different response format. So how would you make this implementation generic without making different views for store ABC? Simple, use middleware.Table of contents\u0026nbsp;  How it works Usage Another usage scenario   \nHow it works First update the url like this:\nurl = [ path(\u0026#39;api/v1/\u0026lt;str:store_code\u0026gt;/\u0026#39;, include(\u0026#34;api.urls\u0026#34;)), ] Then write a middleware to capture the value of store_code:\nclass StoreCodeMiddleware: def __init__(self, get_response): self.get_response = get_response def __call__(self, request): response = self.get_response(request) return response def process_view(request, view_func, view_args, view_kwargs): store_code = view_kwargs.get(\u0026#39;store_code\u0026#39;, None) if store_code: request.session[\u0026#39;store_code\u0026#39;] = store_code Here I am using process_view to capture the url argument. Because in process_view, there is a keyword argument named view_kwargs which is a dictionary, which will be passed to the view. Now, we can attach the store_code to request object through another middleware.\nclass StoreToRequestMiddleware: def __init__(self, get_response): self.get_response = get_response def __call__(self, request): store_code = request.session.get(\u0026#39;store_code\u0026#39;, None) if store_code: request.store, _ = Store.objects.get_or_create(code=store_code) # assuming `Store` is the model class where store information are being stored response = self.get_response(request) return response Now lets add these middlewares in settings.py:\nMIDDLEWARES = [ # rest of the middlewares \u0026#39;path.to.StoreCodeMiddleware\u0026#39;, \u0026#39;path.to.StoreToRequestMiddleware\u0026#39; ] Make sure StoreCodeMiddleware is on top of StoreToMiddleware.\nUsage Lets say you have an API view, then use store info like this:\nclass StoreAPI(APIView): def get(self, request, *args, **kwargs): serializer = CommonSerializer(request.store) if request.store.code == \u0026#34;ABC\u0026#34;: serializer = ABCSerializer(request.store) return Response(serializer.data) Another usage scenario Lets say you are using a package like black box which provides everything through url(means you can\u0026rsquo;t override anything inside the views or models), then the approach is useful. For example, when using djoser or django-rest-auth, they provide authentication services(like login, registration, password reset etc), you just need to include their url in your root url. When using these libraries, you might need to store additional information coming through url; then the given approach is really helpful.\nHope it helps. Thanks for reading. Cheers!!\n","description":"Lets say you have an API which is being used by many stores. Now for a specific store ABC, they want to have a different response format. So how would you make this implementation generic without making different views for store ABC? Simple, use middleware.Table of contents\u0026nbsp;  How it works Usage Another usage scenario"},{"date_published":"2019-10-01T00:16:34+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"October 1, 2019","id":"https://ruddra.com/solr-docker-plugin-install/","url":"https://ruddra.com/solr-docker-plugin-install/","title":"Build and Configure Plugins Inside Solr Using Docker","image":"https://ruddra.com/content/images/2019/10/solr.jpg","tags":["Docker","Solr"],"content_html":"\u003cp\u003eAdding a plugin to \u003ca href=\"https://lucene.apache.org/solr/\"\u003e\u003cstrong\u003e\u003ccode\u003eSolr\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e is relatively simple process. In this article, we are going to see how to add a plugin by creating a jar file using a docker container, then add that to a Solr which also runs inside docker container.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#building-the-plugin\"\u003eBuilding the plugin\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#workflow-for-building-the-plugin\"\u003eWorkflow for building the plugin\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#example-of-solr-image\"\u003eExample of solr image\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#explanation\"\u003eExplanation\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#run-solr\"\u003eRun solr\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#without-docker-compose\"\u003eWithout \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#with-docker-compose\"\u003eWith \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configure-plugin-inside-docker\"\u003eConfigure plugin inside docker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"building-the-plugin\"\u003eBuilding the plugin\u003c/h2\u003e\n\u003ch3 id=\"workflow-for-building-the-plugin\"\u003eWorkflow for building the plugin\u003c/h3\u003e\n\u003cp\u003eSteps for building a Solr plugin inside Solr docker file are like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1162\" height=\"820\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1162 820'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/10/solr-docker-structure_hua0d4d4b24f4da3a102e4452ac738b95f_94338_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/10/solr-docker-structure_hua0d4d4b24f4da3a102e4452ac738b95f_94338_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/10/solr-docker-structure_hua0d4d4b24f4da3a102e4452ac738b95f_94338_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/10/solr-docker-structure_hua0d4d4b24f4da3a102e4452ac738b95f_94338_720x0_resize_q75_lanczos.jpg 720w'\n        alt='solr' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/10/solr-docker-structure.jpg\" width=\"1162\" height=\"820\" alt='solr'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"example-of-solr-image\"\u003eExample of solr image\u003c/h3\u003e\n\u003cp\u003eHere is an example to build a Solr plugin using Maven in Docker:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFROM maven:alpine as build\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eWORKDIR /app\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCOPY /PLUGIN_DIR/pom.xml .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRUN mvn dependency:go-offline\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCOPY /PLUGIN_DIR/src /app/src\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRUN mvn package\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eFROM solr:slim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCOPY --from\u003cspan class=\"o\"\u003e=\u003c/span\u003ebuild /app/target/*.jar /opt/solr/dist/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eEXPOSE \u003cspan class=\"m\"\u003e8983\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eCMD \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;solr-precreate\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;gettingstarted\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"explanation\"\u003eExplanation\u003c/h3\u003e\n\u003cp\u003eLet us go through the \u003ccode\u003eDockerfile\u003c/code\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWe will be using a \u003ca href=\"https://hub.docker.com/_/maven\"\u003e\u003cstrong\u003e\u003ccode\u003eMaven based Docker\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e image(using alpine to make it lightweight) for building the package. You can use \u003ca href=\"https://hub.docker.com/_/gradle\"\u003e\u003cstrong\u003e\u003ccode\u003eGradle based image\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e as well if we are using gradle building system.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThen we use \u003ccode\u003e/app\u003c/code\u003e directory as work directory and inside that we will copy the \u003ccode\u003epom.xml\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAfter that, we will install dependencies using \u003ccode\u003emvn dependency:go-offline\u003c/code\u003e command. Reason for using this instead of clean is that, this step will be cached next time we build the image, which will reduce the building time a lot.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThen we add the source directory in docker and build the \u003ccode\u003ejar\u003c/code\u003e file.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFinally, we copy the jar file to Solr container at directory \u003ccode\u003e/opt/solr/dist\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe will be using \u003ca href=\"https://github.com/docker-solr/docker-solr#creating-cores\"\u003e\u003cstrong\u003e\u003ccode\u003esolr-precreate\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e command, which will create a core named \u003ccode\u003egettingstarted\u003c/code\u003e if it does not exist.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"run-solr\"\u003eRun solr\u003c/h2\u003e\n\u003ch3 id=\"without-docker-compose\"\u003eWithout \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eIf you don\u0026rsquo;t use \u003ca href=\"https://docs.docker.com/compose/\"\u003e\u003cstrong\u003e\u003ccode\u003edocker compose\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e, then you can use the following instructions:\u003c/p\u003e\n\u003cp\u003eBuild the docker image using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker build . -t my_solr\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen run it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emkdir solrdata\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -d -v \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$PWD\u003c/span\u003e\u003cspan class=\"s2\"\u003e/solrdata:/var/solr\u0026#34;\u003c/span\u003e -p 8983:8983 my_solr\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen the Solr will be running with core \u003ccode\u003egettingstarted\u003c/code\u003e. Solr data will be shared with your local machine with \u003ccode\u003esolrdata\u003c/code\u003e directory(through volume).\u003c/p\u003e\n\u003ch3 id=\"with-docker-compose\"\u003eWith \u003ccode\u003edocker-compose\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003edocker-compose.yml\u003c/code\u003e should contain the following service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esolr\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emy_solr\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edockerfile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e./Dockerfile\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emy_solr\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;./solrdata/:/var/solr/\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8983:8983\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen you can build the image by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose -f docker-compose.yml build solr\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen run the service by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose -f docker-compose.yml up\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"configure-plugin-inside-docker\"\u003eConfigure plugin inside docker\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eFYI: This step will vary from solr to solr based on its configuration, but the idea of using the plugin is almost same for any solr standalone mode.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eWe need to load the plugin inside the core by putting the following line in \u003ccode\u003edata/gettingstarted/conf/solrconfig.xml\u003c/code\u003e inside \u003ccode\u003esolrdata\u003c/code\u003e volume.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;lib\u003c/span\u003e \u003cspan class=\"na\"\u003edir=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${solr.install.dir:../../../..}/dist/\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eregex=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.jar\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it, the plugin will be loaded in that core. Now you need to restart the solr to make the plugin usable.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThank you for reading. Please use the comment section below if you have any feedback on this setup. Cheers!!\u003c/p\u003e\n","content":"Adding a plugin to Solr is relatively simple process. In this article, we are going to see how to add a plugin by creating a jar file using a docker container, then add that to a Solr which also runs inside docker container.Table of contents\u0026nbsp;  Building the plugin  Workflow for building the plugin Example of solr image Explanation   Run solr  Without docker-compose With docker-compose   Configure plugin inside docker In conclusion   \nBuilding the plugin Workflow for building the plugin Steps for building a Solr plugin inside Solr docker file are like this:\n   Example of solr image Here is an example to build a Solr plugin using Maven in Docker:\nFROM maven:alpine as build WORKDIR /app COPY /PLUGIN_DIR/pom.xml . RUN mvn dependency:go-offline COPY /PLUGIN_DIR/src /app/src RUN mvn package FROM solr:slim COPY --from=build /app/target/*.jar /opt/solr/dist/ EXPOSE 8983 CMD [\u0026#34;solr-precreate\u0026#34;, \u0026#34;gettingstarted\u0026#34;] Explanation Let us go through the Dockerfile:\n  We will be using a Maven based Docker image(using alpine to make it lightweight) for building the package. You can use Gradle based image as well if we are using gradle building system.\n  Then we use /app directory as work directory and inside that we will copy the pom.xml.\n  After that, we will install dependencies using mvn dependency:go-offline command. Reason for using this instead of clean is that, this step will be cached next time we build the image, which will reduce the building time a lot.\n  Then we add the source directory in docker and build the jar file.\n  Finally, we copy the jar file to Solr container at directory /opt/solr/dist.\n  We will be using solr-precreate command, which will create a core named gettingstarted if it does not exist.\n  Run solr Without docker-compose If you don\u0026rsquo;t use docker compose, then you can use the following instructions:\nBuild the docker image using:\ndocker build . -t my_solr Then run it:\nmkdir solrdata docker run -d -v \u0026#34;$PWD/solrdata:/var/solr\u0026#34; -p 8983:8983 my_solr Then the Solr will be running with core gettingstarted. Solr data will be shared with your local machine with solrdata directory(through volume).\nWith docker-compose docker-compose.yml should contain the following service:\nversion:\u0026#34;3\u0026#34;services:solr:container_name:my_solrbuild:context:.dockerfile:./Dockerfileimage:my_solrvolumes:- \u0026#34;./solrdata/:/var/solr/\u0026#34;ports:- \u0026#34;8983:8983\u0026#34;Then you can build the image by:\ndocker-compose -f docker-compose.yml build solr Then run the service by:\ndocker-compose -f docker-compose.yml up Configure plugin inside docker FYI: This step will vary from solr to solr based on its configuration, but the idea of using the plugin is almost same for any solr standalone mode.\nWe need to load the plugin inside the core by putting the following line in data/gettingstarted/conf/solrconfig.xml inside solrdata volume.\n\u0026lt;lib dir=\u0026#34;${solr.install.dir:../../../..}/dist/\u0026#34; regex=\u0026#34;*.jar\u0026#34; /\u0026gt; Thats it, the plugin will be loaded in that core. Now you need to restart the solr to make the plugin usable.\nIn conclusion Thank you for reading. Please use the comment section below if you have any feedback on this setup. Cheers!!\n","description":"Adding a plugin to Solr is relatively simple process. In this article, we are going to see how to add a plugin by creating a jar file using a docker container, then add that to a Solr which also runs inside docker container.Table of contents\u0026nbsp;  Building the plugin  Workflow for building the plugin Example of solr image Explanation   Run solr  Without docker-compose With docker-compose   Configure plugin inside docker In conclusion"},{"date_published":"2019-08-06T18:54:21+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"August 6, 2019","id":"https://ruddra.com/vs-code-remote-docker-development/","url":"https://ruddra.com/vs-code-remote-docker-development/","title":"Use VS Code Inside Docker Container for Development","image":"https://ruddra.com/content/images/2020/03/docks.jpg","tags":["Visual Studio Code","Docker","IDE"],"content_html":"\u003cp\u003eVS Code is \u003cstrong\u003ethe\u003c/strong\u003e most popular IDE at the moment. You can use it for developing applications in almost any programming language. In addition to that, you can do \u003ca href=\"https://code.visualstudio.com/docs/remote/remote-overview\"\u003eremote development\u003c/a\u003e in \u003cstrong\u003eDocker\u003c/strong\u003e,VM etc. In this post, we are going to discuss about how to use \u003cstrong\u003eDocker Environment\u003c/strong\u003e in VS Code.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDISCLAIMER: This feature is already well documented in \u003ca href=\"https://code.visualstudio.com/docs/remote/containers\"\u003eofficial documentation\u003c/a\u003e. But when I started integrating Docker environment, I found it bit hard to understand. So, here I tried to describe it in a easier and organized way.\u003c/em\u003e \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-does-it-mean-by-remote-development-in-vs-code\"\u003eWhat does it mean by remote development in VS Code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#steps-for-set-up\"\u003eSteps for set up\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#first-step-appropriate-docker-environment\"\u003eFirst step: appropriate docker environment\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#second-step-create-devcontainer-folder\"\u003eSecond step: create \u003ccode\u003e.devcontainer\u003c/code\u003e folder\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#third-step-configuring-devcontainerjson\"\u003eThird step: configuring \u003ccode\u003edevcontainer.json\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#fourth-step-installing-_remote-development-extension-pack_\"\u003eFourth step: installing \u003cem\u003eRemote Development Extension Pack\u003c/em\u003e\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#final-step-run-vs-code-from-container\"\u003eFinal step: run VS Code from container\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-does-it-mean-by-remote-development-in-vs-code\"\u003eWhat does it mean by remote development in VS Code\u003c/h2\u003e\n\u003cp\u003eIt means VS Code will be used for developing the source code inside remote environment. When we are using docker, source codes are inside the docker container. VS Code will simply allow you to access that code inside the docker container but it will be running in your \u003cstrong\u003elocal machine\u003c/strong\u003e. You can even access the packages/references from docker file, also it will allow you to debug from docker container. How cool is that!! Following image will clear up the concept(\u003cem\u003ecopy pasted from documentation\u003c/em\u003e):\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"968\" height=\"402\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 968 402'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/08/architecture-containers_hu3aa7e2ba331ebf3e7bc201d3d2c28541_46404_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/08/architecture-containers_hu3aa7e2ba331ebf3e7bc201d3d2c28541_46404_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/08/architecture-containers_hu3aa7e2ba331ebf3e7bc201d3d2c28541_46404_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/08/architecture-containers_hu3aa7e2ba331ebf3e7bc201d3d2c28541_46404_720x0_resize_q75_lanczos.jpg 720w'\n        alt='vscode' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/08/architecture-containers.jpg\" width=\"968\" height=\"402\" alt='vscode'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThere are options available for either integrating \u003cstrong\u003eone\u003c/strong\u003e Docker environment or \u003cstrong\u003emultiple\u003c/strong\u003e environments using \u003ca href=\"https://docs.docker.com/compose/\"\u003e\u003cstrong\u003e\u003ccode\u003edocker-compose\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"steps-for-set-up\"\u003eSteps for set up\u003c/h2\u003e\n\u003ch3 id=\"first-step-appropriate-docker-environment\"\u003eFirst step: appropriate docker environment\u003c/h3\u003e\n\u003cp\u003eWell, if you have a \u003ca href=\"https://docs.docker.com/engine/reference/builder/\"\u003e\u003cstrong\u003e\u003ccode\u003eDockerfile\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e or a \u003ccode\u003edocker-compose.yml\u003c/code\u003e file, thats super cool. If you don\u0026rsquo;t have it, thats fine too. In that case, you can use an \u003ca href=\"https://docs.docker.com/engine/reference/commandline/images/\"\u003e\u003cstrong\u003e\u003ccode\u003eDocker Image\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e to build the docker environment. \u003cstrong\u003eFYI\u003c/strong\u003e, if you are using \u003cstrong\u003eAlpine Based Docker\u003c/strong\u003e environment, then you need to use \u003ca href=\"https://code.visualstudio.com/insiders/\"\u003e\u003cem\u003eVS Code Insiders\u003c/em\u003e\u003c/a\u003e Edition.\u003c/p\u003e\n\u003ch3 id=\"second-step-create-devcontainer-folder\"\u003eSecond step: create \u003ccode\u003e.devcontainer\u003c/code\u003e folder\u003c/h3\u003e\n\u003cp\u003eIn this step, you need to create a new folder named \u003ccode\u003e.devcontainer\u003c/code\u003e inside your source directory. Inside that, create a \u003ccode\u003edevcontainer.json\u003c/code\u003e file.\u003c/p\u003e\n\u003ch3 id=\"third-step-configuring-devcontainerjson\"\u003eThird step: configuring \u003ccode\u003edevcontainer.json\u003c/code\u003e\u003c/h3\u003e\n\u003cp\u003eBased on your setup, you need to use any one of the configurations:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e For \u0026lsquo;Dockerfile\u0026rsquo;\u003c/p\u003e\n\u003cp\u003eIf you have a \u003ccode\u003eDockerfile\u003c/code\u003e, then copy and paste the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Your Project\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;..\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;dockerFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;../Dockerfile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Path to docker file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e// Use the next line if you want to publish any ports.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;appPort\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e// If you want to use a post create command\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;postCreateCommand\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;npm install\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// extensions which is going to be installed inside the docker environment\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;ms-python.python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;dbaeumer.vscode-eslint\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;settings\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// additional settings for VS Code configurations\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can copy paste them from `settings.json` of your workspace\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// Reference: https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.pythonPath\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/usr/local/bin/python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pylintEnabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.enabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e For \u0026lsquo;Docker Compose\u0026rsquo;(multiple docker environment)\u003c/p\u003e\n\u003cp\u003eIf you are using \u003ccode\u003edocker-compose\u003c/code\u003e, then you can use the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Python 3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;..\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;dockerComposeFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;../docker-compose.yml\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"c1\"\u003e// You need to point it your `docker-compose.yml` file with proper path.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// Uncomment the next line if you want to publish any ports.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;appPort\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;8921:5000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e// Uncomment the next line to run commands after the container is created.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// \u0026#34;postCreateCommand\u0026#34;: \u0026#34;python --version\u0026#34;,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;service\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;your_service\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// You must define which service you are going to use from docker compose.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;workspaceFolder\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// path to your source inside docker file\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// extensions which is going to be installed inside the docker environment\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;ms-python.python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;dbaeumer.vscode-eslint\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;settings\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// additional settings for VS Code configurations\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can copy paste them from `settings.json` of your workspace\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// Reference: https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.pythonPath\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/usr/local/bin/python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pylintEnabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.enabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Docker image\u003c/p\u003e\n\u003cp\u003eIf you don\u0026rsquo;t use either of them, then using an \u003ccode\u003eImage\u003c/code\u003e is also fine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;My Project\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;image\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;mcr.microsoft.com/dotnet/core/sdk:latest\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;appPort\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e8090\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;ms-vscode.csharp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"fourth-step-installing-_remote-development-extension-pack_\"\u003eFourth step: installing \u003cem\u003eRemote Development Extension Pack\u003c/em\u003e\u003c/h3\u003e\n\u003cp\u003eInstall \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack\"\u003eRemote Development Extension Pack\u003c/a\u003e from VS Code Market, or use VS Code\u0026rsquo;s integrated market to install it:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1068\" height=\"206\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1068 206'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/08/vscode-remote-development-ext-pack_hubfae4762174d5c7343d2a89330783d4e_22682_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/08/vscode-remote-development-ext-pack_hubfae4762174d5c7343d2a89330783d4e_22682_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/08/vscode-remote-development-ext-pack_hubfae4762174d5c7343d2a89330783d4e_22682_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/08/vscode-remote-development-ext-pack_hubfae4762174d5c7343d2a89330783d4e_22682_720x0_resize_q75_lanczos.jpg 720w'\n        alt='vscode' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/08/vscode-remote-development-ext-pack.jpg\" width=\"1068\" height=\"206\" alt='vscode'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"final-step-run-vs-code-from-container\"\u003eFinal step: run VS Code from container\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eAfter installing, an icon will appear at bottom left of your VS Code:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1002\" height=\"46\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1002 46'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/08/vscode-remote-icon_hu0773875f8ae04674d6e950b1495c12d8_9502_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/08/vscode-remote-icon_hu0773875f8ae04674d6e950b1495c12d8_9502_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/08/vscode-remote-icon_hu0773875f8ae04674d6e950b1495c12d8_9502_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/08/vscode-remote-icon_hu0773875f8ae04674d6e950b1495c12d8_9502_720x0_resize_q75_lanczos.jpg 720w'\n        alt='vscode' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/08/vscode-remote-icon.jpg\" width=\"1002\" height=\"46\" alt='vscode'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eNow, click on that, and few options will appear like this:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1202\" height=\"416\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1202 416'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2019/08/vscode-remote-click_hu999a4b5f3fe15b1bb3723f555d3b53a9_59246_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2019/08/vscode-remote-click_hu999a4b5f3fe15b1bb3723f555d3b53a9_59246_500x0_resize_q75_lanczos.jpg 500w,/content/images/2019/08/vscode-remote-click_hu999a4b5f3fe15b1bb3723f555d3b53a9_59246_600x0_resize_q75_lanczos.jpg 600w,/content/images/2019/08/vscode-remote-click_hu999a4b5f3fe15b1bb3723f555d3b53a9_59246_720x0_resize_q75_lanczos.jpg 720w'\n        alt='vscode' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2019/08/vscode-remote-click.jpg\" width=\"1202\" height=\"416\" alt='vscode'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eNow click on \u003ccode\u003eRemote-Containers: Reopen Folder in Container\u003c/code\u003e option, the VS Code will reload. And voilà, you are inside the Docker Environment!!\u003c/li\u003e\n\u003cli\u003eYou can also create a \u003ca href=\"https://code.visualstudio.com/docs/editor/debugging\"\u003e\u003cstrong\u003e\u003ccode\u003edebugger\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e and put break points in source code to see if it hits any.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eI feel that with this feature(remote development), VS code has become the best free IDE ever(even comparable to IDEA or VS). BTW, thanks for reading. Cheers!!\u003c/p\u003e\n","content":"VS Code is the most popular IDE at the moment. You can use it for developing applications in almost any programming language. In addition to that, you can do remote development in Docker,VM etc. In this post, we are going to discuss about how to use Docker Environment in VS Code.\nDISCLAIMER: This feature is already well documented in official documentation. But when I started integrating Docker environment, I found it bit hard to understand. So, here I tried to describe it in a easier and organized way. Table of contents\u0026nbsp;  What does it mean by remote development in VS Code Steps for set up  First step: appropriate docker environment Second step: create .devcontainer folder Third step: configuring devcontainer.json Fourth step: installing Remote Development Extension Pack Final step: run VS Code from container   In conclusion   \nWhat does it mean by remote development in VS Code It means VS Code will be used for developing the source code inside remote environment. When we are using docker, source codes are inside the docker container. VS Code will simply allow you to access that code inside the docker container but it will be running in your local machine. You can even access the packages/references from docker file, also it will allow you to debug from docker container. How cool is that!! Following image will clear up the concept(copy pasted from documentation):\n   There are options available for either integrating one Docker environment or multiple environments using docker-compose.\nSteps for set up First step: appropriate docker environment Well, if you have a Dockerfile or a docker-compose.yml file, thats super cool. If you don\u0026rsquo;t have it, thats fine too. In that case, you can use an Docker Image to build the docker environment. FYI, if you are using Alpine Based Docker environment, then you need to use VS Code Insiders Edition.\nSecond step: create .devcontainer folder In this step, you need to create a new folder named .devcontainer inside your source directory. Inside that, create a devcontainer.json file.\nThird step: configuring devcontainer.json Based on your setup, you need to use any one of the configurations:\n1. For \u0026lsquo;Dockerfile\u0026rsquo;\nIf you have a Dockerfile, then copy and paste the following code:\n{ \u0026#34;name\u0026#34;: \u0026#34;Your Project\u0026#34;, \u0026#34;context\u0026#34;: \u0026#34;..\u0026#34;, \u0026#34;dockerFile\u0026#34;: \u0026#34;../Dockerfile\u0026#34;, // Path to docker file  // Use the next line if you want to publish any ports.  \u0026#34;appPort\u0026#34;: 3000, // If you want to use a post create command  \u0026#34;postCreateCommand\u0026#34;: \u0026#34;npm install\u0026#34;, \u0026#34;extensions\u0026#34;: [ // extensions which is going to be installed inside the docker environment  \u0026#34;ms-python.python\u0026#34;, \u0026#34;dbaeumer.vscode-eslint\u0026#34; ], \u0026#34;settings\u0026#34;: { // additional settings for VS Code configurations  // You can copy paste them from `settings.json` of your workspace  // Reference: https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations  \u0026#34;python.pythonPath\u0026#34;: \u0026#34;/usr/local/bin/python\u0026#34;, \u0026#34;python.linting.pylintEnabled\u0026#34;: true, \u0026#34;python.linting.enabled\u0026#34;: true } } 2. For \u0026lsquo;Docker Compose\u0026rsquo;(multiple docker environment)\nIf you are using docker-compose, then you can use the following code:\n{ \u0026#34;name\u0026#34;: \u0026#34;Python 3\u0026#34;, \u0026#34;context\u0026#34;: \u0026#34;..\u0026#34;, \u0026#34;dockerComposeFile\u0026#34;: [\u0026#34;../docker-compose.yml\u0026#34;], // You need to point it your `docker-compose.yml` file with proper path.  // Uncomment the next line if you want to publish any ports.  \u0026#34;appPort\u0026#34;: [3000, \u0026#34;8921:5000\u0026#34;], // Uncomment the next line to run commands after the container is created.  // \u0026#34;postCreateCommand\u0026#34;: \u0026#34;python --version\u0026#34;,  \u0026#34;service\u0026#34;: \u0026#34;your_service\u0026#34;, // You must define which service you are going to use from docker compose.  \u0026#34;workspaceFolder\u0026#34;: \u0026#34;/app\u0026#34;, // path to your source inside docker file  \u0026#34;extensions\u0026#34;: [ // extensions which is going to be installed inside the docker environment  \u0026#34;ms-python.python\u0026#34;, \u0026#34;dbaeumer.vscode-eslint\u0026#34; ], \u0026#34;settings\u0026#34;: { // additional settings for VS Code configurations  // You can copy paste them from `settings.json` of your workspace  // Reference: https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations  \u0026#34;python.pythonPath\u0026#34;: \u0026#34;/usr/local/bin/python\u0026#34;, \u0026#34;python.linting.pylintEnabled\u0026#34;: true, \u0026#34;python.linting.enabled\u0026#34;: true } } 3. Docker image\nIf you don\u0026rsquo;t use either of them, then using an Image is also fine:\n{ \u0026#34;name\u0026#34;: \u0026#34;My Project\u0026#34;, \u0026#34;image\u0026#34;: \u0026#34;mcr.microsoft.com/dotnet/core/sdk:latest\u0026#34;, \u0026#34;appPort\u0026#34;: 8090, \u0026#34;extensions\u0026#34;: [\u0026#34;ms-vscode.csharp\u0026#34;] } Fourth step: installing Remote Development Extension Pack Install Remote Development Extension Pack from VS Code Market, or use VS Code\u0026rsquo;s integrated market to install it:   \nFinal step: run VS Code from container  After installing, an icon will appear at bottom left of your VS Code:    Now, click on that, and few options will appear like this:    Now click on Remote-Containers: Reopen Folder in Container option, the VS Code will reload. And voilà, you are inside the Docker Environment!! You can also create a debugger and put break points in source code to see if it hits any.  In conclusion I feel that with this feature(remote development), VS code has become the best free IDE ever(even comparable to IDEA or VS). BTW, thanks for reading. Cheers!!\n","description":"VS Code is the most popular IDE at the moment. You can use it for developing applications in almost any programming language. In addition to that, you can do remote development in Docker,VM etc. In this post, we are going to discuss about how to use Docker Environment in VS Code."},{"date_published":"2019-06-13T23:12:26+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"June 13, 2019","id":"https://ruddra.com/django-serialize-foreignkey-m2m-property-instance-fields/","url":"https://ruddra.com/django-serialize-foreignkey-m2m-property-instance-fields/","title":"Django Serialize ForeignKey, ManyToMany, Instance, Property Method","image":"https://ruddra.com/content/images/2020/03/lights.jpg","tags":["Django","Serializer"],"content_html":"\u003cp\u003eDjango’s serialization framework provides a mechanism for “translating” Django models into other formats. Usually they are in \u003ca href=\"https://docs.djangoproject.com/en/2.2/topics/serialization/#serialization-formats-json\"\u003ejson output\u003c/a\u003e, \u003ca href=\"https://docs.djangoproject.com/en/2.2/topics/serialization/#yaml\"\u003eyaml output\u003c/a\u003e, \u003ca href=\"https://docs.djangoproject.com/en/2.2/topics/serialization/#xml\"\u003eXML output\u003c/a\u003e, \u003ca href=\"https://github.com/django/django/blob/master/django/contrib/gis/serializers/geojson.py\"\u003eGeoJSON output\u003c/a\u003e etc text based formats.\u003c/p\u003e\n\u003cp\u003eHere, we are going to supercharge these serializers to do more things, even try to render \u003ca href=\"https://docs.python.org/3/library/functions.html#property\"\u003eproperties method\u003c/a\u003e and \u003ca href=\"https://docs.python.org/3/c-api/method.html\"\u003einstance method\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis article will be useful to you if you are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eInterested to output some data in serialized formats(given above) and don\u0026rsquo;t want to integrate any third party libraries for that.\u003c/li\u003e\n\u003cli\u003eWant to Develop an API without any help of third party libraries.\u003c/li\u003e\n\u003cli\u003eUsing Django serializer and need to output extra values from property/instance methods.\u003c/li\u003e\n\u003cli\u003eNot really a big fan of third party libraries.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis article is divided into three parts, \u003ca href=\"#proper-way-the-natural-implementation\"\u003ethe first one\u003c/a\u003e is how to use serializers to show \u003cstrong\u003eManyToMany\u003c/strong\u003e and \u003cstrong\u003eForignKey\u003c/strong\u003e Fields. In \u003ca href=\"#our-way-overriding-serializer-classes\"\u003esecond part\u003c/a\u003e, we are going to show how to \u003cstrong\u003eoverride\u003c/strong\u003e the serializers to display \u003cstrong\u003eproperty and instance methods\u003c/strong\u003e. \u003ca href=\"#third-party-quicker-way\"\u003eIn third section\u003c/a\u003e, there are some small examples using \u003cstrong\u003eDRF\u003c/strong\u003e(a third party library), if you are in real hurry.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#proper-way-the-natural-implementation\"\u003eProper way: the \u003cstrong\u003enatural\u003c/strong\u003e implementation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#our-way-overriding-serializer-classes\"\u003eOur way: \u003cstrong\u003eoverriding\u003c/strong\u003e serializer classes\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#show-property-and-instance-methodfor-xml-serializer\"\u003eShow property and instance method(for \u0026lsquo;XML\u0026rsquo; serializer)\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#third-party-quicker-way\"\u003eThird party: \u003cstrong\u003equicker\u003c/strong\u003e way\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#show-foreignkey-fields\"\u003eShow ForeignKey fields\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#show-m2m-fields\"\u003eShow M2M fields\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#show-property-and-instance-methods\"\u003eShow property and instance methods\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"proper-way-the-natural-implementation\"\u003eProper way: the \u003cstrong\u003enatural\u003c/strong\u003e implementation\u003c/h2\u003e\n\u003cp\u003eFor example purpose, let\u0026rsquo;s create three models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eon_delete\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCASCADE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etags\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eManyToManyField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nd\"\u003e@property\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ea_property_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;I am a Property Method\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ean_instance_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;I am a Instance Method\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo use django\u0026rsquo;s implementation of rendering \u003ccode\u003eForeignKey\u003c/code\u003e(we will address it as \u003cstrong\u003eFK\u003c/strong\u003e) and \u003ccode\u003eManyToMany\u003c/code\u003e(we will address it as \u003cstrong\u003eM2M\u003c/strong\u003e) fields, we need to add \u003ca href=\"https://docs.djangoproject.com/en/2.2/topics/serialization/#serialization-of-natural-keys\"\u003e\u003ccode\u003enatural_key\u003c/code\u003e\u003c/a\u003e method inside models:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enatural_key\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003enatural_key\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, if we try to render \u003cstrong\u003eFK\u003c/strong\u003e and \u003cstrong\u003eM2M\u003c/strong\u003e field like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\u003cspan class=\"n\"\u003eserialized_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;json\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003euse_natural_foreign_keys\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;author\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;tags\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eindent\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserialized_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOut\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e]:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;model\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;experiment.blog\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;pk\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;fields\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s2\"\u003e\u0026#34;author\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;User\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s2\"\u003e\u0026#34;tags\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s2\"\u003e\u0026#34;Tag 1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s2\"\u003e\u0026#34;Tag 2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eFYI\u003c/strong\u003e, django serializer by default will \u003cem\u003enot\u003c/em\u003e render \u003ccode\u003e@property\u003c/code\u003e or \u003ccode\u003einstance\u003c/code\u003e methods.\u003c/p\u003e\n\u003ch2 id=\"our-way-overriding-serializer-classes\"\u003eOur way: \u003cstrong\u003eoverriding\u003c/strong\u003e serializer classes\u003c/h2\u003e\n\u003cp\u003eThis is our way by overriding the serializer class.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRender property or instance method(for \u0026lsquo;JSON\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;, \u0026lsquo;GeoJSON\u0026rsquo;, \u0026lsquo;YAML\u0026rsquo; serializer)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eTo render \u003ccode\u003e@property\u003c/code\u003e or instance methods, we have to override the Serializer classes. We are going to override the \u003ca href=\"https://github.com/django/django/blob/master/django/core/serializers/base.py#L139\"\u003e\u003ccode\u003edef end_object(self, obj):\u003c/code\u003e\u003c/a\u003e method of any serializer.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.serializers.json\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# FYI: It can be any of the following as well:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.core.serializers.pyyaml import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.core.serializers.python import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.contrib.gis.serializers.geojson import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eselected_fields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;pk\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_current\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_current\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# for model methods\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eTypeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_current\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# for property methods\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUsage of property or instance method\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a_property_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;an_instance_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eOnly render specific fields using \u003ccode\u003e__field_name\u003c/code\u003e in \u0026lsquo;ForeignKey\u0026rsquo;(For \u0026lsquo;JSON\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;, \u0026lsquo;GeoJSON\u0026rsquo;, \u0026lsquo;YAML\u0026rsquo; serializer)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIn this approach, we are going to take pass name of the fields inside \u003cstrong\u003eFK\u003c/strong\u003e which we want to display in our response as \u003ccode\u003eforignkey__field_name\u003c/code\u003e. Passing these parameters going to look like this: \u003ccode\u003efields=['fk__name1', 'fk__name2']\u003c/code\u003e etc. So, let\u0026rsquo;s override the Serializer\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.gis.serializers.geojson\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eManager\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# FYI: It can be any of the following as well:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.core.serializers.pyyaml import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.core.serializers.python import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# from django.core.serializers.json import Serializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eJSON_ALLOWED_OBJECTS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edict\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003etuple\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nb\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eselected_fields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;pk\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_current\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON_ALLOWED_OBJECTS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_current\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUsage for specific fields in ForeignKey\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eUsage will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efields\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;author__name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;text\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eOutput\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;author__name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;user1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Some Text\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;author__name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;user2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Some Text\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"show-property-and-instance-methodfor-xml-serializer\"\u003eShow property and instance method(for \u0026lsquo;XML\u0026rsquo; serializer)\u003c/h3\u003e\n\u003cp\u003eSame as JSON, Python, GeoJSON, YAML serializer, here we will override the \u003ccode\u003eend_object\u003c/code\u003e method. But in a slightly different way:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.serializers.xml_serializer\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003e_init_options\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enon_model_fields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;non_model_fields\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003estart_serialization\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_init_options\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estart_serialization\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enon_model_fields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e)()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# object method\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eTypeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# property method\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"k\"\u003econtinue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eAttributeError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eindent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003exml\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estartElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;field\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003efield\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;type\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"vm\"\u003e__class__\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003exml\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003exml\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaddQuickElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;None\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003exml\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eendElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;field\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eend_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUsage of \u0026lsquo;XML\u0026rsquo; serializer\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eserialize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003equeryset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enon_model_fields\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a_property_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;an_instance_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"third-party-quicker-way\"\u003eThird party: \u003cstrong\u003equicker\u003c/strong\u003e way\u003c/h2\u003e\n\u003cp\u003eWe will be using \u003ca href=\"https://www.django-rest-framework.org/\"\u003eDjango Rest Framework\u003c/a\u003e and their \u003ca href=\"https://www.django-rest-framework.org/api-guide/serializers/\"\u003e\u003ccode\u003eserializer\u003c/code\u003e\u003c/a\u003e in this section.\u003c/p\u003e\n\u003ch3 id=\"show-foreignkey-fields\"\u003eShow ForeignKey fields\u003c/h3\u003e\n\u003cp\u003eShow ForeignKey values using \u003ca href=\"https://www.django-rest-framework.org/api-guide/serializers/#specifying-nested-serialization\"\u003e\u003ccode\u003edepth\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__all__\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edepth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"show-m2m-fields\"\u003eShow M2M fields\u003c/h3\u003e\n\u003cp\u003eWe can define a serializer for Nested class to be shown in M2M. Like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTagSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModelSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__all__\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModelSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etags\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTagSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emany\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__all__\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edepth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"show-property-and-instance-methods\"\u003eShow property and instance methods\u003c/h3\u003e\n\u003cp\u003eWe can do that by specifying \u003ca href=\"https://www.django-rest-framework.org/api-guide/serializers/#specifying-fields-explicitly\"\u003ean extra field\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModelSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ea_property_method\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esource\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a_property_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eread_only\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ean_instance_method\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eserializers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esource\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;an_instance_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eread_only\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__all__\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats all for today, thank you for reading. You can checkout my answers on this topic on StackOverflow:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/a/56557206/2696165\"\u003ehttps://stackoverflow.com/a/56557206/2696165\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackoverflow.com/a/53352643/2696165\"\u003ehttps://stackoverflow.com/a/53352643/2696165\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf you have any question, please ask in the comments section below, Cheers!!\u003c/p\u003e\n","content":"Django’s serialization framework provides a mechanism for “translating” Django models into other formats. Usually they are in json output, yaml output, XML output, GeoJSON output etc text based formats.\nHere, we are going to supercharge these serializers to do more things, even try to render properties method and instance method.\nThis article will be useful to you if you are:\n Interested to output some data in serialized formats(given above) and don\u0026rsquo;t want to integrate any third party libraries for that. Want to Develop an API without any help of third party libraries. Using Django serializer and need to output extra values from property/instance methods. Not really a big fan of third party libraries.  This article is divided into three parts, the first one is how to use serializers to show ManyToMany and ForignKey Fields. In second part, we are going to show how to override the serializers to display property and instance methods. In third section, there are some small examples using DRF(a third party library), if you are in real hurry.Table of contents\u0026nbsp;  Proper way: the natural implementation Our way: overriding serializer classes  Show property and instance method(for \u0026lsquo;XML\u0026rsquo; serializer)   Third party: quicker way  Show ForeignKey fields Show M2M fields Show property and instance methods     \nProper way: the natural implementation For example purpose, let\u0026rsquo;s create three models:\nfrom django.db import models class User(models.Model): name = models.CharField(max_length=255) class Tag(models.Model): name = models.CharField(max_length=255) class Blog(models.Model): author = models.ForeignKey( User, on_delete=models.CASCADE ) tags = models.ManyToManyField(Tag) text = models.TextField() @property def a_property_method(self): return \u0026#34;I am a Property Method\u0026#34; def an_instance_method(self): return \u0026#34;I am a Instance Method\u0026#34; To use django\u0026rsquo;s implementation of rendering ForeignKey(we will address it as FK) and ManyToMany(we will address it as M2M) fields, we need to add natural_key method inside models:\nclass User(models.Model): name = models.CharField(max_length=255) def natural_key(self): return (self.name) class Tag(models.Model): name = models.CharField(max_length=255) def natural_key(self): return (self.name) Then, if we try to render FK and M2M field like this:\nIn [1]:from django.core import serializers In [2]:serialized_data = serializers.serialize(\u0026#39;json\u0026#39;, Blog.objects.all(), use_natural_foreign_keys=True, fields=[\u0026#39;author\u0026#39;, \u0026#39;tags\u0026#39;], indent=4 ) In [3]:print(serialized_data) Out [4]: [ { \u0026#34;model\u0026#34;: \u0026#34;experiment.blog\u0026#34;, \u0026#34;pk\u0026#34;: 1, \u0026#34;fields\u0026#34;: { \u0026#34;author\u0026#34;: \u0026#34;User\u0026#34;, \u0026#34;tags\u0026#34;: [ \u0026#34;Tag 1\u0026#34;, \u0026#34;Tag 2\u0026#34; ] } } ] FYI, django serializer by default will not render @property or instance methods.\nOur way: overriding serializer classes This is our way by overriding the serializer class.\nRender property or instance method(for \u0026lsquo;JSON\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;, \u0026lsquo;GeoJSON\u0026rsquo;, \u0026lsquo;YAML\u0026rsquo; serializer)\nTo render @property or instance methods, we have to override the Serializer classes. We are going to override the def end_object(self, obj): method of any serializer.\nfrom django.core.serializers.json import Serializer from django.db.models import Manager # FYI: It can be any of the following as well: # from django.core.serializers.pyyaml import Serializer # from django.core.serializers.python import Serializer # from django.contrib.gis.serializers.geojson import Serializer class CustomSerializer(Serializer): def end_object(self, obj): for field in self.selected_fields: if field == \u0026#39;pk\u0026#39;: continue elif field in self._current.keys(): continue else: try: self._current[field] = getattr(obj, field)() # for model methods continue except TypeError: pass try: self._current[field] = getattr(obj, field) # for property methods continue except AttributeError: pass super(CustomSerializer, self).end_object(obj) Usage of property or instance method\nserializers = CustomSerializer() queryset = Blog.objects.all() data = serializers.serialize(queryset, fields=(\u0026#39;a_property_method\u0026#39;, \u0026#39;an_instance_method\u0026#39;)) Only render specific fields using __field_name in \u0026lsquo;ForeignKey\u0026rsquo;(For \u0026lsquo;JSON\u0026rsquo;, \u0026lsquo;Python\u0026rsquo;, \u0026lsquo;GeoJSON\u0026rsquo;, \u0026lsquo;YAML\u0026rsquo; serializer)\nIn this approach, we are going to take pass name of the fields inside FK which we want to display in our response as forignkey__field_name. Passing these parameters going to look like this: fields=['fk__name1', 'fk__name2'] etc. So, let\u0026rsquo;s override the Serializer\nfrom django.contrib.gis.serializers.geojson import Serializer from django.db.models import Manager # FYI: It can be any of the following as well: # from django.core.serializers.pyyaml import Serializer # from django.core.serializers.python import Serializer # from django.core.serializers.json import Serializer JSON_ALLOWED_OBJECTS = (dict,list,tuple,str,int,bool) class CustomSerializer(Serializer): def end_object(self, obj): for field in self.selected_fields: if field == \u0026#39;pk\u0026#39;: continue elif field in self._current.keys(): continue else: try: if \u0026#39;__\u0026#39; in field: fields = field.split(\u0026#39;__\u0026#39;) value = obj for f in fields: value = getattr(value, f) if value != obj and isinstance(value, JSON_ALLOWED_OBJECTS) or value == None: self._current[field] = value except AttributeError: pass super(CustomSerializer, self).end_object(obj) Usage for specific fields in ForeignKey\nUsage will look like this:\nserializers = CustomSerializer() queryset = Blog.objects.all() data = serializers.serialize(queryset, fields=(\u0026#39;author__name\u0026#39;, \u0026#39;text\u0026#39;)) Output\n[ { \u0026#34;author__name\u0026#34;: \u0026#34;user1\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Some Text\u0026#34; }, { \u0026#34;author__name\u0026#34;: \u0026#34;user2\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Some Text\u0026#34; } ] Show property and instance method(for \u0026lsquo;XML\u0026rsquo; serializer) Same as JSON, Python, GeoJSON, YAML serializer, here we will override the end_object method. But in a slightly different way:\nfrom django.core.serializers.xml_serializer import Serializer class CustomSerializer(Serializer): def _init_options(self): self.non_model_fields = self.options.get(\u0026#39;non_model_fields\u0026#39;, []) def start_serialization(self): self._init_options() super(CustomSerializer, self).start_serialization() def end_object(self, obj): for field in self.non_model_fields: value = None try: value = getattr(obj, field)() # object method continue except TypeError: pass try: value = getattr(obj, field) # property method continue except AttributeError: pass self.indent(2) self.xml.startElement(\u0026#39;field\u0026#39;, { \u0026#39;name\u0026#39;: field, \u0026#39;type\u0026#39;: value.__class__.__name__, }) if value: self.xml.characters(str(value)) else: self.xml.addQuickElement(\u0026#34;None\u0026#34;) self.xml.endElement(\u0026#34;field\u0026#34;) return super(CustomSerializer, self).end_object(obj) Usage of \u0026lsquo;XML\u0026rsquo; serializer\nserializers = CustomSerializer() queryset = Blog.objects.all() data = serializers.serialize(queryset, non_model_fields=(\u0026#39;a_property_method\u0026#39;, \u0026#39;an_instance_method\u0026#39;)) Third party: quicker way We will be using Django Rest Framework and their serializer in this section.\nShow ForeignKey fields Show ForeignKey values using depth.\nclass BlogSerializer(models.Model): class Meta: model = Blog fields = \u0026#39;__all__\u0026#39; depth = 1 Show M2M fields We can define a serializer for Nested class to be shown in M2M. Like this:\nfrom rest_framework import serializers class TagSerializer(serializers.ModelSerializer): class Meta: model = Tag fields = \u0026#39;__all__\u0026#39; class BlogSerializer(serializers.ModelSerializer): tags = TagSerializer(many=True) class Meta: model = Blog fields = \u0026#39;__all__\u0026#39; depth = 1 Show property and instance methods We can do that by specifying an extra field:\nclass BlogSerializer(serializers.ModelSerializer): a_property_method = serializers.CharField(source=\u0026#39;a_property_method\u0026#39;, read_only=True) an_instance_method = serializers.CharField(source=\u0026#39;an_instance_method\u0026#39;, read_only=True) class Meta: model = Blog fields = \u0026#39;__all__\u0026#39; Thats all for today, thank you for reading. You can checkout my answers on this topic on StackOverflow:\n https://stackoverflow.com/a/56557206/2696165 https://stackoverflow.com/a/53352643/2696165  If you have any question, please ask in the comments section below, Cheers!!\n","description":"Serializing all kinds of relations (ForeignKey, M2M, OneToOne), and methods in Django."},{"date_published":"2019-04-24T20:36:44+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 24, 2019","id":"https://ruddra.com/deploy-django-subpath-openshift/","url":"https://ruddra.com/deploy-django-subpath-openshift/","title":"Deploy Django App in Sub Directory Using OpenShift","image":"https://ruddra.com/content/images/2020/05/subway.jpg","tags":["OpenShift","Django","CI/CD","DevOps"],"content_html":"\u003cp\u003eWhen you are using OpenShift, you will be using \u003ccode\u003eroutes\u003c/code\u003e to expose a route from a service. Let\u0026rsquo;s say you want to expose a path in \u003cem\u003eexample.com/dummy\u003c/em\u003e. When you do that for a django application(without any reverse proxy server), it usually becomes a problem, because the sub directory does not work well with Django\u0026rsquo;s urls. You will probably face error \u003cem\u003e404 page not found\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eIf you are not using NGINX/Apache or any other reverse proxy server to serve the django application, you will not be able to set \u003ccode\u003eX-SCRIPT-NAME\u003c/code\u003e. To me, it does not make sense to use reverse proxy in pods when OpenShift provides routes(or ingress in kubernetes) using NGINX/HA-Proxy(depending on your setup).\u003c/p\u003e\n\u003cp\u003eIn this situation, I have used the following solution:\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#disable-namespace-ownership-check-in-router\"\u003e\u003ccode\u003eDisable Namespace Ownership Check\u003c/code\u003e in Router\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#set-force_script_name\"\u003eSet \u003ccode\u003eFORCE_SCRIPT_NAME\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update-wsgipy\"\u003eUpdate \u003ccode\u003ewsgi.py\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#big-thanks-to\"\u003eBig thanks to\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"disable-namespace-ownership-check-in-router\"\u003e\u003ccode\u003eDisable Namespace Ownership Check\u003c/code\u003e in Router\u003c/h2\u003e\n\u003cp\u003eYou need to patch the \u003ca href=\"https://docs.openshift.com/container-platform/3.9/install_config/router/index.html\"\u003e\u003cstrong\u003e\u003ccode\u003erouter\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e in OpenShift before starting any step(from OpenShift 3.9). By disabling Ownership check, you can allow a service to use a \u003ccode\u003exyz.com/abc\u003c/code\u003e even if there is another service taking \u003ccode\u003exyz.com\u003c/code\u003e. You can do it like this(from \u003ca href=\"https://docs.openshift.com/container-platform/3.9/architecture/networking/routes.html#disable-namespace-ownership-check\"\u003e\u003cstrong\u003e\u003ccode\u003edocumentation\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc adm router ... --disable-namespace-ownership-check\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc env dc/router \u003cspan class=\"nv\"\u003eROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eFYI:\u003c/strong\u003e this also works in OKD as well.\u003c/p\u003e\n\u003ch2 id=\"set-force_script_name\"\u003eSet \u003ccode\u003eFORCE_SCRIPT_NAME\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eI have set \u003ca href=\"https://docs.djangoproject.com/en/stable/ref/settings/#force-script-name\"\u003eFORCE_SCRIPT_NAME\u003c/a\u003e in \u003ccode\u003esettings.py\u003c/code\u003e. Usually I fetched the value from environment varibles, which I have set in the Deployment Config:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eFORCE_SCRIPT_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;DJANGO_FORCE_SCRIPT_NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/subdirectory\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# without trailing slash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUsing \u003ccode\u003eFORCE_SCRIPT_NAME\u003c/code\u003e will configure django\u0026rsquo;s url in path \u003ccode\u003e/subdirectory\u003c/code\u003e. But it is not sufficient to serve the django application in sub path, as \u003ccode\u003eSCRIPT_NAME\u003c/code\u003e in requests are not updated, also it will show some erratic behaviour such as showing double entry of \u003ccode\u003e/subpath\u003c/code\u003e in url, \u003cem\u003e404 Page not found\u003c/em\u003e issues etc. To fix this, lets go to the second step:\u003c/p\u003e\n\u003ch2 id=\"update-wsgipy\"\u003eUpdate \u003ccode\u003ewsgi.py\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003eLets update the \u003ccode\u003ewsgi.py\u003c/code\u003e file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.wsgi\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_wsgi_application\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;dummy.settings\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003e_application\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_wsgi_application\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Here is the important part\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estart_response\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003escript_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;FORCE_SCRIPT_NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003escript_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;SCRIPT_NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003escript_name\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epath_info\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;PATH_INFO\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epath_info\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estartswith\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escript_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;PATH_INFO\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epath_info\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escript_name\u003c/span\u003e\u003cspan class=\"p\"\u003e):]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003escheme\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;HTTP_X_SCHEME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003escheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;wsgi.url_scheme\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003escheme\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_application\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estart_response\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn above code, we are getting the value of \u003ccode\u003escript_name\u003c/code\u003e from \u003ccode\u003eFORCE_SCRIPT_NAME\u003c/code\u003e, then putting that value in wsgi \u003ccode\u003eenviron\u003c/code\u003e(environment variable).\u003c/p\u003e\n\u003ch2 id=\"big-thanks-to\"\u003eBig thanks to\u003c/h2\u003e\n\u003cp\u003eI got the implementation idea from \u003ca href=\"https://stackoverflow.com/a/47945170/2696165\"\u003ethis Stack Overflow answer\u003c/a\u003e. Big thanks to \u003cem\u003e@whp\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThat is it for today, hope it helps. If you have a better approach to resolve this problem please make a comment in comment section below.\u003c/p\u003e\n","content":"When you are using OpenShift, you will be using routes to expose a route from a service. Let\u0026rsquo;s say you want to expose a path in example.com/dummy. When you do that for a django application(without any reverse proxy server), it usually becomes a problem, because the sub directory does not work well with Django\u0026rsquo;s urls. You will probably face error 404 page not found.\nIf you are not using NGINX/Apache or any other reverse proxy server to serve the django application, you will not be able to set X-SCRIPT-NAME. To me, it does not make sense to use reverse proxy in pods when OpenShift provides routes(or ingress in kubernetes) using NGINX/HA-Proxy(depending on your setup).\nIn this situation, I have used the following solution:Table of contents\u0026nbsp;  Disable Namespace Ownership Check in Router Set FORCE_SCRIPT_NAME Update wsgi.py Big thanks to   \nDisable Namespace Ownership Check in Router You need to patch the router in OpenShift before starting any step(from OpenShift 3.9). By disabling Ownership check, you can allow a service to use a xyz.com/abc even if there is another service taking xyz.com. You can do it like this(from documentation):\noc adm router ... --disable-namespace-ownership-check=true oc env dc/router ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK=true FYI: this also works in OKD as well.\nSet FORCE_SCRIPT_NAME I have set FORCE_SCRIPT_NAME in settings.py. Usually I fetched the value from environment varibles, which I have set in the Deployment Config:\nFORCE_SCRIPT_NAME = os.environ.get(\u0026#39;DJANGO_FORCE_SCRIPT_NAME\u0026#39;, \u0026#39;/subdirectory\u0026#39;) # without trailing slash Using FORCE_SCRIPT_NAME will configure django\u0026rsquo;s url in path /subdirectory. But it is not sufficient to serve the django application in sub path, as SCRIPT_NAME in requests are not updated, also it will show some erratic behaviour such as showing double entry of /subpath in url, 404 Page not found issues etc. To fix this, lets go to the second step:\nUpdate wsgi.py Lets update the wsgi.py file like this:\nimport os from django.core.wsgi import get_wsgi_application from django.conf import settings os.environ.setdefault(\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;, \u0026#39;dummy.settings\u0026#39;) _application = get_wsgi_application() # Here is the important part def application(environ, start_response): script_name = getattr(settings, \u0026#39;FORCE_SCRIPT_NAME\u0026#39;, None) if script_name: environ[\u0026#39;SCRIPT_NAME\u0026#39;] = script_name path_info = environ[\u0026#39;PATH_INFO\u0026#39;] if path_info.startswith(script_name): environ[\u0026#39;PATH_INFO\u0026#39;] = path_info[len(script_name):] scheme = environ.get(\u0026#39;HTTP_X_SCHEME\u0026#39;, \u0026#39;\u0026#39;) if scheme: environ[\u0026#39;wsgi.url_scheme\u0026#39;] = scheme return _application(environ, start_response) In above code, we are getting the value of script_name from FORCE_SCRIPT_NAME, then putting that value in wsgi environ(environment variable).\nBig thanks to I got the implementation idea from this Stack Overflow answer. Big thanks to @whp.\nThat is it for today, hope it helps. If you have a better approach to resolve this problem please make a comment in comment section below.\n","description":"Deploy your Django application in sub directory ie at path '/your-path' using OpenShift"},{"date_published":"2019-04-19T23:59:43+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 19, 2019","id":"https://ruddra.com/install-mysqlclient-macos/","url":"https://ruddra.com/install-mysqlclient-macos/","title":"Install MySQL and MySQLClient(Python) in MacOS","image":"https://ruddra.com/content/images/2019/04/mysql-headache.jpg","tags":["Python","MySQL","MacOS"],"content_html":"\u003cp\u003eConnecting to MySQL from Python in MacOS is a very problematic and painful process. In this post, we are going to see how to install MySQL and connect a Python application to it using \u003cstrong\u003emysqlclient\u003c/strong\u003e.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#step-one-install-homebrew\"\u003eStep one: install Homebrew\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-two-install-mysql\"\u003eStep two: install MySQL\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-three-install-mysql-connector-c\"\u003eStep three: install MySQL-Connector-C\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-four-install-xcode-select\"\u003eStep four: install XCode-Select\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-five-install-openssl\"\u003eStep five: install OpenSSL\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-six-unlink-mysql-and-link-mysql-connector-c\"\u003eStep six: unlink MySQL and link MySQL-Connector-C\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-seven-install-mysqlclient\"\u003eStep seven: install mysqlclient\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-eight-link-mysql-back-again\"\u003eStep eight: link MySQL back again\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-nine-add-mysqlclient-in-virtual-envoptional\"\u003eStep nine: add mysqlclient in virtual env(optional)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"step-one-install-homebrew\"\u003eStep one: install Homebrew\u003c/h2\u003e\n\u003cp\u003eYou need to install \u003ca href=\"https://brew.sh/\"\u003eHomebrew\u003c/a\u003e in you local machine. You can do it by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e/usr/bin/ruby -e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecurl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install\u003cspan class=\"k\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-two-install-mysql\"\u003eStep two: install MySQL\u003c/h2\u003e\n\u003cp\u003eUsing \u003cstrong\u003eHomebrew\u003c/strong\u003e you can install \u003cstrong\u003emysql\u003c/strong\u003e simply by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install mysql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen setup the credentials in MySQL server using the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emysql_secure_installation\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFinally if you want to start at login and as a background service, run this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew services start mysql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eElse\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emysql.server start\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-three-install-mysql-connector-c\"\u003eStep three: install MySQL-Connector-C\u003c/h2\u003e\n\u003cp\u003eFor connecting any other application to MySQL, you need to install a connector. You can do it like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install mysql-connector-c\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-four-install-xcode-select\"\u003eStep four: install XCode-Select\u003c/h2\u003e\n\u003cp\u003eYou can do this by:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003excode-select --install\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-five-install-openssl\"\u003eStep five: install OpenSSL\u003c/h2\u003e\n\u003cp\u003ePlease run the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install openssl\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen add its path to environment using following line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eLIBRARY_PATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$LIBRARY_PATH\u003c/span\u003e:/usr/local/opt/openssl/lib/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-six-unlink-mysql-and-link-mysql-connector-c\"\u003eStep six: unlink MySQL and link MySQL-Connector-C\u003c/h2\u003e\n\u003cp\u003eYou need to unlink \u003cstrong\u003emysql\u003c/strong\u003e and link \u003cstrong\u003emysql-connector-c\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew unlink mysql\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew link --overwrite mysql-connector-c --force\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-seven-install-mysqlclient\"\u003eStep seven: install mysqlclient\u003c/h2\u003e\n\u003cp\u003eYou should be able to use \u003ccode\u003epip install mysqlclient\u003c/code\u003e without any errors.\u003c/p\u003e\n\u003ch2 id=\"step-eight-link-mysql-back-again\"\u003eStep eight: link MySQL back again\u003c/h2\u003e\n\u003cp\u003eNow, you need to do the opposite of \u003ca href=\"#step-six-unlink-mysql-and-link-mysql-connector-c\"\u003e\u003cstrong\u003eStep six\u003c/strong\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew unlink mysql-connector-c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew link --overwrite mysql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHopefully now \u003ccode\u003emysqlclient\u003c/code\u003e should work fine and will have no problem connecting your application from mysql to python.\u003c/p\u003e\n\u003ch2 id=\"step-nine-add-mysqlclient-in-virtual-envoptional\"\u003eStep nine: add mysqlclient in virtual env(optional)\u003c/h2\u003e\n\u003cp\u003eif you have mysqlclient installed in the system, then you can use \u003ca href=\"https://docs.python.org/3/library/venv.html\"\u003e\u003ccode\u003e--system-site-packages\u003c/code\u003e\u003c/a\u003e when creating virtual environment:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython3 -m venv venv_name --system-site-packages\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003evirtualenv venv_name --system-site-packages\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut, if you do not want to include all the system packages, and you still face error installing \u003ccode\u003emysqlclient\u003c/code\u003e in virtual environment, then try following steps:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e venv/bin/activate\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew unlink mysql\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew link --overwrite mysql-connector-c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install mysqlclient\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew unlink mysql-connector-c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew link --overwrite mysql\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIn this article, we have seen installing MySQL from Homebrew. I never used MySQL installed from Oracle website, so don\u0026rsquo;t know how to fix it. Better if you uninstall that and install MySQL from scratch using Homebrew.\u003c/p\u003e\n","content":"Connecting to MySQL from Python in MacOS is a very problematic and painful process. In this post, we are going to see how to install MySQL and connect a Python application to it using mysqlclient.Table of contents\u0026nbsp;  Step one: install Homebrew Step two: install MySQL Step three: install MySQL-Connector-C Step four: install XCode-Select Step five: install OpenSSL Step six: unlink MySQL and link MySQL-Connector-C Step seven: install mysqlclient Step eight: link MySQL back again Step nine: add mysqlclient in virtual env(optional) In conclusion   \nStep one: install Homebrew You need to install Homebrew in you local machine. You can do it by:\n/usr/bin/ruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026#34; Step two: install MySQL Using Homebrew you can install mysql simply by:\nbrew install mysql Then setup the credentials in MySQL server using the following command:\nmysql_secure_installation Finally if you want to start at login and as a background service, run this:\nbrew services start mysql Else\nmysql.server start Step three: install MySQL-Connector-C For connecting any other application to MySQL, you need to install a connector. You can do it like this:\nbrew install mysql-connector-c Step four: install XCode-Select You can do this by:\nxcode-select --install Step five: install OpenSSL Please run the following command:\nbrew install openssl Then add its path to environment using following line:\nexport LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/ Step six: unlink MySQL and link MySQL-Connector-C You need to unlink mysql and link mysql-connector-c:\nbrew unlink mysql brew link --overwrite mysql-connector-c --force Step seven: install mysqlclient You should be able to use pip install mysqlclient without any errors.\nStep eight: link MySQL back again Now, you need to do the opposite of Step six:\nbrew unlink mysql-connector-c brew link --overwrite mysql Hopefully now mysqlclient should work fine and will have no problem connecting your application from mysql to python.\nStep nine: add mysqlclient in virtual env(optional) if you have mysqlclient installed in the system, then you can use --system-site-packages when creating virtual environment:\npython3 -m venv venv_name --system-site-packages Or\nvirtualenv venv_name --system-site-packages But, if you do not want to include all the system packages, and you still face error installing mysqlclient in virtual environment, then try following steps:\nsource venv/bin/activate brew unlink mysql brew link --overwrite mysql-connector-c pip install mysqlclient brew unlink mysql-connector-c brew link --overwrite mysql In conclusion In this article, we have seen installing MySQL from Homebrew. I never used MySQL installed from Oracle website, so don\u0026rsquo;t know how to fix it. Better if you uninstall that and install MySQL from scratch using Homebrew.\n","description":"A comprehensive installation guide for MySQL and MySQLClient(Python) in MacOS which actually works!!"},{"date_published":"2019-04-12T01:06:22+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 12, 2019","id":"https://ruddra.com/python-proxy-object/","url":"https://ruddra.com/python-proxy-object/","title":"Create Proxy Object in Python","image":"https://ruddra.com/content/images/2020/05/object.jpg","tags":["Python","OOP","Proxy Pattern"],"content_html":"\u003cp\u003eLets say you have been using a class named \u003cstrong\u003eClassA\u003c/strong\u003e, objects created from that class has been used in many places. Now you have a requirement that you need to make a simillar class \u003cstrong\u003eClassB\u003c/strong\u003e, which has almost simillar functionality. Objects of \u003cstrong\u003eClassA\u003c/strong\u003e and \u003cstrong\u003eClassB\u003c/strong\u003e will have simillar method signatures, and could be swapable. Or in many places, instead of \u003cstrong\u003eClassA\u003c/strong\u003e you need to use \u003cstrong\u003eClassB\u003c/strong\u003e. So how can you do that? Answer is, make a proxy class.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#purpose-of-proxy-object\"\u003ePurpose of proxy object\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#implementation\"\u003eImplementation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#explanation\"\u003eExplanation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#how-it-helps\"\u003eHow it helps\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#thanks\"\u003eThanks\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"purpose-of-proxy-object\"\u003ePurpose of proxy object\u003c/h2\u003e\n\u003cp\u003eThe Proxy class instance will be acting as instance of either class \u003cstrong\u003eClassA\u003c/strong\u003e or \u003cstrong\u003eClassB\u003c/strong\u003e depending on certain conditions. You can put that logic inside Proxy Class.\u003c/p\u003e\n\u003ch2 id=\"implementation\"\u003eImplementation\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epath.to.a\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eClassA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epath.to.b\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eClassB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProxyClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edo_some_condition_checks\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# do conditon checks\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Or False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003econdition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edo_some_condition_checks\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__setattr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eClassA\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003econdition\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"n\"\u003eClassB\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# proxying (special cases)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__delattr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003edelattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__setattr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003e__nonzero__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003ebool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__str__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__repr__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003erepr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__hash__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__getattribute__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"explanation\"\u003eExplanation\u003c/h2\u003e\n\u003cp\u003eHere we will be setting an attribute \u003ccode\u003e_obj\u003c/code\u003e inside \u003ccode\u003eProxy\u003c/code\u003e class which will be either an instance of ClassA or ClassB. Then we have provided overrides for built-in functions inside an object, which will get attributes from \u003ccode\u003e_obj\u003c/code\u003e instead of the \u003ccode\u003eProxy\u003c/code\u003e object itself.\u003c/p\u003e\n\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epath.to.proxy\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eProxyClass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003einstance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProxyClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_bar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"how-it-helps\"\u003eHow it helps\u003c/h2\u003e\n\u003cp\u003eLets say you have usage of \u003cstrong\u003eClassA\u003c/strong\u003e in many places of the code, where you might need to use \u003cstrong\u003eClassB\u003c/strong\u003e when certain conditions meet. There you can simply use \u003cstrong\u003eProxyClass\u003c/strong\u003e\u0026rsquo;s object so that you don\u0026rsquo;t need to define \u003ccode\u003eif/else\u003c/code\u003e conditons everywhere. It will make code cleaner, also if you need to change some conditions, you can change it in \u003cstrong\u003eProxyClass\u003c/strong\u003e, then the logic will be reflected everywhere. You can even make less change, with naming the proxy class as \u003cstrong\u003eClassA\u003c/strong\u003e, then you don\u0026rsquo;t have to change import references everywhere.\u003c/p\u003e\n\u003ch2 id=\"thanks\"\u003eThanks\u003c/h2\u003e\n\u003cp\u003eI got help from this \u003ca href=\"http://code.activestate.com/recipes/496741-object-proxying/\"\u003e\u003cstrong\u003e\u003ccode\u003elink\u003c/code\u003e\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n","content":"Lets say you have been using a class named ClassA, objects created from that class has been used in many places. Now you have a requirement that you need to make a simillar class ClassB, which has almost simillar functionality. Objects of ClassA and ClassB will have simillar method signatures, and could be swapable. Or in many places, instead of ClassA you need to use ClassB. So how can you do that? Answer is, make a proxy class.Table of contents\u0026nbsp;  Purpose of proxy object Implementation Explanation Usage How it helps Thanks   \nPurpose of proxy object The Proxy class instance will be acting as instance of either class ClassA or ClassB depending on certain conditions. You can put that logic inside Proxy Class.\nImplementation from path.to.a import ClassA from path.to.b import ClassB class ProxyClass(object): def do_some_condition_checks(self, *args, **kwargs): # do conditon checks return True # Or False def __init__(self, *args, **kwargs): condition = self.do_some_condition_checks(*args, **kwargs) object.__setattr__( self, \u0026#34;_obj\u0026#34;, ClassA(*args, **kwargs) if condition else ClassB(*args, **kwargs) ) # # proxying (special cases) # def __getattribute__(self, name): return getattr(object.__getattribute__(self, \u0026#34;_obj\u0026#34;), name) def __delattr__(self, name): delattr(object.__getattribute__(self, \u0026#34;_obj\u0026#34;), name) def __setattr__(self, name, value): setattr(object.__getattribute__(self, \u0026#34;_obj\u0026#34;), name, value) def __nonzero__(self): return bool(object.__getattribute__(self, \u0026#34;_obj\u0026#34;)) def __str__(self): return str(object.__getattribute__(self, \u0026#34;_obj\u0026#34;)) def __repr__(self): return repr(object.__getattribute__(self, \u0026#34;_obj\u0026#34;)) def __hash__(self): return hash(object.__getattribute__(self, \u0026#34;_obj\u0026#34;)) Explanation Here we will be setting an attribute _obj inside Proxy class which will be either an instance of ClassA or ClassB. Then we have provided overrides for built-in functions inside an object, which will get attributes from _obj instead of the Proxy object itself.\nUsage from path.to.proxy import ProxyClass instance = ProxyClass(foo_bar, foo=bar) How it helps Lets say you have usage of ClassA in many places of the code, where you might need to use ClassB when certain conditions meet. There you can simply use ProxyClass\u0026rsquo;s object so that you don\u0026rsquo;t need to define if/else conditons everywhere. It will make code cleaner, also if you need to change some conditions, you can change it in ProxyClass, then the logic will be reflected everywhere. You can even make less change, with naming the proxy class as ClassA, then you don\u0026rsquo;t have to change import references everywhere.\nThanks I got help from this link.\n","description":"Lets say you have been using a class named ClassA, objects created from that class has been used in many places. Now you have a requirement that you need to make a simillar class ClassB, which has almost simillar functionality. Objects of ClassA and ClassB will have simillar method signatures, and could be swapable."},{"date_published":"2019-04-06T01:49:10+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"April 6, 2019","id":"https://ruddra.com/aws-boto3-useful-functions/","url":"https://ruddra.com/aws-boto3-useful-functions/","title":"Do More in S3 Using Django Storage and Boto3","image":"https://ruddra.com/content/images/2020/05/dolphin.jpg","tags":["Django","S3","AWS","DevOps"],"content_html":"\u003cp\u003eToday, I am going to write about few useful snippets/functionalities which I have used for Amazon S3 or any S3 compatible storage using \u003ca href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html\"\u003eBoto3\u003c/a\u003e and \u003ca href=\"https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html\"\u003eDjango Storage\u003c/a\u003e. FYI, this post focuses on using S3 with Django.\u003c/p\u003e\n\u003cp\u003eSo without further ado, let us begin. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-s3\"\u003eConfiguring S3\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#using-s3-which-it-does-not-belong-to-aws\"\u003eUsing S3 which it does not belong to AWS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#serve-s3-in-different-domainthrough-cloudfront-or-varnish\"\u003eServe S3 in different domain(through cloudFront or varnish)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-new-bucket\"\u003eCreate new bucket\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#see-all-buckets\"\u003eSee all buckets\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#change-access-control-to-a-bucket\"\u003eChange access control to a bucket\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#delete-objects-from-a-bucketalso-bucket-itself\"\u003eDelete objects from a bucket(also bucket itself)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#use-different-folders-when-storing-media-and-static-contents\"\u003eUse different folders when storing media and static contents\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#make-collect-static-faster\"\u003eMake \u0026lsquo;collect static\u0026rsquo; faster\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#check-acl-status\"\u003eCheck ACL status\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"configuring-s3\"\u003eConfiguring S3\u003c/h2\u003e\n\u003cp\u003eWhen using django storage, you don\u0026rsquo;t need to put configurations like \u003ccode\u003e~/.aws/credentials\u003c/code\u003e which is required in boto3. You can define those in settings in django settings, like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# settings.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_ACCESS_KEY_ID\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;XXXX\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_SECRET_ACCESS_KEY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;XXXX\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_STORAGE_BUCKET_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;your-bucket\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"using-s3-which-it-does-not-belong-to-aws\"\u003eUsing S3 which it does not belong to AWS\u003c/h2\u003e\n\u003cp\u003eIf you want to use S3 provided by any company other than AWS, then configure the URL End Point in \u003ccode\u003esettings.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_S3_ENDPOINT_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;your-bucket-proivder.domain\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"serve-s3-in-different-domainthrough-cloudfront-or-varnish\"\u003eServe S3 in different domain(through cloudFront or varnish)\u003c/h2\u003e\n\u003cp\u003eLets say, you want to serve S3 contents in \u003ccode\u003ecdn.abc.com/static/...\u003c/code\u003e(maybe through cloudfront or varnish), then put the following configuration in \u003ccode\u003esettings.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_S3_CUSTOM_DOMAIN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;cdn.abc.com\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-new-bucket\"\u003eCreate new bucket\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/s3-example-creating-buckets.html#create-an-amazon-s3-bucket\"\u003eCreating buckets\u003c/a\u003e is fairly easy in boto3. Here I am going to share how you can do that using Django Storage:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eboto3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eboto3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSession\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresource\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;s3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eaws_access_key_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_ACCESS_KEY_ID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eaws_secret_access_key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_SECRET_ACCESS_KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eendpoint_url\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_S3_ENDPOINT_URL\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate_bucket\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBucket\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;your-bucket\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"see-all-buckets\"\u003eSee all buckets\u003c/h2\u003e\n\u003cp\u003eUse the following command to see all buckets:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eboto3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eboto3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;s3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eaws_access_key_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_ACCESS_KEY_ID\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eaws_secret_access_key\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_SECRET_ACCESS_KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eendpoint_url\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAWS_S3_ENDPOINT_URL\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuckets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# to see items inside buckets\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"change-access-control-to-a-bucket\"\u003eChange access control to a bucket\u003c/h2\u003e\n\u003cp\u003eYou can change a bucket\u0026rsquo;s access control like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003es3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eboto3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;s3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBucket\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;my-bucket\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAcl\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eACL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;public-read\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Set all Bucket Policy\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuckets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAcl\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eACL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;public-read\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"delete-objects-from-a-bucketalso-bucket-itself\"\u003eDelete objects from a bucket(also bucket itself)\u003c/h2\u003e\n\u003cp\u003eYou can use the following code to remove a bucket:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBucket\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;my-bucket\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Or do it like this\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# for obj in bucket.objects.all():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#    obj.delete()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# If you also want to completely remove the empty bucket itself:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Or delete in all buckets\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003es3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuckets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebucket\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"use-different-folders-when-storing-media-and-static-contents\"\u003eUse different folders when storing media and static contents\u003c/h2\u003e\n\u003cp\u003eI got this from \u003ca href=\"https://github.com/pydanny/cookiecutter-django\"\u003edjango-cookiecutter\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFor this purpose, we need to create two new storage classes, subclassing from \u003ccode\u003eS3Boto3Storage\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# in somefile.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003estorages.backends.s3boto3\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eS3Boto3Storage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStaticRootS3Boto3Storage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eS3Boto3Storage\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003elocation\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;static\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMediaRootS3Boto3Storage\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eS3Boto3Storage\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003elocation\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;media\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003efile_overwrite\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen import them in \u003ccode\u003esettings.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eSTATICFILES_STORAGE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;path.to.somefile.StaticRootS3Boto3Storage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDEFAULT_FILE_STORAGE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;path.to.somefile.MediaRootS3Boto3Storage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"make-collect-static-faster\"\u003eMake \u0026lsquo;collect static\u0026rsquo; faster\u003c/h2\u003e\n\u003cp\u003eDjango\u0026rsquo;s collect static can be very slow when you will use S3 as storage. For that, you can use \u003ca href=\"https://github.com/antonagestam/collectfast\"\u003e\u003ccode\u003eCollectfast\u003c/code\u003e\u003c/a\u003e to make this faster. Install it using \u003ccode\u003epip install Collectfast\u003c/code\u003e. Then update the \u003ccode\u003esettings.py\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAWS_PRELOAD_METADATA\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# …\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;collectfast\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"check-acl-status\"\u003eCheck ACL status\u003c/h2\u003e\n\u003cp\u003eYou can do it like this:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003es3.get_bucket_acl(Bucket=\u0026#39;bucket-name\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThats all for now. Will update the post with more functionalities or snippets whenever I find one. Also, please suggest more snippets in the comment section below. Thanks for reading. Cheers!!\u003c/p\u003e\n","content":"Today, I am going to write about few useful snippets/functionalities which I have used for Amazon S3 or any S3 compatible storage using Boto3 and Django Storage. FYI, this post focuses on using S3 with Django.\nSo without further ado, let us begin. Table of contents\u0026nbsp;  Configuring S3 Using S3 which it does not belong to AWS Serve S3 in different domain(through cloudFront or varnish) Create new bucket See all buckets Change access control to a bucket Delete objects from a bucket(also bucket itself) Use different folders when storing media and static contents Make \u0026lsquo;collect static\u0026rsquo; faster Check ACL status In conclusion   \nConfiguring S3 When using django storage, you don\u0026rsquo;t need to put configurations like ~/.aws/credentials which is required in boto3. You can define those in settings in django settings, like:\n# settings.py AWS_ACCESS_KEY_ID = \u0026#39;XXXX\u0026#39; AWS_SECRET_ACCESS_KEY = \u0026#39;XXXX\u0026#39; AWS_STORAGE_BUCKET_NAME = \u0026#39;your-bucket\u0026#39; Using S3 which it does not belong to AWS If you want to use S3 provided by any company other than AWS, then configure the URL End Point in settings.py:\nAWS_S3_ENDPOINT_URL = \u0026#34;your-bucket-proivder.domain\u0026#34; Serve S3 in different domain(through cloudFront or varnish) Lets say, you want to serve S3 contents in cdn.abc.com/static/...(maybe through cloudfront or varnish), then put the following configuration in settings.py:\nAWS_S3_CUSTOM_DOMAIN = \u0026#39;cdn.abc.com\u0026#39; Create new bucket Creating buckets is fairly easy in boto3. Here I am going to share how you can do that using Django Storage:\nimport boto3 from django.conf import settings session = boto3.session.Session() s3 = session.resource( \u0026#39;s3\u0026#39;, aws_access_key_id=settings.AWS_ACCESS_KEY_ID, aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY, endpoint_url=settings.AWS_S3_ENDPOINT_URL ) s3.create_bucket(Bucket=\u0026#34;your-bucket\u0026#34;) See all buckets Use the following command to see all buckets:\nimport boto3 from django.conf import settings s3 = boto3.client( \u0026#39;s3\u0026#39;, aws_access_key_id=settings.AWS_ACCESS_KEY_ID, aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY, endpoint_url=settings.AWS_S3_ENDPOINT_URL ) for bucket in s3.buckets.all(): print(bucket.name) # to see items inside buckets for item in bucket.objects.all(): print(item) Change access control to a bucket You can change a bucket\u0026rsquo;s access control like this:\ns3 = boto3.client(\u0026#39;s3\u0026#39;) bucket = s3.Bucket(\u0026#39;my-bucket\u0026#39;) bucket.Acl().put(ACL=\u0026#39;public-read\u0026#39;) # Set all Bucket Policy for bucket in s3.buckets.all(): if bucket.name == bucket_name: bucket.Acl().put(ACL=\u0026#39;public-read\u0026#39;) Delete objects from a bucket(also bucket itself) You can use the following code to remove a bucket:\nbucket = s3.Bucket(\u0026#39;my-bucket\u0026#39;) bucket.objects.all().delete() # Or do it like this # for obj in bucket.objects.all(): # obj.delete() # If you also want to completely remove the empty bucket itself: bucket.delete() # Or delete in all buckets for bucket in s3.buckets.all(): bucket.objects.all().delete() bucket.delete() Use different folders when storing media and static contents I got this from django-cookiecutter.\nFor this purpose, we need to create two new storage classes, subclassing from S3Boto3Storage:\n# in somefile.py from storages.backends.s3boto3 import S3Boto3Storage class StaticRootS3Boto3Storage(S3Boto3Storage): location = \u0026#34;static\u0026#34; class MediaRootS3Boto3Storage(S3Boto3Storage): location = \u0026#34;media\u0026#34; file_overwrite = False Then import them in settings.py:\nSTATICFILES_STORAGE = \u0026#34;path.to.somefile.StaticRootS3Boto3Storage\u0026#34; DEFAULT_FILE_STORAGE = \u0026#34;path.to.somefile.MediaRootS3Boto3Storage\u0026#34; Make \u0026lsquo;collect static\u0026rsquo; faster Django\u0026rsquo;s collect static can be very slow when you will use S3 as storage. For that, you can use Collectfast to make this faster. Install it using pip install Collectfast. Then update the settings.py like this:\nAWS_PRELOAD_METADATA = True INSTALLED_APPS = ( # … \u0026#39;collectfast\u0026#39;, ) Check ACL status You can do it like this:\ns3.get_bucket_acl(Bucket=\u0026#39;bucket-name\u0026#39;)  In conclusion Thats all for now. Will update the post with more functionalities or snippets whenever I find one. Also, please suggest more snippets in the comment section below. Thanks for reading. Cheers!!\n","description":"A collection of tips and snippets for using Amazon S3 or any S3 compatible storage with Django."},{"date_published":"2019-02-10T00:38:04+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"February 10, 2019","id":"https://ruddra.com/django-save-unknown-object-in-database/","url":"https://ruddra.com/django-save-unknown-object-in-database/","title":"Django: Save Unknown Object in Database","image":"https://ruddra.com/content/images/2020/05/database.jpg","tags":["Django","Byte Data"],"content_html":"\u003cp\u003eSuppose you are dealing with a poorly written API, which returns different type of objects at different scenarios. For example, sometimes it returns a string(ie. \u003ccode\u003eabcd\u003c/code\u003e), sometimes it returns a list(ie. \u003ccode\u003e[1,2,3,4]\u003c/code\u003e), or maybe \u003ccode\u003eNone\u003c/code\u003e. Now, you are suppose to save that data, which you can\u0026rsquo;t predict. As you can\u0026rsquo;t predict the data type of object, you can\u0026rsquo;t design your Django Model accordingly. How are you suppose to take care of that?\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#convert-to-byte-data\"\u003eConvert to byte data\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#using-binaryfield-to-store-in-database\"\u003eUsing \u0026lsquo;BinaryField\u0026rsquo; to store in database\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage-examples\"\u003eUsage examples\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#known-issues\"\u003eKnown issues\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#other-information\"\u003eOther information\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"convert-to-byte-data\"\u003eConvert to byte data\u003c/h2\u003e\n\u003cp\u003eAs you don\u0026rsquo;t know which data type you will be dealing with, so its safer to convert it to a common data type, which can be \u003ca href=\"https://docs.python.org/3.1/library/functions.html#bytes\"\u003eByte Data\u003c/a\u003e. For that, you can use \u003ca href=\"https://docs.python.org/3/library/pickle.html\"\u003epython pickle\u003c/a\u003e. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epickle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ebyte_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epickle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eobj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epickle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebyte_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"using-binaryfield-to-store-in-database\"\u003eUsing \u0026lsquo;BinaryField\u0026rsquo; to store in database\u003c/h2\u003e\n\u003cp\u003eYou can use \u003ca href=\"https://docs.djangoproject.com/en/stable/ref/models/fields/#binaryfield\"\u003eDjango BinaryField\u003c/a\u003e to store the byte data created using pickle. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003epickle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eParameter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003e_value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBinaryField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eset_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epickle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003epickle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eproperty\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eget_data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eset_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage-examples\"\u003eUsage examples\u003c/h2\u003e\n\u003cp\u003eYou can use the \u003ccode\u003evalue\u003c/code\u003e from the example Model given in last step like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOut\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOut\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eIn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eOut\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"known-issues\"\u003eKnown issues\u003c/h2\u003e\n\u003cp\u003eThere are some known issues you need to know about. For example:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eYou can\u0026rsquo;t make \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/db/queries/\"\u003edb queries\u003c/a\u003e in this approach. Means you can\u0026rsquo;t do \u003ccode\u003eFoo.objects.get(value=1)\u003c/code\u003e or \u003ccode\u003eFoo.objects.filter(value=1)\u003c/code\u003e or any other DB query.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAlso, you need to be careful about not abusing BinaryField. From Django Docs:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAlthough you might think about storing files in the database, consider that it is bad design in 99% of the cases. This field is not a replacement for proper static files handling.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"other-information\"\u003eOther information\u003c/h2\u003e\n\u003cp\u003eYou can look into my \u003ca href=\"https://stackoverflow.com/a/53456285/2696165\"\u003eStack Overflow Answer\u003c/a\u003e regarding this problem.\u003c/p\u003e\n","content":"Suppose you are dealing with a poorly written API, which returns different type of objects at different scenarios. For example, sometimes it returns a string(ie. abcd), sometimes it returns a list(ie. [1,2,3,4]), or maybe None. Now, you are suppose to save that data, which you can\u0026rsquo;t predict. As you can\u0026rsquo;t predict the data type of object, you can\u0026rsquo;t design your Django Model accordingly. How are you suppose to take care of that?Table of contents\u0026nbsp;  Convert to byte data Using \u0026lsquo;BinaryField\u0026rsquo; to store in database Usage examples Known issues Other information   \nConvert to byte data As you don\u0026rsquo;t know which data type you will be dealing with, so its safer to convert it to a common data type, which can be Byte Data. For that, you can use python pickle. For example:\nimport pickle byte_data = pickle.dumps(obj) obj = pickle.loads(byte_data) Using \u0026lsquo;BinaryField\u0026rsquo; to store in database You can use Django BinaryField to store the byte data created using pickle. For example:\nimport pickle class Parameter(models.Model): _value = models.BinaryField() def set_data(self, data): self._value = pickle.dumps(data) def get_data(self): return pickle.loads(self._value) value = property(get_data, set_data) Usage examples You can use the value from the example Model given in last step like this:\nIn: b = Foo.objects.create(value=1) In: b.value Out: 1 In: b = Foo.objects.create(value={1:1,2:2}) In: b.value Out: {1: 1, 2: 2} In: b = Foo.objects.create(value=[1,1]) In: b.value Out: [1, 1] Known issues There are some known issues you need to know about. For example:\n  You can\u0026rsquo;t make db queries in this approach. Means you can\u0026rsquo;t do Foo.objects.get(value=1) or Foo.objects.filter(value=1) or any other DB query.\n  Also, you need to be careful about not abusing BinaryField. From Django Docs:\n   Although you might think about storing files in the database, consider that it is bad design in 99% of the cases. This field is not a replacement for proper static files handling.\n Other information You can look into my Stack Overflow Answer regarding this problem.\n","description":"Suppose you are dealing with a poorly written API, which returns different type of objects at different scenarios. For example, sometimes it returns a string(ie. abcd), sometimes it returns a list(ie. [1,2,3,4]), or maybe None. Now, you are suppose to save that data, which you can\u0026rsquo;t predict. As you can\u0026rsquo;t predict the data type of object, you can\u0026rsquo;t design your Django Model accordingly."},{"date_published":"2019-01-26T14:58:58+06:00","date_modified":"2022-07-28T22:03:00+02:00","date":"January 26, 2019","id":"https://ruddra.com/django-model-linked-list/","url":"https://ruddra.com/django-model-linked-list/","title":"Django: Ordering by Linked List for Model Objects","image":"https://ruddra.com/content/images/2020/05/linkedlist.jpg","tags":["Django","Models"],"content_html":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Linked_list\"\u003eLinked list\u003c/a\u003e is a data structure where each object has points to next. In django, linked list can provide an interesting solution when it comes to custom ordering/grouping issues.\u003c/p\u003e\n\u003cp\u003eLets think of an example like this= you are making a blog site, and you have made a \u003ccode\u003ePost\u003c/code\u003e Model like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eauthor\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eon_delete\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDO_NOTHING\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow you want to make a group of posts as series. How can you do that? Here are possible solutions:\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#without-linked-list\"\u003eWithout linked list\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#pros-and-cons-without-linked-list\"\u003ePros and cons without linked list\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#with-linked-list\"\u003eWith linked list\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#pros-and-cons-with-linked-list\"\u003ePros and cons with linked list\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"without-linked-list\"\u003eWithout linked list\u003c/h2\u003e\n\u003cp\u003eOne way of approaching this problem is to make a new model named \u003ccode\u003eSeries\u003c/code\u003e and have ForeignKey relation from \u003ccode\u003ePost\u003c/code\u003e to \u003ccode\u003eSeries\u003c/code\u003e. Also there should be a ordering field in Tutorials as well, so that it does not create a series with multiple posts with same order. For example like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSeries\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eseries\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForeignKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSeries\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eorder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eunique_togather\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;series\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;order\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pros-and-cons-without-linked-list\"\u003ePros and cons without linked list\u003c/h3\u003e\n\u003cp\u003eThere are few pros and cons of this approach. Pros are: the model structure is very flexible and easy to make a query:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eseries\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSeries\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eposts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eseries\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost_set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eorder_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;order\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut, a major cons is that, you need to create at-least 1 extra table and 1 extra field to maintain it.\u003c/p\u003e\n\u003ch2 id=\"with-linked-list\"\u003eWith linked list\u003c/h2\u003e\n\u003cp\u003eSo, when we are going to use linked list, we need to put a reference to next object in model:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# rest of the fields\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOneToOneField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;self\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eblank\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erelated_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;next\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFunny thing is that, as linked list we were suppose to mark the next, instead we are creating an entry named previous in the model. But don\u0026rsquo;t worry, it will serve as reference to next object via \u003ca href=\"https://docs.djangoproject.com/en/2.1/ref/models/relations/\"\u003erelated objects\u003c/a\u003e. Here are some explanations:\u003c/p\u003e\n\u003cp\u003eWhen you are giving a \u003ccode\u003erelated_name\u003c/code\u003e to a OneToOne(or ForeignKey Field), it will give the related object, for example in the model the previous post, a reference to current post. So when we type \u003ccode\u003eprevious_post.next\u003c/code\u003e, it will return current post.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePost\u003c/span\u003e \u003cspan class=\"nb\"\u003eobject\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, if we want to create a new series, all we have to do is link a post to its previous one, thats it.\u003c/p\u003e\n\u003cp\u003eBut in this approach, querying is bit complicated. You can get all the posts in a series like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eposts\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprevious__isnull\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# root posts will not have any previous post\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eseries\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eposts\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eseries_posts\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eseries_posts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eseries_posts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eseries\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseries_posts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseries\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, in template you can access previous and next posts of a given post like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{{ post.title }} {{ post.body }} {% if post.previous %}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{% url \u0026#39;post-detail\u0026#39; post.previous.pk %}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ post.previous.title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{% endif %} {% if post.next %}\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e \u003cspan class=\"na\"\u003ehref\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{% url \u0026#39;post-detail\u0026#39; post.next.pk %}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e{{ post.next.title }}\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e{% endif %}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pros-and-cons-with-linked-list\"\u003ePros and cons with linked list\u003c/h3\u003e\n\u003cp\u003eThe pros of this approach is that, you don\u0026rsquo;t have to create extra table for this. But a major downside is that, whenever you want to add a new post in middle of the series, you need to write a lot of lines. For example, you might need to change like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ep1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep3\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ePost\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ep3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprevious\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ep1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ep3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut hopefully the order in Objects won\u0026rsquo;t change too frequently. So its not a major problem.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eFundamental data structure like linked list is really helpful in maintaining order in objects. I hope this post has been able to put some light on this topic. Thanks for reading.\u003c/p\u003e\n","content":"Linked list is a data structure where each object has points to next. In django, linked list can provide an interesting solution when it comes to custom ordering/grouping issues.\nLets think of an example like this= you are making a blog site, and you have made a Post Model like this:\nclass Post(models.Model): title=models.CharField(max_length=255) body=models.TextField() author=models.ForeignKey(User, on_delete=models.DO_NOTHING) Now you want to make a group of posts as series. How can you do that? Here are possible solutions:Table of contents\u0026nbsp;  Without linked list  Pros and cons without linked list   With linked list  Pros and cons with linked list   Conclusion   \nWithout linked list One way of approaching this problem is to make a new model named Series and have ForeignKey relation from Post to Series. Also there should be a ordering field in Tutorials as well, so that it does not create a series with multiple posts with same order. For example like this:\nclass Series(models.Model): title=models.CharField(max_length=255) class Post(models.Model): series=models.ForeignKey(Series, null=True, default=None) order = models.IntegerField() class Meta: unique_togather=(\u0026#39;series\u0026#39;, \u0026#39;order\u0026#39;,) Pros and cons without linked list There are few pros and cons of this approach. Pros are: the model structure is very flexible and easy to make a query:\nseries = Series.objects.first() posts = series.post_set.all().order_by(\u0026#39;order\u0026#39;) But, a major cons is that, you need to create at-least 1 extra table and 1 extra field to maintain it.\nWith linked list So, when we are going to use linked list, we need to put a reference to next object in model:\nclass Post(models.Model): # rest of the fields previous=models.OneToOneField(\u0026#39;self\u0026#39;, null=True, blank=True, related_name=\u0026#34;next\u0026#34;) Funny thing is that, as linked list we were suppose to mark the next, instead we are creating an entry named previous in the model. But don\u0026rsquo;t worry, it will serve as reference to next object via related objects. Here are some explanations:\nWhen you are giving a related_name to a OneToOne(or ForeignKey Field), it will give the related object, for example in the model the previous post, a reference to current post. So when we type previous_post.next, it will return current post.\n\u0026gt;\u0026gt; p1 = Post.objects.create(...) \u0026gt;\u0026gt; p2 = Post.objects.create(...) \u0026gt;\u0026gt; p2.previous=p1 \u0026gt;\u0026gt; p2.save() \u0026gt;\u0026gt; print(p1.next) \u0026lt;Post: Post object (2)\u0026gt; Now, if we want to create a new series, all we have to do is link a post to its previous one, thats it.\nBut in this approach, querying is bit complicated. You can get all the posts in a series like this:\nposts = Post.objects.filter(previous__isnull=True) # root posts will not have any previous post series = list() for post in posts: print(post) series_posts=list() series_posts.append(post) while(post.next): print(post.next) post=post.next series_posts.append(post) series.append(series_posts) print(series) Now, in template you can access previous and next posts of a given post like this:\n{{ post.title }} {{ post.body }} {% if post.previous %} \u0026lt;a href=\u0026#34;{% url \u0026#39;post-detail\u0026#39; post.previous.pk %}\u0026#34;\u0026gt;{{ post.previous.title }}\u0026lt;/a\u0026gt; {% endif %} {% if post.next %} \u0026lt;a href=\u0026#34;{% url \u0026#39;post-detail\u0026#39; post.next.pk %}\u0026#34;\u0026gt;{{ post.next.title }}\u0026lt;/a\u0026gt; {% endif %} Pros and cons with linked list The pros of this approach is that, you don\u0026rsquo;t have to create extra table for this. But a major downside is that, whenever you want to add a new post in middle of the series, you need to write a lot of lines. For example, you might need to change like this:\np1=Post.objects.first() p2 = p1.next p3=Post.objects.create(...) p2.previous=p3 p2.save() p3.previous=p1 p3.save() But hopefully the order in Objects won\u0026rsquo;t change too frequently. So its not a major problem.\nConclusion Fundamental data structure like linked list is really helpful in maintaining order in objects. I hope this post has been able to put some light on this topic. Thanks for reading.\n","description":"Implement a simple Linked List data structure in Django using One To One relationship."},{"date_published":"2019-01-03T02:00:00Z","date_modified":"2022-07-28T22:03:00+02:00","date":"January 3, 2019","id":"https://ruddra.com/django-custom-user-migration-mid-phase-project/","url":"https://ruddra.com/django-custom-user-migration-mid-phase-project/","title":"Django: Changing User Model in Mid-Project","image":"https://ruddra.com/content/images/2020/04/project.jpg","tags":["Django","Migration","Models"],"content_html":"\u003cp\u003eEvery now and then I see some questions pop up in Stack Overflow with title:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eValueError: Related model \u0026lsquo;app.User\u0026rsquo; cannot be resolved\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis is a very common issue and pops up when the user tries to run the migration. So, lets talk more about what is this problem and how can we solve it.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-problem\"\u003eThe problem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#why-it-occurs\"\u003eWhy It occurs\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#solution-easy-way\"\u003eSolution: easy way\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#solution-hard-way\"\u003eSolution: hard Way\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#solution-alternative-way\"\u003eSolution: alternative way\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#for-future-projects\"\u003eFor future projects\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"the-problem\"\u003eThe problem\u003c/h2\u003e\n\u003cp\u003eThis error occurs when you have been using Django\u0026rsquo;s default User model, and in mid project, you need some changes in \u003cstrong\u003eauth.User\u003c/strong\u003e model and decided to use \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#substituting-a-custom-user-model\"\u003e\u003cstrong\u003eCustomUser\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"why-it-occurs\"\u003eWhy It occurs\u003c/h2\u003e\n\u003cp\u003eAs per \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#changing-to-a-custom-user-model-mid-project\"\u003edjango documentation\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eChanging AUTH_USER_MODEL after you’ve created database tables is significantly more difficult since it affects foreign keys and many-to-many relationship.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAs \u003cstrong\u003eauth.User\u003c/strong\u003e is core part of Django, and when you change the tables, it can\u0026rsquo;t work properly. This problem is hard to identify even for myself, because of the error it throws due to migration.\u003c/p\u003e\n\u003ch2 id=\"solution-easy-way\"\u003eSolution: easy way\u003c/h2\u003e\n\u003cp\u003eThe easiest(and cleanest) way is to delete all your migration files from all apps, drop the database. Then create a new database and connect your project to that. Then run \u003ccode\u003epython manage.py makemigrations\u003c/code\u003e and \u003ccode\u003epython manage.py migrate\u003c/code\u003e to make changes in DB. Means to make a clean start for the project, data wise.\u003c/p\u003e\n\u003ch2 id=\"solution-hard-way\"\u003eSolution: hard Way\u003c/h2\u003e\n\u003cp\u003eDropping the Database is not always possible for us. So there is an another approach to resolve this issue(based on ticket \u003ca href=\"https://code.djangoproject.com/ticket/25313\"\u003e#25313\u003c/a\u003e):\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a custom user model identical to \u003cstrong\u003eauth.User\u003c/strong\u003e, call it \u003ccode\u003eUser\u003c/code\u003e (so many-to-many tables keep the same name) and set \u003ccode\u003edb_table='auth_user'\u003c/code\u003e (so it uses the same table). Like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.auth.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractUser\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAbstractUser\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edb_table\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;auth_user\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThrow away all your \u003cem\u003emigrations\u003c/em\u003e from all the apps(except for \u003ccode\u003e__init__.py\u003c/code\u003e file inside the migrations folder).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNow update value of \u003ccode\u003eAUTH_USER_MODEL\u003c/code\u003e in your \u003cstrong\u003esettings.py\u003c/strong\u003e with \u003ccode\u003emyapp.User\u003c/code\u003e(Custom User Model) like \u003ccode\u003eAUTH_USER_MODEL = 'myapp.User'\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRecreate a fresh set of migrations using \u003ccode\u003epython manage.py makemigrations\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake a backup of your database.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDelete all entries from \u003ccode\u003edjango_migrations\u003c/code\u003e table.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFake-apply the new set of migrations using \u003ccode\u003epython manage.py migrate --fake\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eOptional:\u003c/em\u003e Set \u003ccode\u003edb_table=\u0026quot;your_custom_table\u0026quot;\u003c/code\u003e or remove it altogether.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake other changes to the custom model, generate migrations, apply them.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"solution-alternative-way\"\u003eSolution: alternative way\u003c/h2\u003e\n\u003cp\u003eYou can take a different approach rather than overriding you \u003cstrong\u003eauth.User\u003c/strong\u003e model. You can define a new model(lets say \u003cstrong\u003eProfile\u003c/strong\u003e), and put your relevant fields there. Then, make a \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/db/examples/one_to_one/\"\u003e\u003ccode\u003eOneToOne\u003c/code\u003e\u003c/a\u003e relation with \u003cstrong\u003eauth.User\u003c/strong\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProfile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eOneToOneField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esome_field\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eblank\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can use \u003ca href=\"https://docs.djangoproject.com/en/2.1/ref/signals/#post-save\"\u003epost_save\u003c/a\u003e signals to create a profile automatically every time a User is created.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.dispatch\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ereceiver\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.signals\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003epost_save\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.auth.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@receiver\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epost_save\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate_user_profile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecreated\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ecreated\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eProfile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can use this easily in python:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esome_field\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Thus you get value of some field from Profile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OR\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprofile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProfile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprofile\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Thus you get auth.User\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr in template:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.profile.some_field\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eFYI:\u003c/em\u003e this process was mentioned in the \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#extending-the-existing-user-model\"\u003edjango documentation\u003c/a\u003e as well.\u003c/p\u003e\n\u003ch2 id=\"for-future-projects\"\u003eFor future projects\u003c/h2\u003e\n\u003cp\u003eFor future projects, you should use your \u003cstrong\u003eCustomUser\u003c/strong\u003e model from the beginning. It will reduce a lot of hassle when it comes to customizing \u003cstrong\u003eUser\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eTo Be Honest, this an old problem and there is no good way to resolve it(at least not in Django 2.1). Hopefully in future releases, it will be fixed.\u003c/p\u003e\n","content":"Every now and then I see some questions pop up in Stack Overflow with title:\n ValueError: Related model \u0026lsquo;app.User\u0026rsquo; cannot be resolved\n This is a very common issue and pops up when the user tries to run the migration. So, lets talk more about what is this problem and how can we solve it.Table of contents\u0026nbsp;  The problem Why It occurs Solution: easy way Solution: hard Way Solution: alternative way For future projects In conclusion   \nThe problem This error occurs when you have been using Django\u0026rsquo;s default User model, and in mid project, you need some changes in auth.User model and decided to use CustomUser.\nWhy It occurs As per django documentation:\n Changing AUTH_USER_MODEL after you’ve created database tables is significantly more difficult since it affects foreign keys and many-to-many relationship.\n As auth.User is core part of Django, and when you change the tables, it can\u0026rsquo;t work properly. This problem is hard to identify even for myself, because of the error it throws due to migration.\nSolution: easy way The easiest(and cleanest) way is to delete all your migration files from all apps, drop the database. Then create a new database and connect your project to that. Then run python manage.py makemigrations and python manage.py migrate to make changes in DB. Means to make a clean start for the project, data wise.\nSolution: hard Way Dropping the Database is not always possible for us. So there is an another approach to resolve this issue(based on ticket #25313):\n  Create a custom user model identical to auth.User, call it User (so many-to-many tables keep the same name) and set db_table='auth_user' (so it uses the same table). Like this:\nfrom django.contrib.auth.models import AbstractUser class User(AbstractUser): class Meta: db_table=\u0026#39;auth_user\u0026#39;   Throw away all your migrations from all the apps(except for __init__.py file inside the migrations folder).\n  Now update value of AUTH_USER_MODEL in your settings.py with myapp.User(Custom User Model) like AUTH_USER_MODEL = 'myapp.User'.\n  Recreate a fresh set of migrations using python manage.py makemigrations.\n  Make a backup of your database.\n  Delete all entries from django_migrations table.\n  Fake-apply the new set of migrations using python manage.py migrate --fake.\n  Optional: Set db_table=\u0026quot;your_custom_table\u0026quot; or remove it altogether.\n  Make other changes to the custom model, generate migrations, apply them.\n  Solution: alternative way You can take a different approach rather than overriding you auth.User model. You can define a new model(lets say Profile), and put your relevant fields there. Then, make a OneToOne relation with auth.User like this:\nclass Profile(models.Model): user = models.OneToOneField(User) some_field = models.CharField(max_length=255, null=True, blank=True, default=None) You can use post_save signals to create a profile automatically every time a User is created.\nfrom django.dispatch import receiver from django.core.signals import post_save from django.contrib.auth.models import User @receiver(post_save, sender=User) def create_user_profile(sender, instance=None, created=None, **kwargs): if created: Profile.objects.create(user=instance) You can use this easily in python:\nuser = User.objects.first() user.profile.some_field # Thus you get value of some field from Profile # OR profile = Profile.objects.first() user = profile.user # Thus you get auth.User Or in template:\n{{ user.profile.some_field }}FYI: this process was mentioned in the django documentation as well.\nFor future projects For future projects, you should use your CustomUser model from the beginning. It will reduce a lot of hassle when it comes to customizing User.\nIn conclusion To Be Honest, this an old problem and there is no good way to resolve it(at least not in Django 2.1). Hopefully in future releases, it will be fixed.\n","description":"Cure to 'ValueError: Related model 'app.User' cannot be resolved'."},{"date_published":"2018-12-22T02:00:00Z","date_modified":"2022-07-28T22:03:00+02:00","date":"December 22, 2018","id":"https://ruddra.com/tdd-drf-factory-boy-faker/","url":"https://ruddra.com/tdd-drf-factory-boy-faker/","title":"Testing for Django Rest Framework with Factory Boy and Faker","image":"https://ruddra.com/content/images/2020/05/factory.jpg","tags":["Django","DRF","Testing","Factory"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003e“I\u0026rsquo;m not a great programmer; I\u0026rsquo;m just a good programmer with great habits.”\n― Kent Beck\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Test-driven_development\"\u003eTest Driven Development\u003c/a\u003e - in short \u003cstrong\u003eTDD\u003c/strong\u003e is a practice where you write the tests first then the actual code. It makes the code less vulnerable and it makes a testable software rather than writing the software, then test it.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.django-rest-framework.org/\"\u003eDjango Rest Framework\u003c/a\u003e - in short \u003cstrong\u003eDRF\u003c/strong\u003e is a powerful framework which provides RESTful API support over Django. It provides minimal ways to expose the RESTful API directly from model( or without it, along with many other features out-of-the box like authentication, permission, throttling and so on.).\u003c/p\u003e\n\u003cp\u003eAs we will be testing our RESTful APIs though TDD, we need data which should simulate real world data. But writing these data in the code may not be efficient if its in large volume. Also it may take a long time to do so. So we need some tools which will generate those fake data for us. That is where \u003ca href=\"https://factoryboy.readthedocs.io/en/latest/\"\u003eFactory Boy\u003c/a\u003e and \u003ca href=\"https://github.com/joke2k/faker\"\u003ePython Faker by joke2k\u003c/a\u003e comes in.\u003c/p\u003e\n\u003cp\u003eToday we are going to discuss how we can use TDD in DRF with shortest implementation possible.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#preparation\"\u003ePreparation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#testing\"\u003eTesting\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#writing-factory\"\u003eWriting Factory\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"preparation\"\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eAs always, we need to prepare ourselves before starting something. Obviously we need to setup \u003ca href=\"https://www.djangoproject.com/start/\"\u003eDjango\u003c/a\u003e and \u003ca href=\"https://www.django-rest-framework.org/tutorial/quickstart/\"\u003eDjango Rest Framework\u003c/a\u003e in our local machine. Now, we can write a model in our system like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eslug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSlugField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# and so on\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, we need to write a serializer for serializing the \u003ccode\u003eBlog\u003c/code\u003e objects:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModelSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s write a small view, which takes slug as url parameter and returns the actual blog response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework.views\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eAPIView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework.response\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"n\"\u003eblog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"n\"\u003eserializer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogDoesNotExist\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_404_NOT_FOUND\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_500_INTERNAL_SERVER_ERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnother view to get all Blogs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework.views\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eAPIView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework.response\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogListView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAPIView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"n\"\u003eblogs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"n\"\u003eserializer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogSerializer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eblog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emany\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserializer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_500_INTERNAL_SERVER_ERROR\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFinally attach this view to an URL:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog/\u0026lt;slug:title\u0026gt;/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;blog-get\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blogs/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;blog-all\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThus our preparation for testing is complete. Now lets dive into testing.\u003c/p\u003e\n\u003ch2 id=\"testing\"\u003eTesting\u003c/h2\u003e\n\u003cp\u003eFor writing test cases, we need to create some files inside the app. Lets say, we have created \u003ccode\u003etest_blog.py\u003c/code\u003e and inside it, the code should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003erest_framework.test\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eAPITestCase\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAPITestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"c1\"\u003e# some pieces of code\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere, we will be subclassing BlogTest from \u003ccode\u003eAPITestCase\u003c/code\u003e because it comes built in with \u003ccode\u003eself.client\u003c/code\u003e which can be used for calling the API. Now lets setup a test:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.urls\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ereverse\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# https://docs.djangoproject.com/en/2.1/ref/urlresolvers/#reverse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAPITestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_blog_not_found\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;random\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog-get\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_400_NOT_FOUND\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere we can see, if we call the API without creating a blog instance, it will return 404. Now lets create one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_blog_found\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;TEST\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eslug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;TEST TWO\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eblog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog-get\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# and so on\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this case, we should get 200 status and response slug should match our provided slug. As we are testing only one object, creating one should not be a problem. But how about a list objects(regarding our second view). Can we write the \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebody\u003c/code\u003e variables for 100 times if we need to check for 100 objects?\u003c/p\u003e\n\u003ch2 id=\"writing-factory\"\u003eWriting Factory\u003c/h2\u003e\n\u003cp\u003eTo overcome this, we can setup a library called \u003ca href=\"https://factoryboy.readthedocs.io/en/latest/\"\u003efactory boy\u003c/a\u003e which will generate Blog objects randomly. To install factory boy, we need to type:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install factory_boy\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, to generate 100 Blog objects, we can setup a Factory Class which has \u003ccode\u003eBlog\u003c/code\u003e in \u003ccode\u003eMeta\u003c/code\u003e class:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo ensure each object is random, we can put some providers in attributes(named same as model fields):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBlogFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFaker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eslug\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFaker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFaker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;text\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we can use this factory in our test:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_hundrand_blogs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eBlogFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog-list\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# and so on\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePretty cool, right!!\nNow, let\u0026rsquo;s say we want to create a \u003ccode\u003eBlogFactory\u003c/code\u003e instance which has title \u003cstrong\u003eX\u003c/strong\u003e. We can do that by passing \u003ccode\u003etitle\u003c/code\u003e keyword argument through \u003ccode\u003eBlogFactory\u003c/code\u003e instance call:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_blog_X\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eblog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog-get\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eblog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;X\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# and so on\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFinally, one more test case, where you want the \u003cstrong\u003eX\u003c/strong\u003e to be a random value. Its also doable using \u003ca href=\"https://github.com/joke2k/faker\"\u003epython faker by joke2k\u003c/a\u003e. We can install it using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install Faker\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd we can use it like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003efaker\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFaker\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_blog_fake_name\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003efake\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFaker\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efake\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eblog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBlogFactory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog-get\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;slug\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eblog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eslug\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estatus_code\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTTP_200_OK\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eTesting is made easier by libraries like Factory boy, Faker etc. So we should use them write test cases faster.\u003c/p\u003e\n\u003cp\u003eThats it. Thank you for reading. Let me know if you have any questions in comments section below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n","content":" “I\u0026rsquo;m not a great programmer; I\u0026rsquo;m just a good programmer with great habits.” ― Kent Beck\n Test Driven Development - in short TDD is a practice where you write the tests first then the actual code. It makes the code less vulnerable and it makes a testable software rather than writing the software, then test it.\nDjango Rest Framework - in short DRF is a powerful framework which provides RESTful API support over Django. It provides minimal ways to expose the RESTful API directly from model( or without it, along with many other features out-of-the box like authentication, permission, throttling and so on.).\nAs we will be testing our RESTful APIs though TDD, we need data which should simulate real world data. But writing these data in the code may not be efficient if its in large volume. Also it may take a long time to do so. So we need some tools which will generate those fake data for us. That is where Factory Boy and Python Faker by joke2k comes in.\nToday we are going to discuss how we can use TDD in DRF with shortest implementation possible.Table of contents\u0026nbsp;  Preparation Testing Writing Factory Conclusion   \nPreparation As always, we need to prepare ourselves before starting something. Obviously we need to setup Django and Django Rest Framework in our local machine. Now, we can write a model in our system like this:\nclass Blog(models.Model): name = models.CharField(max_length=255) slug = models.SlugField(max_length=255) body = models.TextField() # and so on Then, we need to write a serializer for serializing the Blog objects:\nclass BlogSerializer(serializer.ModelSerializer): class Meta: model = Blog Let\u0026rsquo;s write a small view, which takes slug as url parameter and returns the actual blog response:\nfrom rest_framework.views import APIView from rest_framework.response import Response class BlogView(APIView): def get(self, slug): try: blog = Blog.objects.get(slug=slug) serializer = BlogSerializer(blog) return Response(serializer.data, status=status.HTTP_200_OK) except BlogDoesNotExist: return Response(status=status.HTTP_404_NOT_FOUND) except Exception: return Response(status=status.HTTP_500_INTERNAL_SERVER_ERROR) Another view to get all Blogs:\nfrom rest_framework.views import APIView from rest_framework.response import Response class BlogListView(APIView): def get(self): try: blogs = Blog.objects.all() serializer = BlogSerializer(blog, many=True) return Response(serializer.data, status=status.HTTP_200_OK) except Exception: return Response(status=status.HTTP_500_INTERNAL_SERVER_ERROR) Finally attach this view to an URL:\npath(\u0026#39;blog/\u0026lt;slug:title\u0026gt;/\u0026#39;, BlogView.as_view(), name=\u0026#34;blog-get\u0026#34;), path(\u0026#39;blogs/\u0026#39;, BlogView.as_view(), name=\u0026#34;blog-all\u0026#34;), Thus our preparation for testing is complete. Now lets dive into testing.\nTesting For writing test cases, we need to create some files inside the app. Lets say, we have created test_blog.py and inside it, the code should look like this:\nfrom rest_framework.test import APITestCase class BlogTest(APITestCase): # some pieces of code Here, we will be subclassing BlogTest from APITestCase because it comes built in with self.client which can be used for calling the API. Now lets setup a test:\nfrom django.urls import reverse # https://docs.djangoproject.com/en/2.1/ref/urlresolvers/#reverse class BlogTest(APITestCase): def test_blog_not_found(self): data = {\u0026#39;slug\u0026#39;: \u0026#39;random\u0026#39;} response = self.client.get(reverse(\u0026#39;blog-get\u0026#39;), data=data) self.assertEqual(response.status_code, status.HTTP_400_NOT_FOUND) Here we can see, if we call the API without creating a blog instance, it will return 404. Now lets create one:\ndef test_blog_found(self): name = \u0026#34;TEST\u0026#34; slug = \u0026#34;test\u0026#34; body = \u0026#34;TEST TWO\u0026#34; blog = Blog.objects.create(name=name, body=body, slug=slug) ata = {\u0026#39;slug\u0026#39;: slug} response = self.client.get(reverse(\u0026#39;blog-get\u0026#39;), data=data) self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json().get(\u0026#39;slug\u0026#39;), slug) # and so on In this case, we should get 200 status and response slug should match our provided slug. As we are testing only one object, creating one should not be a problem. But how about a list objects(regarding our second view). Can we write the name, slug, body variables for 100 times if we need to check for 100 objects?\nWriting Factory To overcome this, we can setup a library called factory boy which will generate Blog objects randomly. To install factory boy, we need to type:\npip install factory_boy Now, to generate 100 Blog objects, we can setup a Factory Class which has Blog in Meta class:\nclass BlogFactory(factory.Factory): class Meta: model = Blog To ensure each object is random, we can put some providers in attributes(named same as model fields):\nclass BlogFactory(factory.Factory): class Meta: model = Blog name = factory.Faker(\u0026#39;name\u0026#39;) slug = factory.Faker(\u0026#39;slug\u0026#39;) body = factory.Faker(\u0026#39;text\u0026#39;) Now we can use this factory in our test:\ndef test_hundrand_blogs(self): for i in range(100): BlogFactory() response = self.client.get(reverse(\u0026#39;blog-list\u0026#39;)) self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(len(response.data), 100) # and so on Pretty cool, right!! Now, let\u0026rsquo;s say we want to create a BlogFactory instance which has title X. We can do that by passing title keyword argument through BlogFactory instance call:\ndef test_blog_X(self): blog = BlogFactory(title=\u0026#39;X\u0026#39;) response = self.client.get(reverse(\u0026#39;blog-get\u0026#39;), data={\u0026#39;slug\u0026#39;: blog.slug}) self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json().get(\u0026#39;title\u0026#39;), \u0026#34;X\u0026#34;) # and so on Finally, one more test case, where you want the X to be a random value. Its also doable using python faker by joke2k. We can install it using:\npip install Faker And we can use it like this:\nfrom faker import Faker def test_blog_fake_name(self): fake = Faker() name = fake.name() blog = BlogFactory(title=name) response = self.client.get(reverse(\u0026#39;blog-get\u0026#39;), data={\u0026#39;slug\u0026#39;: blog.slug}) self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json().get(\u0026#39;title\u0026#39;), name) Conclusion Testing is made easier by libraries like Factory boy, Faker etc. So we should use them write test cases faster.\nThats it. Thank you for reading. Let me know if you have any questions in comments section below.\nCheers!!\n","description":"“I\u0026rsquo;m not a great programmer; I\u0026rsquo;m just a good programmer with great habits.” ― Kent Beck\n Test Driven Development - in short TDD is a practice where you write the tests first then the actual code. It makes the code less vulnerable and it makes a testable software rather than writing the software, then test it."},{"date_published":"2018-12-21T23:00:00Z","date_modified":"2022-07-28T22:03:00+02:00","date":"December 21, 2018","id":"https://ruddra.com/moving-to-hugo/","url":"https://ruddra.com/moving-to-hugo/","title":"Bye Bye Ghost, Hello Hugo","image":"https://ruddra.com/content/images/2020/03/move_on.jpg","tags":["Hugo","Ghost"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003e“The Only Thing That Is Constant Is Change -”\n― Heraclitus\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis blog site has changed quite a lot since the begining. I initially developed it as a Django application. It was part of my learning process, and I hosted it in a private shared server.\u003c/p\u003e\n\u003cp\u003eBut unfortunatly, good days came to an end, I had to give up that hosting for costing. So I was looking for a solution which will allow me to host it for free(as I already purchased the domain). Then I found out about github static page hosting.\u003c/p\u003e\n\u003cp\u003eInitially I tried with \u003ca href=\"http://octopress.org/\"\u003eOctopress\u003c/a\u003e. It was an awesome, till it wasn\u0026rsquo;t anymore. I had really hard time using it with builds and configuration. Once my PC crashed, and it felt like the end of the world to fix the octopress.\u003c/p\u003e\n\u003cp\u003eThen, to resolve that issue, I started using \u003ca href=\"https://ghost.org/\"\u003eghost\u003c/a\u003e. Up till now, I have been using it. Its a fantastic tool for blogging with superb interface, markdown support and so on. Initially I used \u003ca href=\"https://github.com/axitkhurana/buster\"\u003eghost buster\u003c/a\u003e for generating the static site. I was stuck with ghost 0.11 for a long time, because upgrade was a hassel. But I finally did that using docker.\u003c/p\u003e\n\u003cp\u003eBut, again I started to face troubles with this setup. As \u003ccode\u003ebuster\u003c/code\u003e is not activly maintained, and ghost was evolving, it was no longer competible with latest ghost. So I started to use a custom fork of \u003ccode\u003ebuster\u003c/code\u003e. It worked fine with some manual tweaking. \u003ca href=\"https://github.com/ruddra/buster\"\u003eHere is the tweaked version\u003c/a\u003e. I had to rename every reference from \u003ccode\u003elocalhost\u003c/code\u003e to \u003ccode\u003eruddra.com\u003c/code\u003e via IDE. And some links were still ended with \u003ccode\u003eindex.html\u003c/code\u003e. Which I had to fix time to time.\u003c/p\u003e\n\u003cp\u003eBut there was a huge struggle which came in, when I tried to migrate ghost from 1.11 to 2. All my route paths changed, and it was a disaster. I put a hack on the 404 page to redirect older urls to newer ones. But user experince or SEO was pretty bad.\u003c/p\u003e\n\u003cp\u003eThing is that, \u003cstrong\u003eghost\u003c/strong\u003e isn\u0026rsquo;t built for static site, \u003cstrong\u003ebuster\u003c/strong\u003e is itself a hack tool to get ghost\u0026rsquo;s contents. Still, \u003cstrong\u003eghost\u003c/strong\u003e is good for personal blogging or if you host it yourself. I have a docker version of \u003ca href=\"https://github.com/ruddra/docker-ghost\"\u003eghost\u003c/a\u003e to make it usable in any platform/nodejs version.\u003c/p\u003e\n\u003cp\u003eFinally, by going through several blog sites, I found \u003ccode\u003eHugo\u003c/code\u003e. Its really fast and most importantly it has \u003ca href=\"https://gohugo.io/hosting-and-deployment/hosting-on-github/\"\u003estatic page generation support\u003c/a\u003e. Also, it fixed my url issues with \u003ca href=\"https://gohugo.io/content-management/urls/#how-hugo-aliases-work\"\u003eurl aliases\u003c/a\u003e. I was able to map my old urls to new one.\u003c/p\u003e\n\u003cp\u003eSo far so good. I am really enjoying Hugo, and transition from Ghost to Hugo was very smooth, thanks to \u003ca href=\"https://rmoff.net/2018/12/17/moving-from-ghost-to-hugo/\"\u003ethis post\u003c/a\u003e. I am using Hermit theme, which looks really cool.\u003c/p\u003e\n\u003cp\u003eFinally, thank you Ghost, I will miss you. But I am looking forward to Hugo for upcoming future.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBTW\u003c/strong\u003e I have moved out of using Disqus. Although it is fine commenting mechanism(still recommended) but using a opensource solution is always tempting. Also in \u003ca href=\"https://utteranc.es/\"\u003ehttps://utteranc.es/\u003c/a\u003e provides tracking free commenting mechanism and stores comments in github issues.\u003c/p\u003e\n","content":" “The Only Thing That Is Constant Is Change -” ― Heraclitus\n This blog site has changed quite a lot since the begining. I initially developed it as a Django application. It was part of my learning process, and I hosted it in a private shared server.\nBut unfortunatly, good days came to an end, I had to give up that hosting for costing. So I was looking for a solution which will allow me to host it for free(as I already purchased the domain). Then I found out about github static page hosting.\nInitially I tried with Octopress. It was an awesome, till it wasn\u0026rsquo;t anymore. I had really hard time using it with builds and configuration. Once my PC crashed, and it felt like the end of the world to fix the octopress.\nThen, to resolve that issue, I started using ghost. Up till now, I have been using it. Its a fantastic tool for blogging with superb interface, markdown support and so on. Initially I used ghost buster for generating the static site. I was stuck with ghost 0.11 for a long time, because upgrade was a hassel. But I finally did that using docker.\nBut, again I started to face troubles with this setup. As buster is not activly maintained, and ghost was evolving, it was no longer competible with latest ghost. So I started to use a custom fork of buster. It worked fine with some manual tweaking. Here is the tweaked version. I had to rename every reference from localhost to ruddra.com via IDE. And some links were still ended with index.html. Which I had to fix time to time.\nBut there was a huge struggle which came in, when I tried to migrate ghost from 1.11 to 2. All my route paths changed, and it was a disaster. I put a hack on the 404 page to redirect older urls to newer ones. But user experince or SEO was pretty bad.\nThing is that, ghost isn\u0026rsquo;t built for static site, buster is itself a hack tool to get ghost\u0026rsquo;s contents. Still, ghost is good for personal blogging or if you host it yourself. I have a docker version of ghost to make it usable in any platform/nodejs version.\nFinally, by going through several blog sites, I found Hugo. Its really fast and most importantly it has static page generation support. Also, it fixed my url issues with url aliases. I was able to map my old urls to new one.\nSo far so good. I am really enjoying Hugo, and transition from Ghost to Hugo was very smooth, thanks to this post. I am using Hermit theme, which looks really cool.\nFinally, thank you Ghost, I will miss you. But I am looking forward to Hugo for upcoming future.\nBTW I have moved out of using Disqus. Although it is fine commenting mechanism(still recommended) but using a opensource solution is always tempting. Also in https://utteranc.es/ provides tracking free commenting mechanism and stores comments in github issues.\n","description":"“The Only Thing That Is Constant Is Change -” ― Heraclitus\n This blog site has changed quite a lot since the begining. I initially developed it as a Django application. It was part of my learning process, and I hosted it in a private shared server.\nBut unfortunatly, good days came to an end, I had to give up that hosting for costing."},{"date_published":"2018-10-12T17:25:38Z","date_modified":"2022-07-28T22:03:00+02:00","date":"October 12, 2018","id":"https://ruddra.com/control-application-flow-from-redux-middleware/","url":"https://ruddra.com/control-application-flow-from-redux-middleware/","title":"Control Application Flow from Redux Middleware using React Router 4","image":"https://ruddra.com/content/images/2018/10/redux-middleware.jpg","tags":["React","Redux","React Router"],"content_html":"\u003cp\u003eWhile developing application in \u003cstrong\u003e\u003ca href=\"https://reactjs.org/\"\u003eReactJs\u003c/a\u003e\u003c/strong\u003e with \u003cstrong\u003e\u003ca href=\"https://redux.js.org/\"\u003eRedux\u003c/a\u003e\u003c/strong\u003e and \u003cstrong\u003e\u003ca href=\"https://github.com/ReactTraining/react-router\"\u003eReact Router 4\u003c/a\u003e\u003c/strong\u003e, what I felt is that, there is no direct relationship between application\u0026rsquo;s state and routing. We needed to create those connections inside Components. In each component, we needed to check application state and based on that we made decisions where to go next(if needed).\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#scenario\"\u003eScenario\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#approaches-to-solve-the-issue\"\u003eApproaches to solve the issue\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#even-better-solution\"\u003eEven better solution\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#pros-and-cons\"\u003ePros and cons\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#is-there-any-better-solution\"\u003eIs there any better solution\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"scenario\"\u003eScenario\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s think of a scenario, where we need to call an API, which returns some data or 404. If it returns 404, we will redirect the user to a 404 page. So the \u003cstrong\u003etraditional\u003c/strong\u003e way of doing this is:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eComponent\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;react\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003eactions\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./actions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eclass\u003c/span\u003e \u003cspan class=\"nx\"\u003eHelloWorld\u003c/span\u003e \u003cspan class=\"kr\"\u003eextends\u003c/span\u003e \u003cspan class=\"nx\"\u003eComponent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003ecomponentWillRecieveProps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enextProps\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eapiStatus\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003enextProps\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eapiStatus\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;FAILED\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/not-found\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003ecomponentWillMount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003efetchAPI\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// declaired in routes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eapiStatus\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e/p\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e/div\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003emapToStateProps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eapiStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eapiStatus\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003emapToStateProps\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"nx\"\u003eHelloWorld\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIMHO, this approach is bit messy, because in each component there is some codes regarding application flow, and needs to deal with \u003ca href=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/history.md\"\u003e\u003cstrong\u003ehistory\u003c/strong\u003e object\u003c/a\u003e to change routes. Let\u0026rsquo;s try to get rid of this code.\u003c/p\u003e\n\u003cp\u003eEven if we want to remove this connection(between state and routing) from Component, we need to put it back somewhere else, and the best place is \u003ca href=\"https://redux.js.org/advanced/middleware\"\u003e\u003cstrong\u003eredux middleware\u003c/strong\u003e\u003c/a\u003e. Because, it is able to intercept all the \u003cstrong\u003eactions\u003c/strong\u003e fired and access their payloads. It can even access \u003cstrong\u003eredux store\u003c/strong\u003e to fire actions and use \u003cstrong\u003ereducers\u003c/strong\u003e. But, there is a catch. We can\u0026rsquo;t manipulate routing from there.\u003c/p\u003e\n\u003ch2 id=\"approaches-to-solve-the-issue\"\u003eApproaches to solve the issue\u003c/h2\u003e\n\u003cp\u003eTo overcome this hurdle, we need to use a library named \u003ca href=\"https://github.com/supasate/connected-react-router\"\u003e\u003cstrong\u003econnected-react-router\u003c/strong\u003e\u003c/a\u003e. We can run \u003ccode\u003enpm install ---save connected-react-router\u003c/code\u003e or \u003ccode\u003eyarn add connected-react-router\u003c/code\u003e to install it. Also, need to follow their \u003cstrong\u003e\u003ca href=\"https://github.com/supasate/connected-react-router#usage\"\u003eusage instructions\u003c/a\u003e\u003c/strong\u003e for integrating this library with our react application.\u003c/p\u003e\n\u003cp\u003eBasically, we will be using the \u003ca href=\"https://github.com/supasate/connected-react-router/blob/master/FAQ.md#how-to-navigate-with-redux-action\"\u003e\u003cstrong\u003epush\u003c/strong\u003e\u003c/a\u003e method for updating our routing. We can fire actions with push method from \u003cstrong\u003emiddleware\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eFYI:\u003c/strong\u003e For the following example code, we are going to use \u003ca href=\"https://github.com/reduxjs/redux-thunk\"\u003eredux-thunk\u003c/a\u003e, but if you are comfortable using \u003ca href=\"https://github.com/redux-saga/redux-saga\"\u003eredux-saga\u003c/a\u003e, then please checkout \u003ca href=\"https://github.com/supasate/connected-react-router/blob/master/FAQ.md#in-redux-saga\"\u003e\u003cstrong\u003econnected-react-router\u003c/strong\u003e\u0026rsquo;s example\u003c/a\u003e based on react-saga.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eNow, let\u0026rsquo;s write the middleware for routing:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003epush\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;connected-react-router\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eroutingMiddleware\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eAPI_FAILED\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/not-found\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e \u003cspan class=\"c1\"\u003e// assuming we are using redux thunk\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd use it inside redux store:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eroutingMiddleware\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./middlewares\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003estore\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ecreateStore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003econnectRouter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"nx\"\u003erootReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003einitialState\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003ecompose\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003eapplyMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003erouterMiddleware\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehistory\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003eroutingMiddleware\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e// other middlewares\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso, let\u0026rsquo;s not forget to remove routing related codes from Component. After that, we are ready to go!!\u003c/p\u003e\n\u003cp\u003eBut, let us go \u003cstrong\u003eone more step\u003c/strong\u003e further, that is controlling the whole flow from middleware. For that, we need to create some actions:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;GO_TO_PAGE_ONE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_TWO\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;GO_TO_PAGE_TWO\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoToPageOne\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003egoToPageTwo\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_TWO\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd them in the Component:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"nx\"\u003eReact\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eComponent\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;react\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nx\"\u003eas\u003c/span\u003e \u003cspan class=\"nx\"\u003eactions\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;./actions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eclass\u003c/span\u003e \u003cspan class=\"nx\"\u003eHelloWorldAgain\u003c/span\u003e \u003cspan class=\"kr\"\u003eextends\u003c/span\u003e \u003cspan class=\"nx\"\u003eComponent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"nx\"\u003eonClick\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egoToPageOne\u003c/span\u003e\u003cspan class=\"p\"\u003e()}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eGo\u003c/span\u003e \u003cspan class=\"nx\"\u003eto\u003c/span\u003e \u003cspan class=\"nx\"\u003ePage\u003c/span\u003e \u003cspan class=\"nx\"\u003eOne\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e/button\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ebutton\u003c/span\u003e \u003cspan class=\"nx\"\u003eonClick\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eprops\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egoToPageTwo\u003c/span\u003e\u003cspan class=\"p\"\u003e()}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eGo\u003c/span\u003e \u003cspan class=\"nx\"\u003eto\u003c/span\u003e \u003cspan class=\"nx\"\u003ePage\u003c/span\u003e \u003cspan class=\"nx\"\u003eTwo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e/button\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"err\"\u003e/div\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"nx\"\u003eHelloWorldAgain\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUpdate the middleware, so it will catch any new actions when fired:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eroutingMiddleware\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eAPI_FAILED\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/not-found\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/page-one\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eGOTO_PAGE_TWO\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/page-two\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFantastic!! Now we are controlling our routing from middleware. We don\u0026rsquo;t need to put any routing related code in the Component.\u003c/p\u003e\n\u003ch2 id=\"even-better-solution\"\u003eEven better solution\u003c/h2\u003e\n\u003cp\u003eWait, wait \u0026hellip; There is more to that. There is one more step we need to do, so that we can control the application flow in much better way. That step is using \u003cstrong\u003ereducers\u003c/strong\u003e in \u003cstrong\u003emiddleware\u003c/strong\u003e. Let\u0026rsquo;s think of an example: before a user can go to Page Two, he/she needs to visit Page One first. Let\u0026rsquo;s set up a reducer for accessing page one data:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;../actions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eimport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducers\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nx\"\u003efrom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;redux\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003epageOne\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003estate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"nx\"\u003ecombineReducer\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003epageOne\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003epageOne\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, we can restrict the flow in middleware:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eexport\u003c/span\u003e \u003cspan class=\"kr\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eroutingMiddleware\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eAPI_FAILED\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/not-found\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eGO_TO_PAGE_ONE\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/page-one\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nx\"\u003eGOTO_PAGE_TWO\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetState\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nx\"\u003epageOne\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/page-two\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003estore\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003edispatch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/not-found\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eaction\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThus, we can control our application flow from middleware!!\u003c/p\u003e\n\u003ch2 id=\"pros-and-cons\"\u003ePros and cons\u003c/h2\u003e\n\u003cp\u003eSo far so good, right!! but there are some good side and bad side of this approach:\u003c/p\u003e\n\u003cp\u003eThe pros of this approach are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAll the flow restrictions and redirections in one place(One ring to rule them all !! ;) ). So change it in one place, reflect it everywhere else.\u003c/li\u003e\n\u003cli\u003eAll the routing related codes are in middleware. Means application state will be reflected directly in routing without involving any Component.\u003c/li\u003e\n\u003cli\u003eNo direct relation between Component and Routing (other than route declaration in store).\u003c/li\u003e\n\u003cli\u003eComponent will not have any routing related codes. Means they will be less messy. Means we can detach Components from Routing if we want.\u003c/li\u003e\n\u003cli\u003eComponents can be more reusable.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere are the cons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePerformance could be slower than native implementation.\u003c/li\u003e\n\u003cli\u003eBit of over-engineering to achieve something simple.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"is-there-any-better-solution\"\u003eIs there any better solution\u003c/h2\u003e\n\u003cp\u003eWell, when we were experimenting with this solution, we were almost at the end of our project, where we were heavily dependent on react router 4. But if you are only at the beginning or don\u0026rsquo;t have that much regard for react router 4, then consider using \u003cstrong\u003e\u003ca href=\"https://github.com/faceyspacey/redux-first-router\"\u003eredux first router\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\n","content":"While developing application in ReactJs with Redux and React Router 4, what I felt is that, there is no direct relationship between application\u0026rsquo;s state and routing. We needed to create those connections inside Components. In each component, we needed to check application state and based on that we made decisions where to go next(if needed).Table of contents\u0026nbsp;  Scenario Approaches to solve the issue Even better solution Pros and cons Is there any better solution   \nScenario Let\u0026rsquo;s think of a scenario, where we need to call an API, which returns some data or 404. If it returns 404, we will redirect the user to a 404 page. So the traditional way of doing this is:\nimport React, { Component } from \u0026#34;react\u0026#34;; import * as actions from \u0026#34;./actions\u0026#34;; class HelloWorld extends Component { componentWillRecieveProps(nextProps) { const { apiStatus, history } = nextProps; if (apiStatus === \u0026#34;FAILED\u0026#34;) { history.push(\u0026#34;/not-found\u0026#34;); } } componentWillMount() { this.props.fetchAPI(this.props.match.params.id); // declaired in routes  } render() { return ( \u0026lt;div\u0026gt; \u0026lt;p\u0026gt;{this.props.apiStatus.data}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ); } } function mapToStateProps(state) { return { apiStatus: state.apiStatus, }; } export default connect(mapToStateProps, actions)(HelloWorld); IMHO, this approach is bit messy, because in each component there is some codes regarding application flow, and needs to deal with history object to change routes. Let\u0026rsquo;s try to get rid of this code.\nEven if we want to remove this connection(between state and routing) from Component, we need to put it back somewhere else, and the best place is redux middleware. Because, it is able to intercept all the actions fired and access their payloads. It can even access redux store to fire actions and use reducers. But, there is a catch. We can\u0026rsquo;t manipulate routing from there.\nApproaches to solve the issue To overcome this hurdle, we need to use a library named connected-react-router. We can run npm install ---save connected-react-router or yarn add connected-react-router to install it. Also, need to follow their usage instructions for integrating this library with our react application.\nBasically, we will be using the push method for updating our routing. We can fire actions with push method from middleware.\nFYI: For the following example code, we are going to use redux-thunk, but if you are comfortable using redux-saga, then please checkout connected-react-router\u0026rsquo;s example based on react-saga.\nNow, let\u0026rsquo;s write the middleware for routing:\nimport { push } from \u0026#34;connected-react-router\u0026#34;; export const routingMiddleware = (store) =\u0026gt; (next) =\u0026gt; (action) =\u0026gt; { if (action.type === API_FAILED) { store.dispatch(push(\u0026#34;/not-found\u0026#34;)); // assuming we are using redux thunk  } return next(action); }; And use it inside redux store:\nimport { routingMiddleware } from \u0026#34;./middlewares\u0026#34;; const store = createStore( connectRouter(history)(rootReducer), initialState, compose( applyMiddleware( routerMiddleware(history), routingMiddleware // other middlewares  ) ) ); Also, let\u0026rsquo;s not forget to remove routing related codes from Component. After that, we are ready to go!!\nBut, let us go one more step further, that is controlling the whole flow from middleware. For that, we need to create some actions:\nexport const GO_TO_PAGE_ONE = \u0026#34;GO_TO_PAGE_ONE\u0026#34;; export const GO_TO_PAGE_TWO = \u0026#34;GO_TO_PAGE_TWO\u0026#34;; export function goToPageOne() { return { type: GO_TO_PAGE_ONE, }; } export function goToPageTwo() { return { type: GO_TO_PAGE_TWO, }; } Add them in the Component:\nimport React, { Component } from \u0026#34;react\u0026#34;; import * as actions from \u0026#34;./actions\u0026#34;; class HelloWorldAgain extends Component { render() { return ( \u0026lt;div\u0026gt; \u0026lt;button onClick={this.props.goToPageOne()}\u0026gt;Go to Page One\u0026lt;/button\u0026gt; \u0026lt;button onClick={this.props.goToPageTwo()}\u0026gt;Go to Page Two\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; ); } } export default connect(null, actions)(HelloWorldAgain); Update the middleware, so it will catch any new actions when fired:\nexport const routingMiddleware = (store) =\u0026gt; (next) =\u0026gt; (action) =\u0026gt; { if (action.type === API_FAILED) { store.dispatch(push(\u0026#34;/not-found\u0026#34;)); } else if (action.type === GO_TO_PAGE_ONE) { store.dispatch(push(\u0026#34;/page-one\u0026#34;)); } else if (action.type === GOTO_PAGE_TWO) { store.dispatch(push(\u0026#34;/page-two\u0026#34;)); } return next(action); }; Fantastic!! Now we are controlling our routing from middleware. We don\u0026rsquo;t need to put any routing related code in the Component.\nEven better solution Wait, wait \u0026hellip; There is more to that. There is one more step we need to do, so that we can control the application flow in much better way. That step is using reducers in middleware. Let\u0026rsquo;s think of an example: before a user can go to Page Two, he/she needs to visit Page One first. Let\u0026rsquo;s set up a reducer for accessing page one data:\nimport { GO_TO_PAGE_ONE } from \u0026#34;../actions\u0026#34;; import { combineReducers } from \u0026#34;redux\u0026#34;; function pageOne(state = false, action) { switch (action.type) { case GO_TO_PAGE_ONE: return true; default: return state; } return state; } export default combineReducer({ pageOne: pageOne, }); Then, we can restrict the flow in middleware:\nexport const routingMiddleware = (store) =\u0026gt; (next) =\u0026gt; (action) =\u0026gt; { if (action.type === API_FAILED) { store.dispatch(push(\u0026#34;/not-found\u0026#34;)); } else if (action.type === GO_TO_PAGE_ONE) { store.dispatch(push(\u0026#34;/page-one\u0026#34;)); } else if (action.type === GOTO_PAGE_TWO) { if (store.getState().pageOne == true) { store.dispatch(push(\u0026#34;/page-two\u0026#34;)); } else { store.dispatch(push(\u0026#34;/not-found\u0026#34;)); } } return next(action); }; Thus, we can control our application flow from middleware!!\nPros and cons So far so good, right!! but there are some good side and bad side of this approach:\nThe pros of this approach are:\n All the flow restrictions and redirections in one place(One ring to rule them all !! ;) ). So change it in one place, reflect it everywhere else. All the routing related codes are in middleware. Means application state will be reflected directly in routing without involving any Component. No direct relation between Component and Routing (other than route declaration in store). Component will not have any routing related codes. Means they will be less messy. Means we can detach Components from Routing if we want. Components can be more reusable.  Here are the cons:\n Performance could be slower than native implementation. Bit of over-engineering to achieve something simple.  Is there any better solution Well, when we were experimenting with this solution, we were almost at the end of our project, where we were heavily dependent on react router 4. But if you are only at the beginning or don\u0026rsquo;t have that much regard for react router 4, then consider using redux first router.\n","description":"Build connection between state and routing in React Redux, then control it from Middleware."},{"date_published":"2018-10-11T14:21:22Z","date_modified":"2022-07-28T22:03:00+02:00","date":"October 11, 2018","id":"https://ruddra.com/migration-from-ghost-1-2-to-2-2/","url":"https://ruddra.com/migration-from-ghost-1-2-to-2-2/","title":"Migration From Ghost 1.25.2 to 2.2","image":"https://ruddra.com/content/images/2018/10/Quotefancy-1214417-3840x2160.jpg","tags":["Ghost"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003eThis post is no longer valid as I have moved to Hugo 😄\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#verdict\"\u003eVerdict\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"verdict\"\u003eVerdict\u003c/h2\u003e\n\u003cp\u003eI have just migrated the site from Ghost 1.25.2 to 2.2. As every growth comes with some inevitable pain, thus you can expect a lot of things are broken.\u003c/p\u003e\n\u003cp\u003eHere all the \u003cstrong\u003eURLS\u003c/strong\u003e have been updated. So you have an old URL, for example: \u003ca href=\"https://ruddra.com/2015/09/18/working-with-formset/\"\u003e\u003cstrong\u003ehttps://ruddra.com/2015/09/18/working-with-formset/\u003c/strong\u003e\u003c/a\u003e then it will be accessible at: \u003cstrong\u003e\u003ca href=\"https://ruddra.com/working-with-formset/\"\u003ehttps://ruddra.com/working-with-formset/\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eFeel free to comment here you if are looking for something and still could not find it in the site. I will be more than happy to help.\u003c/p\u003e\n\u003cp\u003eFYI: I have changed the theme again!! This theme is called \u003ca href=\"https://github.com/abowloflrf/nomore\"\u003enomore\u003c/a\u003e. 😄\u003c/p\u003e\n","content":" This post is no longer valid as I have moved to Hugo 😄\n Table of contents\u0026nbsp;  Verdict    Verdict I have just migrated the site from Ghost 1.25.2 to 2.2. As every growth comes with some inevitable pain, thus you can expect a lot of things are broken.\nHere all the URLS have been updated. So you have an old URL, for example: https://ruddra.com/2015/09/18/working-with-formset/ then it will be accessible at: https://ruddra.com/working-with-formset/.\nFeel free to comment here you if are looking for something and still could not find it in the site. I will be more than happy to help.\nFYI: I have changed the theme again!! This theme is called nomore. 😄\n","description":"This post is no longer valid as I have moved to Hugo 😄\n Table of contents\u0026nbsp;  Verdict    Verdict I have just migrated the site from Ghost 1.25.2 to 2.2. As every growth comes with some inevitable pain, thus you can expect a lot of things are broken."},{"date_published":"2018-08-12T16:45:42Z","date_modified":"2022-07-28T22:03:00+02:00","date":"August 12, 2018","id":"https://ruddra.com/openshift-python-pipeline-deployment/","url":"https://ruddra.com/openshift-python-pipeline-deployment/","title":"Automated Deployment to OpenShift Using Jenkins and Webhook","image":"https://ruddra.com/content/images/2020/04/hook.jpg","tags":["OpenShift","Jenkins","CI/CD","Pipeline","DevOps"],"content_html":"\u003cp\u003eThe \u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two\"\u003elast post\u003c/a\u003e was about defining the pipelines. Now it is time to execute them. Also, at the end, we are going to show how to integrate webhook in your repository, so that for a specific event(like Push, Pull request merge etc) it will trigger the pipelines to automatically deploy the latest code to servers.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#creating-python-jenkins-slave\"\u003eCreating python jenkins slave\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-build-config\"\u003eCreate build config\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#running-pipeline\"\u003eRunning pipeline\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#outcome\"\u003eOutcome\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#before-stage-deployment-prompt\"\u003eBefore STAGE deployment prompt\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#full-pipeline-execution\"\u003eFull pipeline execution\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#blue-ocean-pipeline\"\u003eBlue Ocean pipeline\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#pythonnginx-running-in-dev-and-stage-project\"\u003ePython+NGINX running in DEV and STAGE project\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#automated-deployment\"\u003eAutomated deployment\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#bitbucket\"\u003eBitBucket\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#github\"\u003eGithub\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#working-example\"\u003eWorking example\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#useful-resources\"\u003eUseful resources\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"creating-python-jenkins-slave\"\u003eCreating python jenkins slave\u003c/h2\u003e\n\u003cp\u003eMost important step before we start using pipeline is to create a \u003ca href=\"https://wiki.jenkins.io/display/JENKINS/Distributed+builds\"\u003eJenkins Slave\u003c/a\u003e. For our python execution, we need a python slave to execute step 1-4 described in previous post. There is two ways to do that:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWay One:\n\u003col\u003e\n\u003cli\u003eGo to \u003cstrong\u003eManage Jenkins\u003c/strong\u003e(URL: \u003cem\u003eJenkins_Url/manage\u003c/em\u003e)\u003c/li\u003e\n\u003cli\u003eClick on \u003cstrong\u003eConfigure System\u003c/strong\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1458\" height=\"466\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1458 466'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.12-AM_hucc4a8dcc99181c6c7cddc9e267baebdf_78096_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.12-AM_hucc4a8dcc99181c6c7cddc9e267baebdf_78096_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.12-AM_hucc4a8dcc99181c6c7cddc9e267baebdf_78096_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.12-AM_hucc4a8dcc99181c6c7cddc9e267baebdf_78096_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-2.18.12-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.12-AM.jpg\" width=\"1458\" height=\"466\" alt='Screen-Shot-2018-08-12-at-2.18.12-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eThen go to bottom of settings, under \u003cem\u003eKubernetes Pod Template\u003c/em\u003e. Then click on \u003cstrong\u003eAdd Pod Template\u003c/strong\u003e.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1668\" height=\"308\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1668 308'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.19.38-AM_hue09a296977662897343a39d6a5fe23db_17762_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-2.19.38-AM_hue09a296977662897343a39d6a5fe23db_17762_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.19.38-AM_hue09a296977662897343a39d6a5fe23db_17762_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.19.38-AM_hue09a296977662897343a39d6a5fe23db_17762_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-2.19.38-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.19.38-AM.jpg\" width=\"1668\" height=\"308\" alt='Screen-Shot-2018-08-12-at-2.19.38-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eNow add configuration given as the following image:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1668\" height=\"1140\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1668 1140'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.49-AM_hu7eadbc1333b5c94b2360c21a0e721ad5_106555_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.49-AM_hu7eadbc1333b5c94b2360c21a0e721ad5_106555_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.49-AM_hu7eadbc1333b5c94b2360c21a0e721ad5_106555_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.49-AM_hu7eadbc1333b5c94b2360c21a0e721ad5_106555_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-2.18.49-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-2.18.49-AM.jpg\" width=\"1668\" height=\"1140\" alt='Screen-Shot-2018-08-12-at-2.18.49-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\nIf the image is not clear enough then please use the following dictionary:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003eName:\u003c/span\u003e \u003cspan class=\"err\"\u003epython\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003eLabels:\u003c/span\u003e \u003cspan class=\"err\"\u003epython\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// click on add container\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"err\"\u003eContainer\u003c/span\u003e \u003cspan class=\"err\"\u003eTemplate:\u003c/span\u003e \u003cspan class=\"err\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eName:\u003c/span\u003e \u003cspan class=\"err\"\u003ejnlp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eDocker\u003c/span\u003e \u003cspan class=\"err\"\u003eImage:\u003c/span\u003e \u003cspan class=\"err\"\u003eidealo/jenkins-slave-python-centos7:latest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eAlways\u003c/span\u003e \u003cspan class=\"err\"\u003epull\u003c/span\u003e \u003cspan class=\"err\"\u003eimage:\u003c/span\u003e \u003cspan class=\"err\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eWorking\u003c/span\u003e \u003cspan class=\"err\"\u003edirectory:\u003c/span\u003e \u003cspan class=\"err\"\u003e/tmp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"err\"\u003eArguments\u003c/span\u003e \u003cspan class=\"err\"\u003eto\u003c/span\u003e \u003cspan class=\"err\"\u003epass\u003c/span\u003e \u003cspan class=\"err\"\u003eto\u003c/span\u003e \u003cspan class=\"err\"\u003ethe\u003c/span\u003e \u003cspan class=\"err\"\u003ecommand:\u003c/span\u003e \u003cspan class=\"err\"\u003e${computer.jnlpmac\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003ecomputer.name\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eLet us save this configuration by clicking on \u003cstrong\u003eSave\u003c/strong\u003e button.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eWay Two:\nUse this command from \u003ca href=\"https://github.com/idealo/jenkins-ci\"\u003eidealo\u0026rsquo;s repository\u003c/a\u003e:\n\u003ccode\u003eoc create -f https://raw.githubusercontent.com/idealo/jenkins-ci/master/config-map.yaml\u003c/code\u003e\nOr just follow their instructions.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBy the way, there are other jenkins python slaves available in github or other opensource repository. Feel free to use any of your choice. I am using this repository, for this demo purpose.\u003c/p\u003e\n\u003ch2 id=\"create-build-config\"\u003eCreate build config\u003c/h2\u003e\n\u003cp\u003eWe need to import our pipeline to openshift. For that we need to create a Build Config for that. Let\u0026rsquo;s do that:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBuildConfig\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epython-nginx-pipeline\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epython-nginx-pipeline\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eref\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emaster\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;your git repository link\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003estrategy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ejenkinsPipelineStrategy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ejenkinsfilePath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epath/to/Jenkinsfile\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eJenkinsPipeline\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etriggers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003egithub\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGitHub\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003egeneric\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGeneric\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ebitbucket\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBitbucket\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe can save this as \u003ccode\u003ejenkins-pipeline.yaml\u003c/code\u003e. You can import this using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc project cicd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc create -f jenkins-pipeline.yaml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, if you go to web interface of OpenShift and access in url path \u003cem\u003eOPENSHIFT_URL \u0026gt; console \u0026gt; CI/CD project \u0026gt; browse \u0026gt; pipelines\u003c/em\u003e, you should see a new pipeline has been created. You can import the build config directly in openshift web interface as well.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2526\" height=\"296\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2526 296'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screenshot2_hu766eaad709b5faf0c5fd092984fccbae_56571_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screenshot2_hu766eaad709b5faf0c5fd092984fccbae_56571_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screenshot2_hu766eaad709b5faf0c5fd092984fccbae_56571_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screenshot2_hu766eaad709b5faf0c5fd092984fccbae_56571_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screenshot2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screenshot2.jpg\" width=\"2526\" height=\"296\" alt='Screenshot2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"running-pipeline\"\u003eRunning pipeline\u003c/h2\u003e\n\u003cp\u003eYou can run the pipeline using the \u003cstrong\u003eStart Pipeline\u003c/strong\u003e on top right corner of pipeline page. Or you can do that using command line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc start-build python-nginx-pipeline\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"outcome\"\u003eOutcome\u003c/h2\u003e\n\u003cp\u003eHere comes the sweet results of your hard work. You should see the pipeline executions like this:\u003c/p\u003e\n\u003ch3 id=\"before-stage-deployment-prompt\"\u003eBefore STAGE deployment prompt\u003c/h3\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2062\" height=\"612\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2062 612'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.26.14-AM_hu2cd1b7c6ca6e50d46e5199f6dfbec710_80949_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.26.14-AM_hu2cd1b7c6ca6e50d46e5199f6dfbec710_80949_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.26.14-AM_hu2cd1b7c6ca6e50d46e5199f6dfbec710_80949_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.26.14-AM_hu2cd1b7c6ca6e50d46e5199f6dfbec710_80949_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.26.14-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.26.14-AM.jpg\" width=\"2062\" height=\"612\" alt='Screen-Shot-2018-08-12-at-3.26.14-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"full-pipeline-execution\"\u003eFull pipeline execution\u003c/h3\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2096\" height=\"606\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2096 606'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.27.45-AM_hudc1a45775577dfa0538bc5150eefd9fc_90339_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.27.45-AM_hudc1a45775577dfa0538bc5150eefd9fc_90339_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.27.45-AM_hudc1a45775577dfa0538bc5150eefd9fc_90339_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.27.45-AM_hudc1a45775577dfa0538bc5150eefd9fc_90339_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.27.45-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.27.45-AM.jpg\" width=\"2096\" height=\"606\" alt='Screen-Shot-2018-08-12-at-3.27.45-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"blue-ocean-pipeline\"\u003eBlue Ocean pipeline\u003c/h3\u003e\n\u003cp\u003eIf you go to \u003ca href=\"https://wiki.jenkins.io/display/JENKINS/Blue+Ocean+Plugin\"\u003eBlue Ocean\u003c/a\u003e(comes build-in) of Jenkins, then go to your latest build, you should see a beautiful pipeline looks like this:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2482\" height=\"658\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2482 658'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.10-AM_hu8fc7ce358f09ca6dd797a7818cea26ca_93620_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.10-AM_hu8fc7ce358f09ca6dd797a7818cea26ca_93620_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.10-AM_hu8fc7ce358f09ca6dd797a7818cea26ca_93620_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.10-AM_hu8fc7ce358f09ca6dd797a7818cea26ca_93620_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.29.10-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.10-AM.jpg\" width=\"2482\" height=\"658\" alt='Screen-Shot-2018-08-12-at-3.29.10-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eAlso if you click on tests, then you should see the recorded result of tests:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2482\" height=\"680\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2482 680'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.31-AM_hudc5aab1dc1d9c64490aa1a0560661be8_71041_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.31-AM_hudc5aab1dc1d9c64490aa1a0560661be8_71041_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.31-AM_hudc5aab1dc1d9c64490aa1a0560661be8_71041_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.31-AM_hudc5aab1dc1d9c64490aa1a0560661be8_71041_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.29.31-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.31-AM.jpg\" width=\"2482\" height=\"680\" alt='Screen-Shot-2018-08-12-at-3.29.31-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIn Artifacts section, you will see pipeline logs and the artifact file which you have stored in Step 4 of previous post:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2436\" height=\"808\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2436 808'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.38-AM_hu32a18fc3a4315e0cd5d941a83780e113_74447_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.38-AM_hu32a18fc3a4315e0cd5d941a83780e113_74447_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.38-AM_hu32a18fc3a4315e0cd5d941a83780e113_74447_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.38-AM_hu32a18fc3a4315e0cd5d941a83780e113_74447_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.29.38-AM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.29.38-AM.jpg\" width=\"2436\" height=\"808\" alt='Screen-Shot-2018-08-12-at-3.29.38-AM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"pythonnginx-running-in-dev-and-stage-project\"\u003ePython+NGINX running in DEV and STAGE project\u003c/h3\u003e\n\u003cp\u003eYou should see your server is up and running in DEV and STAGE Project.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2060\" height=\"960\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2060 960'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-12.00.08-PM_huf5579ef14490a923047fdbc860849063_111186_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-12.00.08-PM_huf5579ef14490a923047fdbc860849063_111186_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-12.00.08-PM_huf5579ef14490a923047fdbc860849063_111186_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-12.00.08-PM_huf5579ef14490a923047fdbc860849063_111186_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-12.00.08-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-12.00.08-PM.jpg\" width=\"2060\" height=\"960\" alt='Screen-Shot-2018-08-12-at-12.00.08-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"automated-deployment\"\u003eAutomated deployment\u003c/h2\u003e\n\u003cp\u003eLast part of our implementation is automated deployment. For that we are going to use \u003ca href=\"https://developer.github.com/webhooks/#webhooks\"\u003eGithub Webhook\u003c/a\u003e. It will allow us to start a build based on an event in git repository. For starting a build, we need to define \u003ca href=\"https://docs.openshift.com/container-platform/3.5/dev_guide/builds/triggering_builds.html#webhook-triggers\"\u003ewebhook triggers\u003c/a\u003e in Pipeline Build Config. We have defined triggers in our build config. Now we need to copy that trigger link from here:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2126\" height=\"1032\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2126 1032'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screenshot3_huf6c7d80c4eaffc8b708a33ebdd6fcdaa_143306_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screenshot3_huf6c7d80c4eaffc8b708a33ebdd6fcdaa_143306_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screenshot3_huf6c7d80c4eaffc8b708a33ebdd6fcdaa_143306_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screenshot3_huf6c7d80c4eaffc8b708a33ebdd6fcdaa_143306_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screenshot3' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screenshot3.jpg\" width=\"2126\" height=\"1032\" alt='Screenshot3'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eYou can paste this webhook in your repository\u0026rsquo;s webhook settings, for example like this:\u003c/p\u003e\n\u003ch3 id=\"bitbucket\"\u003eBitBucket\u003c/h3\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1334\" height=\"910\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1334 910'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-13-at-9.33.01-PM_hu3f4128ec9b1f60ca11c47b19eb092380_70396_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-13-at-9.33.01-PM_hu3f4128ec9b1f60ca11c47b19eb092380_70396_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-13-at-9.33.01-PM_hu3f4128ec9b1f60ca11c47b19eb092380_70396_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-13-at-9.33.01-PM_hu3f4128ec9b1f60ca11c47b19eb092380_70396_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-13-at-9.33.01-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-13-at-9.33.01-PM.jpg\" width=\"1334\" height=\"910\" alt='Screen-Shot-2018-08-13-at-9.33.01-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"github\"\u003eGithub\u003c/h3\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1220\" height=\"1134\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1220 1134'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-13-at-9.37.32-PM_hu9ce430a992c301f9aba3e66f4f696935_102506_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-13-at-9.37.32-PM_hu9ce430a992c301f9aba3e66f4f696935_102506_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-13-at-9.37.32-PM_hu9ce430a992c301f9aba3e66f4f696935_102506_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-13-at-9.37.32-PM_hu9ce430a992c301f9aba3e66f4f696935_102506_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-13-at-9.37.32-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-13-at-9.37.32-PM.jpg\" width=\"1220\" height=\"1134\" alt='Screen-Shot-2018-08-13-at-9.37.32-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThen for any event(as per your configuration, like push, pull request merge etc) it will trigger a new build. \u003cstrong\u003eFYI:\u003c/strong\u003e this functionality will not work for minishift.\u003c/p\u003e\n\u003ch2 id=\"working-example\"\u003eWorking example\u003c/h2\u003e\n\u003cp\u003eYou will find a working example in \u003ca href=\"https://github.com/ruddra/openshift-python-nginx-pipeline-ci-cd\"\u003emy github repository\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"useful-resources\"\u003eUseful resources\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eIf you want to implement Django Using Pipeline, checkout \u003ca href=\"https://github.com/ruddra/openshift-django/tree/develop\"\u003emy \u003ccode\u003eopenshift-django\u003c/code\u003e repo\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eRead details about Jenkins Python Slave in \u003ca href=\"https://github.com/idealo/jenkins-ci\"\u003ein idealo\u0026rsquo;s repository\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eRead about running NGINX on OpenShift \u003ca href=\"https://torstenwalter.de/openshift/nginx/2017/08/04/nginx-on-openshift.html\"\u003efrom torstenwalter.de\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eRead about CI/CD demo by RedHat in \u003ca href=\"https://github.com/OpenShiftDemos/\"\u003eredhat\u0026rsquo;s github repository\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eFor \u003cstrong\u003ePython2.7\u003c/strong\u003e based deployment use this \u003ca href=\"https://hub.docker.com/r/ruddra/jenkins-slave-python27/\"\u003eJenkins Slave from dockerhub(developed by me)\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThank you for reading. Please let me know your feedback by commenting below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n","content":"The last post was about defining the pipelines. Now it is time to execute them. Also, at the end, we are going to show how to integrate webhook in your repository, so that for a specific event(like Push, Pull request merge etc) it will trigger the pipelines to automatically deploy the latest code to servers.Table of contents\u0026nbsp;  Creating python jenkins slave Create build config Running pipeline Outcome  Before STAGE deployment prompt Full pipeline execution Blue Ocean pipeline Python+NGINX running in DEV and STAGE project   Automated deployment  BitBucket Github   Working example Useful resources   \nCreating python jenkins slave Most important step before we start using pipeline is to create a Jenkins Slave. For our python execution, we need a python slave to execute step 1-4 described in previous post. There is two ways to do that:\n Way One:  Go to Manage Jenkins(URL: Jenkins_Url/manage) Click on Configure System    Then go to bottom of settings, under Kubernetes Pod Template. Then click on Add Pod Template.    Now add configuration given as the following image:    If the image is not clear enough then please use the following dictionary:  { Name: python Labels: python // click on add container  Container Template: { Name: jnlp Docker Image: idealo/jenkins-slave-python-centos7:latest Always pull image: True Working directory: /tmp Arguments to pass to the command: ${computer.jnlpmac}${computer.name} } } Let us save this configuration by clicking on Save button.   Way Two: Use this command from idealo\u0026rsquo;s repository: oc create -f https://raw.githubusercontent.com/idealo/jenkins-ci/master/config-map.yaml Or just follow their instructions.  By the way, there are other jenkins python slaves available in github or other opensource repository. Feel free to use any of your choice. I am using this repository, for this demo purpose.\nCreate build config We need to import our pipeline to openshift. For that we need to create a Build Config for that. Let\u0026rsquo;s do that:\napiVersion:v1kind:BuildConfigmetadata:labels:app:python-nginx-pipelinename:python-nginx-pipelinespec:source:git:ref:masteruri:\u0026lt;your git repository link\u0026gt;strategy:jenkinsPipelineStrategy:jenkinsfilePath:path/to/Jenkinsfiletype:JenkinsPipelinetriggers:- github:secret:secrettype:GitHub- generic:secret:secrettype:Generic- bitbucket:secret:secrettype:BitbucketWe can save this as jenkins-pipeline.yaml. You can import this using:\noc project cicd oc create -f jenkins-pipeline.yaml Now, if you go to web interface of OpenShift and access in url path OPENSHIFT_URL \u0026gt; console \u0026gt; CI/CD project \u0026gt; browse \u0026gt; pipelines, you should see a new pipeline has been created. You can import the build config directly in openshift web interface as well.   \nRunning pipeline You can run the pipeline using the Start Pipeline on top right corner of pipeline page. Or you can do that using command line:\noc start-build python-nginx-pipeline Outcome Here comes the sweet results of your hard work. You should see the pipeline executions like this:\nBefore STAGE deployment prompt    Full pipeline execution    Blue Ocean pipeline If you go to Blue Ocean(comes build-in) of Jenkins, then go to your latest build, you should see a beautiful pipeline looks like this:   \nAlso if you click on tests, then you should see the recorded result of tests:   \nIn Artifacts section, you will see pipeline logs and the artifact file which you have stored in Step 4 of previous post:   \nPython+NGINX running in DEV and STAGE project You should see your server is up and running in DEV and STAGE Project.   \nAutomated deployment Last part of our implementation is automated deployment. For that we are going to use Github Webhook. It will allow us to start a build based on an event in git repository. For starting a build, we need to define webhook triggers in Pipeline Build Config. We have defined triggers in our build config. Now we need to copy that trigger link from here:   \nYou can paste this webhook in your repository\u0026rsquo;s webhook settings, for example like this:\nBitBucket    Github    Then for any event(as per your configuration, like push, pull request merge etc) it will trigger a new build. FYI: this functionality will not work for minishift.\nWorking example You will find a working example in my github repository.\nUseful resources  If you want to implement Django Using Pipeline, checkout my openshift-django repo. Read details about Jenkins Python Slave in in idealo\u0026rsquo;s repository. Read about running NGINX on OpenShift from torstenwalter.de. Read about CI/CD demo by RedHat in redhat\u0026rsquo;s github repository. For Python2.7 based deployment use this Jenkins Slave from dockerhub(developed by me).  Thank you for reading. Please let me know your feedback by commenting below.\nCheers!!\n","description":"The last post was about defining the pipelines. Now it is time to execute them. Also, at the end, we are going to show how to integrate webhook in your repository, so that for a specific event(like Push, Pull request merge etc) it will trigger the pipelines to automatically deploy the latest code to servers."},{"date_published":"2018-08-11T20:41:04Z","date_modified":"2022-07-28T22:03:00+02:00","date":"August 11, 2018","id":"https://ruddra.com/openshift-python-jenkins-pipeline-two/","url":"https://ruddra.com/openshift-python-jenkins-pipeline-two/","title":"Writing Jenkins Pipeline For OpenShift Deployment: Part Two","image":"https://ruddra.com/content/images/2020/06/pipeline2.jpg","tags":["OpenShift","Jenkins","Pipeline","CI/CD","DevOps"],"content_html":"\u003cp\u003eIn \u003ca href=\"/openshift-python-jenkins-pipeline-one/\"\u003eprevious article\u003c/a\u003e, we covered step 1-5 which would prepare the code and make sure it is ready to be deployed to OpenShift. Now we are going to use the next steps to deploy that code.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#step-6-create-build-configuration-in-openshift\"\u003eStep 6: create build configuration in OpenShift\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-7-build-image\"\u003eStep 7: build image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-8-deploy-to-openshift-in-dev\"\u003eStep 8: deploy to OpenShift in DEV\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-9-promote-image-to-stage\"\u003eStep 9: promote image to STAGE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-10-deploy-to-openshift-in-stage\"\u003eStep 10: deploy to OpenShift in STAGE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-11-scale-in-stage\"\u003eStep 11: scale in STAGE\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"step-6-create-build-configuration-in-openshift\"\u003eStep 6: create build configuration in OpenShift\u003c/h2\u003e\n\u003cp\u003eAfter Step 5, we will have a nice compressed file containing what we need for building our app in openshift. Before start building the app, we need to have a Build Configuration inside OpenShift App.\nBasically \u003ca href=\"https://docs.openshift.com/container-platform/3.4/dev_guide/builds/index.html#dev-guide-what-is-a-build\"\u003eBuild Configuration\u003c/a\u003e is sort of a skeleton which contains instructions on how your source will be build. There are many strategies for build config. We will be using \u003ccode\u003eDocker\u003c/code\u003e strategy for building our code. That is why we have put the \u003cstrong\u003eDockerfile\u003c/strong\u003e inside our compressed file.\nIn build config, you need to provide from which source you want to build your code from. We will be using \u003ccode\u003ebinary\u003c/code\u003e. Meaning we will provide a compressed file to openshift so that it can start building the image from it.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Create Image Builder\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;bc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexists\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--name=${TEMPLATE_NAME}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--docker-image=docker.io/nginx:mainline-alpine\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--binary=true\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis stage of pipeline will only execute once when the pipeline is executed for first time. Later when pipeline is executed for second time, third time\u0026hellip; and so on, this stage will be skipped. Because build configuration is made only once. You can check if a build configuration is being created using \u003ccode\u003eoc get bc\u003c/code\u003e in \u003cstrong\u003eterminal\u003c/strong\u003e (in project \u003cstrong\u003edev\u003c/strong\u003e) from your local machine. You can also check it using web interface of openshift in \u003cem\u003eCI/CD projects \u0026gt; Builds\u003c/em\u003e.\n\u003ccode\u003eopenshift.withCluster\u003c/code\u003e and \u003ccode\u003eopenshift.withProject\u003c/code\u003e is basically openshift APIs open to \u003ca href=\"https://github.com/openshift/jenkins-plugin\"\u003eJenkins plugin\u003c/a\u003e. Using these APIs, you can execute commands inside openshift cluster and projects. Our \u003ca href=\"https://www.mankier.com/1/oc-new-build\"\u003enew-build\u003c/a\u003e command is being executed inside \u003ccode\u003eDEV_PROJECT\u003c/code\u003e. Value of \u003ccode\u003eDEV_PROJECT\u003c/code\u003e is defined in environment variable, and the value is \u003ccode\u003edev\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNB\u003c/strong\u003e: \u003cem\u003eBuild Config\u003c/em\u003e, \u003cem\u003eDeployment Config\u003c/em\u003e, \u003cem\u003eService\u003c/em\u003e, \u003cem\u003eImage\u003c/em\u003e, \u003cem\u003eStorage\u003c/em\u003e etc are Kubernetes basics. These terms will come more frequently in next stages. If you have some idea about them, it might help you to understand this tutorial even more. 😄\u003c/p\u003e\n\u003ch2 id=\"step-7-build-image\"\u003eStep 7: build image\u003c/h2\u003e\n\u003cp\u003eOutcome of a successful build is an Image. So after a successful build, you will see an image inside OpenShift in web interface(at \u003cem\u003eOpenShift_Url \u0026gt; console \u0026gt; DEV Project \u0026gt; browse \u0026gt; images\u003c/em\u003e). The most recent build outcomes to image tagged by \u003cem\u003elatest\u003c/em\u003e. This is an important information, which will come handy in our next steps.\nIn our \u003cem\u003ebuild configuration\u003c/em\u003e(defined in last step), we configured that the build will executed from binary. Meaning if will expect a archive file to start the build process. As we have a archive file from step 4, we will use that file for this purpose.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Build Image\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;bc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;$TEMPLATE_NAME\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003estartBuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--from-archive=${ARTIFACT_FOLDER}/${APPLICATION_NAME}_${BUILD_NUMBER}.tar.gz\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--wait=true\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eopenshift.selector\u003c/code\u003e selects the build config named \u003ccode\u003epython-nginx\u003c/code\u003e (this value is set in \u003ccode\u003e${TEMPLATE_NAME}\u003c/code\u003e). Using that build config, it initiates a build from the \u003cstrong\u003etar.gz\u003c/strong\u003e file. After the build is complete, you will see an image named \u003ccode\u003epython-nginx\u003c/code\u003e and it should be tagged as \u003cem\u003elatest\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"step-8-deploy-to-openshift-in-dev\"\u003eStep 8: deploy to OpenShift in DEV\u003c/h2\u003e\n\u003cp\u003eIn this stage, we will deploy the image to \u003cstrong\u003eDEV_PROJECT\u003c/strong\u003e. Basically a \u003ca href=\"https://docs.openshift.com/enterprise/3.0/dev_guide/deployments.html#creating-a-deployment-configuration\"\u003eDeployment Configuration\u003c/a\u003e is created in this step. Deployment Configuration is kind of like Build Config, but this is related to deployment. We will be using \u003ca href=\"https://docs.openshift.com/enterprise/3.1/dev_guide/new_app.html#specifying-an-image\"\u003enew-app\u003c/a\u003e to create our project from image built in last stage.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Deploy to DEV\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;dc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexists\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eenv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewApp\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}:latest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enarrow\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;svc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexpose\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--port=${PORT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003edc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;dc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003espec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ereplicas\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003edc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eavailableReplicas\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003esleep\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis step is executed only in first time execution of pipeline. In next pipeline builds, this stage is skipped. But still, a deployment will be automatically done after each build is completed successfully. Because of \u003ca href=\"https://docs.openshift.com/container-platform/3.3/dev_guide/deployments/basic_deployment_operations.html#image-change-trigger\"\u003eImage Change Trigger\u003c/a\u003e. Meaning, after each new image, an automated deployment will initiate. New deployment means, it will generate new pods and will destroy the old pods. There are two strategies for this change, \u003ca href=\"https://docs.openshift.com/container-platform/3.3/dev_guide/deployments/deployment_strategies.html#rolling-strategy\"\u003erolling strategy\u003c/a\u003e and \u003ca href=\"https://docs.openshift.com/container-platform/3.3/dev_guide/deployments/deployment_strategies.html#recreate-strategy\"\u003erecreate strategy\u003c/a\u003e.\n\u003ccode\u003eapp.narrow(\u0026quot;svc\u0026quot;).expose(\u0026quot;--port=${PORT}\u0026quot;);\u003c/code\u003e this command will use the \u003cstrong\u003eservice\u003c/strong\u003e built by \u003ccode\u003enew-app\u003c/code\u003e; then expose its \u003cstrong\u003eroute\u003c/strong\u003e to port 8081, this value is set in Environment variable as well. You can see the new service and ports as well using \u003ccode\u003eoc get svc\u003c/code\u003e and \u003ccode\u003eoc get routes\u003c/code\u003e in \u003cstrong\u003edev\u003c/strong\u003e project from your local machine.\u003c/p\u003e\n\u003ch2 id=\"step-9-promote-image-to-stage\"\u003eStep 9: promote image to STAGE\u003c/h2\u003e\n\u003cp\u003eIn this stage, jenkins will prompt you to promote or abort regarding if you want to continue deployment to \u003cstrong\u003estage\u003c/strong\u003e project or not. If you click in promote(in Jenkins), then openshift promote the image created in step 6 to stage and tag it as \u003ccode\u003epromoteToQA\u003c/code\u003e(as per defined in environment).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Promote to STAGE?\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003etimeout\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003etime:\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eunit:\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;MINUTES\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"n\"\u003einput\u003c/span\u003e \u003cspan class=\"nl\"\u003emessage:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Promote to STAGE?\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eok:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Promote\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${DEV_PROJECT}/${TEMPLATE_NAME}:latest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${STAGE_PROJECT}/${TEMPLATE_NAME}:${STAGE_TAG}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-10-deploy-to-openshift-in-stage\"\u003eStep 10: deploy to OpenShift in STAGE\u003c/h2\u003e\n\u003cp\u003eIn this step, we will be looking if any previous deployment is done in STAGE PROJECT. If it exists, then we will delete \u003cem\u003eservice\u003c/em\u003e, \u003cem\u003eroute\u003c/em\u003e, \u003cem\u003edeployment config\u003c/em\u003e of that deployment, and create a new app using the new image promoted in last step. Then will expose the route for this application in 8081 port.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Rollout to STAGE\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSTAGE_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;dc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;${TEMPLATE_NAME}\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexists\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                      \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;dc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;${TEMPLATE_NAME}\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                      \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;svc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;${TEMPLATE_NAME}\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                       \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;route\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;${TEMPLATE_NAME}\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewApp\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}:${STAGE_TAG}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003enarrow\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;svc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexpose\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--port=${PORT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-11-scale-in-stage\"\u003eStep 11: scale in STAGE\u003c/h2\u003e\n\u003cp\u003eWe will be using \u003ca href=\"https://jenkins.io/doc/pipeline/steps/openshift-pipeline/#openshiftscale-scale-openshift-deployment\"\u003eopenshiftScale API\u003c/a\u003e provided by Jenkins OpenShift Plugin. What it does is that, it creates replication of pods according the number of replication information provided to it via parameter \u003ccode\u003ereplicaCount\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Scale in STAGE\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshiftScale\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${STAGE_PROJECT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003edeploymentConfig:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${TEMPLATE_NAME}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ereplicaCount:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;3\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eFYI: This API will be deprecated from oc version 3.11\u003c/p\u003e\u003c/blockquote\u003e\nThis is the last step of our pipeline. Lets save it in a file named \u003cstrong\u003eJenkinsfile\u003c/strong\u003e. \u003cem\u003ePlease commit and push your changes to your Git repository\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe Jenkins file should look like \u003ca href=\"https://raw.githubusercontent.com/ruddra/openshift-python-nginx/master/openshift/pipelines/Jenkinsfile\"\u003ethis code on github\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eLets discuss more about how to deploy our application using this pipeline in \u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three\"\u003enext article\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFeel free to comment if you find anything unclear. Thanks for reading.\nCheers!!\u003c/p\u003e\n","content":"In previous article, we covered step 1-5 which would prepare the code and make sure it is ready to be deployed to OpenShift. Now we are going to use the next steps to deploy that code.Table of contents\u0026nbsp;  Step 6: create build configuration in OpenShift Step 7: build image Step 8: deploy to OpenShift in DEV Step 9: promote image to STAGE Step 10: deploy to OpenShift in STAGE Step 11: scale in STAGE Conclusion   \nStep 6: create build configuration in OpenShift After Step 5, we will have a nice compressed file containing what we need for building our app in openshift. Before start building the app, we need to have a Build Configuration inside OpenShift App. Basically Build Configuration is sort of a skeleton which contains instructions on how your source will be build. There are many strategies for build config. We will be using Docker strategy for building our code. That is why we have put the Dockerfile inside our compressed file. In build config, you need to provide from which source you want to build your code from. We will be using binary. Meaning we will provide a compressed file to openshift so that it can start building the image from it.\nstage(\u0026#39;Create Image Builder\u0026#39;) { when { expression { openshift.withCluster() { openshift.withProject(DEV_PROJECT) { return !openshift.selector(\u0026#34;bc\u0026#34;, \u0026#34;${TEMPLATE_NAME}\u0026#34;).exists(); } } } } steps { script { openshift.withCluster() { openshift.withProject(DEV_PROJECT) { openshift.newBuild(\u0026#34;--name=${TEMPLATE_NAME}\u0026#34;, \u0026#34;--docker-image=docker.io/nginx:mainline-alpine\u0026#34;, \u0026#34;--binary=true\u0026#34;) } } } } } This stage of pipeline will only execute once when the pipeline is executed for first time. Later when pipeline is executed for second time, third time\u0026hellip; and so on, this stage will be skipped. Because build configuration is made only once. You can check if a build configuration is being created using oc get bc in terminal (in project dev) from your local machine. You can also check it using web interface of openshift in CI/CD projects \u0026gt; Builds. openshift.withCluster and openshift.withProject is basically openshift APIs open to Jenkins plugin. Using these APIs, you can execute commands inside openshift cluster and projects. Our new-build command is being executed inside DEV_PROJECT. Value of DEV_PROJECT is defined in environment variable, and the value is dev.\nNB: Build Config, Deployment Config, Service, Image, Storage etc are Kubernetes basics. These terms will come more frequently in next stages. If you have some idea about them, it might help you to understand this tutorial even more. 😄\nStep 7: build image Outcome of a successful build is an Image. So after a successful build, you will see an image inside OpenShift in web interface(at OpenShift_Url \u0026gt; console \u0026gt; DEV Project \u0026gt; browse \u0026gt; images). The most recent build outcomes to image tagged by latest. This is an important information, which will come handy in our next steps. In our build configuration(defined in last step), we configured that the build will executed from binary. Meaning if will expect a archive file to start the build process. As we have a archive file from step 4, we will use that file for this purpose.\nstage(\u0026#39;Build Image\u0026#39;) { steps { script { openshift.withCluster() { openshift.withProject(env.DEV_PROJECT) { openshift.selector(\u0026#34;bc\u0026#34;, \u0026#34;$TEMPLATE_NAME\u0026#34;).startBuild(\u0026#34;--from-archive=${ARTIFACT_FOLDER}/${APPLICATION_NAME}_${BUILD_NUMBER}.tar.gz\u0026#34;, \u0026#34;--wait=true\u0026#34;) } } } } } openshift.selector selects the build config named python-nginx (this value is set in ${TEMPLATE_NAME}). Using that build config, it initiates a build from the tar.gz file. After the build is complete, you will see an image named python-nginx and it should be tagged as latest.\nStep 8: deploy to OpenShift in DEV In this stage, we will deploy the image to DEV_PROJECT. Basically a Deployment Configuration is created in this step. Deployment Configuration is kind of like Build Config, but this is related to deployment. We will be using new-app to create our project from image built in last stage.\nstage(\u0026#39;Deploy to DEV\u0026#39;) { when { expression { openshift.withCluster() { openshift.withProject(env.DEV_PROJECT) { return !openshift.selector(\u0026#39;dc\u0026#39;, \u0026#34;${TEMPLATE_NAME}\u0026#34;).exists() } } } } steps { script { openshift.withCluster() { openshift.withProject(env.DEV_PROJECT) { def app = openshift.newApp(\u0026#34;${TEMPLATE_NAME}:latest\u0026#34;) app.narrow(\u0026#34;svc\u0026#34;).expose(\u0026#34;--port=${PORT}\u0026#34;); def dc = openshift.selector(\u0026#34;dc\u0026#34;, \u0026#34;${TEMPLATE_NAME}\u0026#34;) while (dc.object().spec.replicas != dc.object().status.availableReplicas) { sleep 10 } } } } } } This step is executed only in first time execution of pipeline. In next pipeline builds, this stage is skipped. But still, a deployment will be automatically done after each build is completed successfully. Because of Image Change Trigger. Meaning, after each new image, an automated deployment will initiate. New deployment means, it will generate new pods and will destroy the old pods. There are two strategies for this change, rolling strategy and recreate strategy. app.narrow(\u0026quot;svc\u0026quot;).expose(\u0026quot;--port=${PORT}\u0026quot;); this command will use the service built by new-app; then expose its route to port 8081, this value is set in Environment variable as well. You can see the new service and ports as well using oc get svc and oc get routes in dev project from your local machine.\nStep 9: promote image to STAGE In this stage, jenkins will prompt you to promote or abort regarding if you want to continue deployment to stage project or not. If you click in promote(in Jenkins), then openshift promote the image created in step 6 to stage and tag it as promoteToQA(as per defined in environment).\nstage(\u0026#39;Promote to STAGE?\u0026#39;) { steps { timeout(time:15, unit:\u0026#39;MINUTES\u0026#39;) { input message: \u0026#34;Promote to STAGE?\u0026#34;, ok: \u0026#34;Promote\u0026#34; } script { openshift.withCluster() { openshift.tag(\u0026#34;${DEV_PROJECT}/${TEMPLATE_NAME}:latest\u0026#34;, \u0026#34;${STAGE_PROJECT}/${TEMPLATE_NAME}:${STAGE_TAG}\u0026#34;) } } } } Step 10: deploy to OpenShift in STAGE In this step, we will be looking if any previous deployment is done in STAGE PROJECT. If it exists, then we will delete service, route, deployment config of that deployment, and create a new app using the new image promoted in last step. Then will expose the route for this application in 8081 port.\nstage(\u0026#39;Rollout to STAGE\u0026#39;) { steps { script { openshift.withCluster() { openshift.withProject(STAGE_PROJECT) { if (openshift.selector(\u0026#39;dc\u0026#39;, \u0026#39;${TEMPLATE_NAME}\u0026#39;).exists()) { openshift.selector(\u0026#39;dc\u0026#39;, \u0026#39;${TEMPLATE_NAME}\u0026#39;).delete() openshift.selector(\u0026#39;svc\u0026#39;, \u0026#39;${TEMPLATE_NAME}\u0026#39;).delete() openshift.selector(\u0026#39;route\u0026#39;, \u0026#39;${TEMPLATE_NAME}\u0026#39;).delete() } openshift.newApp(\u0026#34;${TEMPLATE_NAME}:${STAGE_TAG}\u0026#34;).narrow(\u0026#34;svc\u0026#34;).expose(\u0026#34;--port=${PORT}\u0026#34;) } } } } } Step 11: scale in STAGE We will be using openshiftScale API provided by Jenkins OpenShift Plugin. What it does is that, it creates replication of pods according the number of replication information provided to it via parameter replicaCount.\nstage(\u0026#39;Scale in STAGE\u0026#39;) { steps { script { openshiftScale(namespace: \u0026#34;${STAGE_PROJECT}\u0026#34;, deploymentConfig: \u0026#34;${TEMPLATE_NAME}\u0026#34;, replicaCount: \u0026#39;3\u0026#39;) } } }  FYI: This API will be deprecated from oc version 3.11\n This is the last step of our pipeline. Lets save it in a file named Jenkinsfile. Please commit and push your changes to your Git repository.\nThe Jenkins file should look like this code on github.\nConclusion Lets discuss more about how to deploy our application using this pipeline in next article.\nFeel free to comment if you find anything unclear. Thanks for reading. Cheers!!\n","description":"In previous article, we covered step 1-5 which would prepare the code and make sure it is ready to be deployed to OpenShift. Now we are going to use the next steps to deploy that code.Table of contents\u0026nbsp;  Step 6: create build configuration in OpenShift Step 7: build image Step 8: deploy to OpenShift in DEV Step 9: promote image to STAGE Step 10: deploy to OpenShift in STAGE Step 11: scale in STAGE Conclusion"},{"date_published":"2018-08-11T19:41:04Z","date_modified":"2022-07-28T22:03:00+02:00","date":"August 11, 2018","id":"https://ruddra.com/openshift-python-jenkins-pipeline-one/","url":"https://ruddra.com/openshift-python-jenkins-pipeline-one/","title":"Writing Jenkins Pipeline For OpenShift Deployment: Part One","image":"https://ruddra.com/content/images/2020/04/pipeline.jpg","tags":["OpenShift","Jenkins","Pipeline","CI/CD","DevOps"],"content_html":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Pipeline_(computing)\"\u003ePipeline\u003c/a\u003e is a set of instructions, which will be executed as per given sequence and produce a output. \u003ca href=\"https://jenkins.io/doc/book/pipeline/\"\u003eJenkins Pipeline\u003c/a\u003e is simply writing these instructions in Jenkins. These pipelines can be written in Groovy.\u003c/p\u003e\n\u003cp\u003eIn \u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-one\"\u003eprevious post\u003c/a\u003e we have defined deployment structure and made necessary preparations for deployment of a python+gunicorn+nginx+jenkins based project. In this post, we will discuss about the most important part of our CI/CD project, writing jenkins pipeline. This pipeline will provide continuous delivery(CD) for our deployment.\u003c/p\u003e\n\u003cp\u003eThe whole deployment will be done in 11 steps. Step 1-5 will be executed in Jenkins and \u003ca href=\"/openshift-python-jenkins-pipeline-two/\"\u003estep 6-11\u003c/a\u003e will be deploying the code in OpenShift. If you are feeling confused about these stages, don\u0026rsquo;t worry. We will be explaining them one by one. Please keep in mind, with every stage there is a description of possible outcome of the execution of that stage. But in this article, our task is only to create a \u003cstrong\u003epipeline\u003c/strong\u003e, not execute it. In this article, we will cover the steps which will run in jenkins. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#step-1-declaring-agent-and-env-variables\"\u003eStep 1: declaring agent and ENV variables\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-2-get-latest-code\"\u003eStep 2: get latest code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-3-install-dependencies\"\u003eStep 3: install dependencies\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-4-run-tests\"\u003eStep 4: run tests\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#step-5-storing-artifacts\"\u003eStep 5: storing artifacts\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"step-1-declaring-agent-and-env-variables\"\u003eStep 1: declaring agent and ENV variables\u003c/h2\u003e\n\u003cp\u003eWe will declare agent and environment variables in this step.\nIn Jenkins, we need to specify a \u003ca href=\"https://jenkins.io/doc/book/pipeline/syntax/#agent\"\u003ejenkins agent\u003c/a\u003e, in which the pipeline will be executing. We will be using python jenkins slave to execute our pipeline. We will discuss more about jenkins python slave in \u003ca href=\"https://ruddra.com/2018/08/12/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three\"\u003enext article\u003c/a\u003e.\nThe python agent should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epipeline\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eagent\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003enode\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;python\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe can write down our constant values in environment variables. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eenvironment\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eAPPLICATION_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;python-nginx\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eGIT_REPO\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;http://github.com/ruddra/openshift-python-nginx.git\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eGIT_BRANCH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;master\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eSTAGE_TAG\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;promoteToQA\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eSTAGE_PROJECT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;stage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eTEMPLATE_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;python-nginx\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eARTIFACT_FOLDER\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;target\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ePORT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e8081\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSome variable declaration may seem confusing, but we will use them in next steps.\u003c/p\u003e\n\u003ch2 id=\"step-2-get-latest-code\"\u003eStep 2: get latest code\u003c/h2\u003e\n\u003cp\u003eJenkins Pipeline execution is done in stages. All the stages of pipeline will be inside in one stages dictionary. Like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estages\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;One\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Do Something\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Two\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e// Do Something\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn first stage, we will be using \u003ca href=\"https://wiki.jenkins.io/display/JENKINS/Git+Plugin\"\u003eGit Plugin\u003c/a\u003e which comes as default with OpenShift Jenkins. We will be using following code for pulling the latest code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Get Latest Code\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003egit\u003c/span\u003e \u003cspan class=\"nl\"\u003ebranch:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${GIT_BRANCH}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eurl:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${GIT_REPO}\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// declared in environment\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-3-install-dependencies\"\u003eStep 3: install dependencies\u003c/h2\u003e\n\u003cp\u003eIn this stage, we will install python dependencies inside in a \u003ca href=\"https://virtualenv.pypa.io/en/stable/\"\u003evirtual environment\u003c/a\u003e. For that, we will first install \u003cem\u003evirtualenv\u003c/em\u003e using \u003ccode\u003epip install virtualenv\u003c/code\u003e. After activating the virtualenv, we will install the dependencies using \u003ccode\u003epip install -r requirements.pip\u003c/code\u003e from dependencies defined in \u003cstrong\u003eapp\u0026gt;requirements.pip\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Install Dependencies\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esh\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        pip install virtualenv\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        virtualenv --no-site-packages .\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        source bin/activate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        pip install -r app/requirements.pip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        deactivate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere we are using \u003ca href=\"https://jenkins.io/doc/book/pipeline/syntax/#scripted-steps\"\u003escripted steps\u003c/a\u003e to execute the commands for installing dependencies.\u003c/p\u003e\n\u003ch2 id=\"step-4-run-tests\"\u003eStep 4: run tests\u003c/h2\u003e\n\u003cp\u003eIn this stage, we will run tests, so that we can make sure if any test fails, pipeline does not execute any further. We will also store the test results using \u003ca href=\"https://wiki.jenkins.io/display/JENKINS/JUnit+Plugin\"\u003eJUnit Plugin\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFirst, we will activate our virtualenv(again!!) then run tests in \u003cstrong\u003eapp\u003c/strong\u003e directory using \u003cem\u003enosetests\u003c/em\u003e. It will export test results in xml format. Then we will store the result using \u003cem\u003eJUnit\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Run Tests\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esh\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        source bin/activate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        nosetests app --with-xunit\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        deactivate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ejunit\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;nosetests.xml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"step-5-storing-artifacts\"\u003eStep 5: storing artifacts\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Artifact_(software_development)\"\u003eArtifact\u003c/a\u003e may sound weird to you if you are familliar with Java. Because we are working with Python, not Java builds. Python does not require any builds, still we are storing a compressed file consists of Python codes as well as our Dockerfile and NGINX configurations(\u003cem\u003eapp\u003c/em\u003e,\u003cem\u003econfig\u003c/em\u003e,\u003cem\u003eDockerfile\u003c/em\u003e), and we are going to use this compressed file to deploy our application to openshift. You might think that storing that file is not necessary, but I feel that storing that might be necessary, so that in later you can find out what is being pushed to openshift or if there is any discrepancy between what you want to deploy and what you are deploying.\nAnyways, for this stage, we will make safe name for naming our compressed file. \u003ccode\u003eBUILD_NUMBER\u003c/code\u003e is an environment variable available in pipeline, which provides current \u003ca href=\"https://qa.nuxeo.org/jenkins/pipeline-syntax/globals\"\u003ebuild number\u003c/a\u003e which should be unique per build. We will be using \u003cstrong\u003eAPPLICATION_NAME + BUILD_NUMBER\u003c/strong\u003e to make a safe build name. We will store the Artifacts in a special directory, for now lets use \u003cstrong\u003etarget\u003c/strong\u003e folder inside \u003ca href=\"https://wiki.jenkins.io/display/JENKINS/Building+a+software+project\"\u003ejenkins workspace\u003c/a\u003e(Workspace is basically the place/path where the whole pipeline execution is happening).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Store Artifact\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003esteps\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003escript\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003esafeBuildName\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${APPLICATION_NAME}_${BUILD_NUMBER}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eartifactFolder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${ARTIFACT_FOLDER}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003efullFileName\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${safeBuildName}.tar.gz\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eapplicationZip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${artifactFolder}/${fullFileName}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eapplicationDir\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;app\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                              \u003cspan class=\"s2\"\u003e\u0026#34;config\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                              \u003cspan class=\"s2\"\u003e\u0026#34;Dockerfile\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                              \u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"na\"\u003ejoin\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eneedTargetPath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003efileExists\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${artifactFolder}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eneedTargetPath\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esh\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;mkdir ${artifactFolder}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esh\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;tar -czvf ${applicationZip} ${applicationDir}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003earchiveArtifacts\u003c/span\u003e \u003cspan class=\"nl\"\u003eartifacts:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${applicationZip}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eexcludes:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e               \u003cspan class=\"nl\"\u003eonlyIfSuccessful:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe will be using \u003ca href=\"https://jenkins.io/doc/book/pipeline/syntax/#script\"\u003e\u003ccode\u003escript\u003c/code\u003e syntax\u003c/a\u003e to execute our instructions. Script console is basically for running arbitrary commands inside it.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIn this article, we saw the steps which will modify stuff in jenkins. In \u003ca href=\"/openshift-python-jenkins-pipeline-two/\"\u003enext article\u003c/a\u003e, we will see rest of the steps which will do stuff in OpenShift.\u003c/p\u003e\n","content":"Pipeline is a set of instructions, which will be executed as per given sequence and produce a output. Jenkins Pipeline is simply writing these instructions in Jenkins. These pipelines can be written in Groovy.\nIn previous post we have defined deployment structure and made necessary preparations for deployment of a python+gunicorn+nginx+jenkins based project. In this post, we will discuss about the most important part of our CI/CD project, writing jenkins pipeline. This pipeline will provide continuous delivery(CD) for our deployment.\nThe whole deployment will be done in 11 steps. Step 1-5 will be executed in Jenkins and step 6-11 will be deploying the code in OpenShift. If you are feeling confused about these stages, don\u0026rsquo;t worry. We will be explaining them one by one. Please keep in mind, with every stage there is a description of possible outcome of the execution of that stage. But in this article, our task is only to create a pipeline, not execute it. In this article, we will cover the steps which will run in jenkins. Table of contents\u0026nbsp;  Step 1: declaring agent and ENV variables Step 2: get latest code Step 3: install dependencies Step 4: run tests Step 5: storing artifacts In conclusion   \nStep 1: declaring agent and ENV variables We will declare agent and environment variables in this step. In Jenkins, we need to specify a jenkins agent, in which the pipeline will be executing. We will be using python jenkins slave to execute our pipeline. We will discuss more about jenkins python slave in next article. The python agent should look like this:\npipeline { agent { node {label \u0026#39;python\u0026#39;} } } We can write down our constant values in environment variables. For example:\nenvironment { APPLICATION_NAME = \u0026#39;python-nginx\u0026#39; GIT_REPO=\u0026#34;http://github.com/ruddra/openshift-python-nginx.git\u0026#34; GIT_BRANCH=\u0026#34;master\u0026#34; STAGE_TAG = \u0026#34;promoteToQA\u0026#34; DEV_PROJECT = \u0026#34;dev\u0026#34; STAGE_PROJECT = \u0026#34;stage\u0026#34; TEMPLATE_NAME = \u0026#34;python-nginx\u0026#34; ARTIFACT_FOLDER = \u0026#34;target\u0026#34; PORT = 8081; } Some variable declaration may seem confusing, but we will use them in next steps.\nStep 2: get latest code Jenkins Pipeline execution is done in stages. All the stages of pipeline will be inside in one stages dictionary. Like:\nstages { stage(\u0026#34;One\u0026#34;){ // Do Something  } stage(\u0026#34;Two\u0026#34;){ // Do Something  } } In first stage, we will be using Git Plugin which comes as default with OpenShift Jenkins. We will be using following code for pulling the latest code:\nstage(\u0026#39;Get Latest Code\u0026#39;) { steps { git branch: \u0026#34;${GIT_BRANCH}\u0026#34;, url: \u0026#34;${GIT_REPO}\u0026#34; // declared in environment  } } Step 3: install dependencies In this stage, we will install python dependencies inside in a virtual environment. For that, we will first install virtualenv using pip install virtualenv. After activating the virtualenv, we will install the dependencies using pip install -r requirements.pip from dependencies defined in app\u0026gt;requirements.pip.\nstage(\u0026#34;Install Dependencies\u0026#34;) { steps { sh \u0026#34;\u0026#34;\u0026#34; pip install virtualenv virtualenv --no-site-packages . source bin/activate pip install -r app/requirements.pip deactivate \u0026#34;\u0026#34;\u0026#34; } } Here we are using scripted steps to execute the commands for installing dependencies.\nStep 4: run tests In this stage, we will run tests, so that we can make sure if any test fails, pipeline does not execute any further. We will also store the test results using JUnit Plugin.\nFirst, we will activate our virtualenv(again!!) then run tests in app directory using nosetests. It will export test results in xml format. Then we will store the result using JUnit.\nstage(\u0026#39;Run Tests\u0026#39;) { steps { sh \u0026#39;\u0026#39;\u0026#39; source bin/activate nosetests app --with-xunit deactivate \u0026#39;\u0026#39;\u0026#39; junit \u0026#34;nosetests.xml\u0026#34; } } Step 5: storing artifacts Artifact may sound weird to you if you are familliar with Java. Because we are working with Python, not Java builds. Python does not require any builds, still we are storing a compressed file consists of Python codes as well as our Dockerfile and NGINX configurations(app,config,Dockerfile), and we are going to use this compressed file to deploy our application to openshift. You might think that storing that file is not necessary, but I feel that storing that might be necessary, so that in later you can find out what is being pushed to openshift or if there is any discrepancy between what you want to deploy and what you are deploying. Anyways, for this stage, we will make safe name for naming our compressed file. BUILD_NUMBER is an environment variable available in pipeline, which provides current build number which should be unique per build. We will be using APPLICATION_NAME + BUILD_NUMBER to make a safe build name. We will store the Artifacts in a special directory, for now lets use target folder inside jenkins workspace(Workspace is basically the place/path where the whole pipeline execution is happening).\nstage(\u0026#39;Store Artifact\u0026#39;){ steps{ script{ def safeBuildName = \u0026#34;${APPLICATION_NAME}_${BUILD_NUMBER}\u0026#34;, artifactFolder = \u0026#34;${ARTIFACT_FOLDER}\u0026#34;, fullFileName = \u0026#34;${safeBuildName}.tar.gz\u0026#34;, applicationZip = \u0026#34;${artifactFolder}/${fullFileName}\u0026#34; applicationDir = [\u0026#34;app\u0026#34;, \u0026#34;config\u0026#34;, \u0026#34;Dockerfile\u0026#34;, ].join(\u0026#34; \u0026#34;); def needTargetPath = !fileExists(\u0026#34;${artifactFolder}\u0026#34;) if (needTargetPath) { sh \u0026#34;mkdir ${artifactFolder}\u0026#34; } sh \u0026#34;tar -czvf ${applicationZip} ${applicationDir}\u0026#34; archiveArtifacts artifacts: \u0026#34;${applicationZip}\u0026#34;, excludes: null, onlyIfSuccessful: true } } } We will be using script syntax to execute our instructions. Script console is basically for running arbitrary commands inside it.\nIn conclusion In this article, we saw the steps which will modify stuff in jenkins. In next article, we will see rest of the steps which will do stuff in OpenShift.\n","description":"Pipeline is a set of instructions, which will be executed as per given sequence and produce a output. Jenkins Pipeline is simply writing these instructions in Jenkins. These pipelines can be written in Groovy.\nIn previous post we have defined deployment structure and made necessary preparations for deployment of a python+gunicorn+nginx+jenkins based project."},{"date_published":"2018-08-11T15:09:01Z","date_modified":"2022-07-28T22:03:00+02:00","date":"August 11, 2018","id":"https://ruddra.com/openshift-python-pipeline-preparation/","url":"https://ruddra.com/openshift-python-pipeline-preparation/","title":"Deploy A Python App to OpenShift: Planning and Preparations","image":"https://ruddra.com/content/images/2020/05/pipeline.jpg","tags":["OpenShift","Jenkins","CI/CD","Gunicorn","DevOps"],"content_html":"\u003cp\u003eDeploying a Python application to OpenShift is fairly easy. Write a \u003cstrong\u003eDockerfile\u003c/strong\u003e and run \u003ccode\u003eoc new-app /path/to/Dockerfile\u003c/code\u003e, that\u0026rsquo;s it!! But if you want implement a full fledged modern CI/CD using Jenkins and openshift, you need to do little more than that. So let\u0026rsquo;s dive into it.\u003c/p\u003e\n\u003cp\u003eWe will explain about the whole process in three articles:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-one\"\u003ePart One\u003c/a\u003e: We will explain the deployment structure and preparations.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two\"\u003ePart Two\u003c/a\u003e: We will write the Jenkins Pipeline.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three\"\u003ePart Three\u003c/a\u003e: Deploy using Jenkins Pipeline to OpenShift and Webhook implementation.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIn this article, we will explain the deployment structure and required preparations for this deployment.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#deployment-structure\"\u003eDeployment structure\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#preparations\"\u003ePreparations\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#a-python-application\"\u003eA \u0026lsquo;Python\u0026rsquo; application\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#preparing-nginx\"\u003ePreparing NGINX\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#writing-dockerfile\"\u003eWriting \u0026lsquo;Dockerfile\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#preparing-git-repository\"\u003ePreparing git repository\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#preparing-openshiftminishift\"\u003ePreparing OpenShift/Minishift\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#preparing-jenkins\"\u003ePreparing jenkins\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"deployment-structure\"\u003eDeployment structure\u003c/h2\u003e\n\u003cp\u003eIn this deployment, our python program will be running inside a container. That program will be served through a Gunicorn server. We will reverse proxy this server from NGINX, running in the same container. The following diagram shows our application structure:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1518\" height=\"752\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1518 752'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.32.20-PM_huca5c070c9e0c081e5eb9701caf4aaec1_55663_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.32.20-PM_huca5c070c9e0c081e5eb9701caf4aaec1_55663_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.32.20-PM_huca5c070c9e0c081e5eb9701caf4aaec1_55663_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.32.20-PM_huca5c070c9e0c081e5eb9701caf4aaec1_55663_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.32.20-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.32.20-PM.jpg\" width=\"1518\" height=\"752\" alt='Screen-Shot-2018-08-12-at-3.32.20-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eThe OpenShift Cluster will have three project spaces, CI/CD, DEV and STAGE. CI/CD will contain the Jenkins file, running pipelines inside it. DEV and STAGE projects will have applications running inside them. Next diagram will show what we intend to do in this CI/CD project:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1274\" height=\"892\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1274 892'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.28.36-PM_hu37b35a0b035cae16fad774ea54fc2b4f_62873_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-12-at-3.28.36-PM_hu37b35a0b035cae16fad774ea54fc2b4f_62873_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.28.36-PM_hu37b35a0b035cae16fad774ea54fc2b4f_62873_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-12-at-3.28.36-PM_hu37b35a0b035cae16fad774ea54fc2b4f_62873_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-12-at-3.28.36-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-12-at-3.28.36-PM.jpg\" width=\"1274\" height=\"892\" alt='Screen-Shot-2018-08-12-at-3.28.36-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"preparations\"\u003ePreparations\u003c/h2\u003e\n\u003cp\u003eFor implementing this CI/CD project, we need to prepare few things beforehand. Let us go through them one by one.\u003c/p\u003e\n\u003ch3 id=\"a-python-application\"\u003eA \u0026lsquo;Python\u0026rsquo; application\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eNB: if you have a python application, which runs through gunicorn and has tests runable through nosetests(or any xml test result exporter) then please skip this section.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWriting a python application\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFor this demo purpose, we will use a small Flask application, which exposes a simple REST api. We will be using the code below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ejsonify\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFlask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etasks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;OpenShift Jenkins Pipeline Python/Nginx Implementation\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;description\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Find the implementation at https://github.com/ruddra/openshift-python-nginx\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;title\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;OpenShift Jenkins Pipeline Django Implementation\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;description\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Find the implementation at https://github.com/ruddra/openshift-django\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@app\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_tasks\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ejsonify\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;tasks\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etasks\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;0.0.0.0\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFirst we should create a empty Project directory. Inside that, we will put another folder named \u003cstrong\u003eapp\u003c/strong\u003e, which will contain the python application. Save the above flask application as \u003ccode\u003eflask_app.py\u003c/code\u003e. We need to install flask using \u003cem\u003epip install flask\u003c/em\u003e as well.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdding gunicorn\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWe can run this application using \u003ccode\u003epython flask_app.py\u003c/code\u003e, but its not safe to use a development server in production. So we will use \u003ccode\u003egunicorn\u003c/code\u003e to run our application. Let\u0026rsquo;s install that using \u003ccode\u003epip install gunicorn\u003c/code\u003e, then write a \u003cem\u003ewsgi.py\u003c/em\u003e inside the \u003cstrong\u003eapp\u003c/strong\u003e directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eflask_app\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eapplication\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;__main__\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eapplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf we run \u003ccode\u003egunicorn --bind 0.0.0.0:5000 wsgi\u003c/code\u003e, we should be able to see our project up and running in \u003ccode\u003e0.0.0.0:5000\u003c/code\u003e. The output should look like this:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2044\" height=\"1084\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2044 1084'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screen-Shot-2018-08-11-at-9.22.20-PM_hua63ebd0b6335e60022d671dd0d5b5d52_142263_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screen-Shot-2018-08-11-at-9.22.20-PM_hua63ebd0b6335e60022d671dd0d5b5d52_142263_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screen-Shot-2018-08-11-at-9.22.20-PM_hua63ebd0b6335e60022d671dd0d5b5d52_142263_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screen-Shot-2018-08-11-at-9.22.20-PM_hua63ebd0b6335e60022d671dd0d5b5d52_142263_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-08-11-at-9.22.20-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screen-Shot-2018-08-11-at-9.22.20-PM.jpg\" width=\"2044\" height=\"1084\" alt='Screen-Shot-2018-08-11-at-9.22.20-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWriting tests\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWriting tests are important, and we are going to store test results in Jenkins. For this purpose, let\u0026rsquo;s create some tests inside \u003cstrong\u003eapp\u003c/strong\u003e directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eunittest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyTestClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunittest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTestCase\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUpClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nd\"\u003e@classmethod\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDownClass\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003ecls\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esetUp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etearDown\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"k\"\u003epass\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_dummy_one\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etest_dummy_two\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eassertEqual\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor running the tests, we are going to use \u003ccode\u003enosetests\u003c/code\u003e, so let\u0026rsquo;s install that using \u003cem\u003epip install nose\u003c/em\u003e. We can run tests using \u003ccode\u003enosetests --with-xunit\u003c/code\u003e, it will generate a xml file which will contain the test results.\u003c/p\u003e\n\u003cp\u003eOur preparation is complete for the python application. Now let\u0026rsquo;s store our requirements using \u003ccode\u003epip freeze \u0026gt; requirements.pip\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"preparing-nginx\"\u003ePreparing NGINX\u003c/h3\u003e\n\u003cp\u003eIn this step, we will write a NGINX configuration file which will proxy pass the gunicorn server.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-nginx\" data-lang=\"nginx\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eupstream\u003c/span\u003e \u003cspan class=\"s\"\u003eweb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eip_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eserver\u003c/span\u003e \u003cspan class=\"n\"\u003e0.0.0.0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e5000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eserver\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003elocation\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eHost\u003c/span\u003e \u003cspan class=\"nv\"\u003e$host\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eproxy_set_header\u003c/span\u003e \u003cspan class=\"s\"\u003eX-Real-IP\u003c/span\u003e \u003cspan class=\"nv\"\u003e$remote_addr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eproxy_pass\u003c/span\u003e \u003cspan class=\"s\"\u003ehttp://web/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003elisten\u003c/span\u003e \u003cspan class=\"mi\"\u003e8081\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003eserver_name\u003c/span\u003e \u003cspan class=\"s\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn here, the NGINX will listen to 8081 port. It will proxy pass gunicorn at location \u0026ldquo;/\u0026rdquo;. Let\u0026rsquo;s save the above code in \u003cstrong\u003edefault.conf\u003c/strong\u003e file and store in \u003cem\u003econfig/nginx\u003c/em\u003e directory of the project.\u003c/p\u003e\n\u003ch3 id=\"writing-dockerfile\"\u003eWriting \u0026lsquo;Dockerfile\u0026rsquo;\u003c/h3\u003e\n\u003cp\u003eThis is the most important preparation step of our project. For this demo purpose, we will be using a alpine based nginx Dockerfile.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-docker\" data-lang=\"docker\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e nginx:mainline-alpine\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# --- Python Installation ---\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e apk add --no-cache python3 \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    python3 -m ensurepip \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    rm -r /usr/lib/python*/ensurepip \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    pip3 install --upgrade pip setuptools \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e ! -e /usr/bin/pip \u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e ln -s pip3 /usr/bin/pip \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efi\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[[\u003c/span\u003e ! -e /usr/bin/python \u003cspan class=\"o\"\u003e]]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e ln -sf /usr/bin/python3 /usr/bin/python\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efi\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    rm -r /root/.cache\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# --- Work Directory ---\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /usr/src/app\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# --- Python Setup ---\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e . .\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r app/requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# --- Nginx Setup ---\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e config/nginx/default.conf /etc/nginx/conf.d/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chmod g+rwx /var/cache/nginx /var/run /var/log/nginx\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e chgrp -R root /var/cache/nginx\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e sed -i.bak \u003cspan class=\"s1\"\u003e\u0026#39;s/^user/#user/\u0026#39;\u003c/span\u003e /etc/nginx/nginx.conf\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e addgroup nginx root\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"c\"\u003e# --- Expose and CMD ---\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eEXPOSE\u003c/span\u003e\u003cspan class=\"s\"\u003e 8081\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e gunicorn --bind 0.0.0.0:5000 wsgi --chdir /usr/src/app/app \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e nginx -g \u003cspan class=\"s2\"\u003e\u0026#34;daemon off;\u0026#34;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s store this Dockerfile in root directory of Project.\nIn \u003ccode\u003ePython Setup\u003c/code\u003e section, we are using a minimal python setup with pip enabled. For our demo purpose, this is just enough. If your project has more dependencies, then install them using \u003ccode\u003eapk add python3-dev ...\u003c/code\u003e etc.\nIn \u003ccode\u003eNGINX Setup\u003c/code\u003e section, we have add the nginx \u003cstrong\u003edefault.conf\u003c/strong\u003e file to \u003cstrong\u003e/etc/nginx/conf.d/\u003c/strong\u003e.\nIn \u003ccode\u003eExpose and CMD\u003c/code\u003e section, we have exposed 8081 port and we will be running this command when the docker is running: \u003ccode\u003egunicorn --bind 0.0.0.0:5000 wsgi --chdir /usr/src/app/app \u0026amp; nginx -g \u0026quot;daemon off;\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eSo far, the project directories should be looking like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e - Project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e -- app\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e-- flask_app.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e-- wsgi.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e-- requirements.pip\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e -- config\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e-- nginx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e-- default.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e - Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to run this \u003cstrong\u003eDockerfile\u003c/strong\u003e in project root directory, you can do this like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker build -t flask-nginx .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker run -p 8081:8081 flask-nginx\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can access the application in browser through \u003ccode\u003elocalhost:8081\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"preparing-git-repository\"\u003ePreparing git repository\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s create a repository at your github/bitbucket account. Then push this code to that repository.\u003c/p\u003e\n\u003ch3 id=\"preparing-openshiftminishift\"\u003ePreparing OpenShift/Minishift\u003c/h3\u003e\n\u003cp\u003eI would recommend using minishif for this demo purpose. I am not sure if this app will run in free RedHat\u0026rsquo;s openshift cloud services. If you own a private OpenShift Server, that is fine too. For using minishift, please follow this \u003ca href=\"https://docs.okd.io/latest/minishift/getting-started/installing.html\"\u003eokd guideline\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"preparing-jenkins\"\u003ePreparing jenkins\u003c/h3\u003e\n\u003cp\u003eOnce your openshift/minishift is ready, let\u0026rsquo;s log into that system using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc login --server\u003cspan class=\"o\"\u003e=\u003c/span\u003eserver_name --username\u003cspan class=\"o\"\u003e=\u003c/span\u003eyour_username --password\u003cspan class=\"o\"\u003e=\u003c/span\u003eyour_password\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, we need to create three project spaces, \u003cstrong\u003ecicd\u003c/strong\u003e, \u003cstrong\u003edev\u003c/strong\u003e, \u003cstrong\u003estage\u003c/strong\u003e for this demo purpose.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project dev   --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project stage --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Stage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project cicd --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;CI/CD\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVery good. Now we are going to use project \u003cstrong\u003ecicd\u003c/strong\u003e and install Jenkins there:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc project cicd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app jenkins-persistent\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet\u0026rsquo;s expose jenkin\u0026rsquo;s url using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc expose svc/jenkins-persistant\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFYI: You can do this step using OpenShift UI as well.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2506\" height=\"1078\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2506 1078'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/08/Screenshot_hu1fa4d4e95ae1b09083b45f389112de77_189434_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/08/Screenshot_hu1fa4d4e95ae1b09083b45f389112de77_189434_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/08/Screenshot_hu1fa4d4e95ae1b09083b45f389112de77_189434_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/08/Screenshot_hu1fa4d4e95ae1b09083b45f389112de77_189434_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screenshot' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/08/Screenshot.jpg\" width=\"2506\" height=\"1078\" alt='Screenshot'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eNow, we need to give jenkins permission to make changes in \u003cstrong\u003edev\u003c/strong\u003e and \u003cstrong\u003estage\u003c/strong\u003e. Let\u0026rsquo;s do that using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n stage\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eOur preparation is completed. Let\u0026rsquo;s continue with Jenkins pipeline in \u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two\"\u003enext article\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf you have any questions regarding this, feel free to comment. Thanks for reading.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n","content":"Deploying a Python application to OpenShift is fairly easy. Write a Dockerfile and run oc new-app /path/to/Dockerfile, that\u0026rsquo;s it!! But if you want implement a full fledged modern CI/CD using Jenkins and openshift, you need to do little more than that. So let\u0026rsquo;s dive into it.\nWe will explain about the whole process in three articles:\n Part One: We will explain the deployment structure and preparations. Part Two: We will write the Jenkins Pipeline. Part Three: Deploy using Jenkins Pipeline to OpenShift and Webhook implementation.  In this article, we will explain the deployment structure and required preparations for this deployment.Table of contents\u0026nbsp;  Deployment structure Preparations  A \u0026lsquo;Python\u0026rsquo; application Preparing NGINX Writing \u0026lsquo;Dockerfile\u0026rsquo; Preparing git repository Preparing OpenShift/Minishift Preparing jenkins   In conclusion   \nDeployment structure In this deployment, our python program will be running inside a container. That program will be served through a Gunicorn server. We will reverse proxy this server from NGINX, running in the same container. The following diagram shows our application structure:   \nThe OpenShift Cluster will have three project spaces, CI/CD, DEV and STAGE. CI/CD will contain the Jenkins file, running pipelines inside it. DEV and STAGE projects will have applications running inside them. Next diagram will show what we intend to do in this CI/CD project:   \nPreparations For implementing this CI/CD project, we need to prepare few things beforehand. Let us go through them one by one.\nA \u0026lsquo;Python\u0026rsquo; application NB: if you have a python application, which runs through gunicorn and has tests runable through nosetests(or any xml test result exporter) then please skip this section.\nWriting a python application\nFor this demo purpose, we will use a small Flask application, which exposes a simple REST api. We will be using the code below:\nfrom flask import Flask, jsonify app = Flask(__name__) tasks = [ { \u0026#39;id\u0026#39;: 1, \u0026#39;title\u0026#39;: \u0026#39;OpenShift Jenkins Pipeline Python/Nginx Implementation\u0026#39;, \u0026#39;description\u0026#39;: \u0026#39;Find the implementation at https://github.com/ruddra/openshift-python-nginx\u0026#39; }, { \u0026#39;id\u0026#39;: 2, \u0026#39;title\u0026#39;: \u0026#39;OpenShift Jenkins Pipeline Django Implementation\u0026#39;, \u0026#39;description\u0026#39;: \u0026#39;Find the implementation at https://github.com/ruddra/openshift-django\u0026#39; } ] @app.route(\u0026#39;/\u0026#39;, methods=[\u0026#39;GET\u0026#39;]) def get_tasks(): return jsonify({\u0026#39;tasks\u0026#39;: tasks}) if __name__ == \u0026#39;__main__\u0026#39;: app.run(host=\u0026#39;0.0.0.0\u0026#39;) First we should create a empty Project directory. Inside that, we will put another folder named app, which will contain the python application. Save the above flask application as flask_app.py. We need to install flask using pip install flask as well.\nAdding gunicorn\nWe can run this application using python flask_app.py, but its not safe to use a development server in production. So we will use gunicorn to run our application. Let\u0026rsquo;s install that using pip install gunicorn, then write a wsgi.py inside the app directory.\nfrom flask_app import app as application if __name__ == \u0026#34;__main__\u0026#34;: application.run() If we run gunicorn --bind 0.0.0.0:5000 wsgi, we should be able to see our project up and running in 0.0.0.0:5000. The output should look like this:   \nWriting tests\nWriting tests are important, and we are going to store test results in Jenkins. For this purpose, let\u0026rsquo;s create some tests inside app directory.\nimport unittest class MyTestClass(unittest.TestCase): @classmethod def setUpClass(cls): pass @classmethod def tearDownClass(cls): pass def setUp(self): pass def tearDown(self): pass def test_dummy_one(self): self.assertEqual(2, 2) def test_dummy_two(self): self.assertEqual(True, True) For running the tests, we are going to use nosetests, so let\u0026rsquo;s install that using pip install nose. We can run tests using nosetests --with-xunit, it will generate a xml file which will contain the test results.\nOur preparation is complete for the python application. Now let\u0026rsquo;s store our requirements using pip freeze \u0026gt; requirements.pip.\nPreparing NGINX In this step, we will write a NGINX configuration file which will proxy pass the gunicorn server.\nupstream web { ip_hash; server 0.0.0.0:5000; } server { location / { proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://web/; } listen 8081; server_name _; } In here, the NGINX will listen to 8081 port. It will proxy pass gunicorn at location \u0026ldquo;/\u0026rdquo;. Let\u0026rsquo;s save the above code in default.conf file and store in config/nginx directory of the project.\nWriting \u0026lsquo;Dockerfile\u0026rsquo; This is the most important preparation step of our project. For this demo purpose, we will be using a alpine based nginx Dockerfile.\nFROMnginx:mainline-alpine# --- Python Installation ---RUN apk add --no-cache python3 \u0026amp;\u0026amp; \\  python3 -m ensurepip \u0026amp;\u0026amp; \\  rm -r /usr/lib/python*/ensurepip \u0026amp;\u0026amp; \\  pip3 install --upgrade pip setuptools \u0026amp;\u0026amp; \\  if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \u0026amp;\u0026amp; \\  if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi \u0026amp;\u0026amp; \\  rm -r /root/.cache# --- Work Directory ---WORKDIR/usr/src/app# --- Python Setup ---ADD . .RUN pip install -r app/requirements.pip# --- Nginx Setup ---COPY config/nginx/default.conf /etc/nginx/conf.d/RUN chmod g+rwx /var/cache/nginx /var/run /var/log/nginxRUN chgrp -R root /var/cache/nginxRUN sed -i.bak \u0026#39;s/^user/#user/\u0026#39; /etc/nginx/nginx.confRUN addgroup nginx root# --- Expose and CMD ---EXPOSE8081CMD gunicorn --bind 0.0.0.0:5000 wsgi --chdir /usr/src/app/app \u0026amp; nginx -g \u0026#34;daemon off;\u0026#34;Let\u0026rsquo;s store this Dockerfile in root directory of Project. In Python Setup section, we are using a minimal python setup with pip enabled. For our demo purpose, this is just enough. If your project has more dependencies, then install them using apk add python3-dev ... etc. In NGINX Setup section, we have add the nginx default.conf file to /etc/nginx/conf.d/. In Expose and CMD section, we have exposed 8081 port and we will be running this command when the docker is running: gunicorn --bind 0.0.0.0:5000 wsgi --chdir /usr/src/app/app \u0026amp; nginx -g \u0026quot;daemon off;\u0026quot;\nSo far, the project directories should be looking like this:\n| - Project | -- app | |-- flask_app.py | |-- wsgi.py | |-- requirements.pip | -- config | |-- nginx | ||-- default.conf | - Dockerfile If you want to run this Dockerfile in project root directory, you can do this like:\ndocker build -t flask-nginx . docker run -p 8081:8081 flask-nginx You can access the application in browser through localhost:8081.\nPreparing git repository Let\u0026rsquo;s create a repository at your github/bitbucket account. Then push this code to that repository.\nPreparing OpenShift/Minishift I would recommend using minishif for this demo purpose. I am not sure if this app will run in free RedHat\u0026rsquo;s openshift cloud services. If you own a private OpenShift Server, that is fine too. For using minishift, please follow this okd guideline.\nPreparing jenkins Once your openshift/minishift is ready, let\u0026rsquo;s log into that system using:\noc login --server=server_name --username=your_username --password=your_password Now, we need to create three project spaces, cicd, dev, stage for this demo purpose.\noc new-project dev --display-name=\u0026#34;Dev\u0026#34; oc new-project stage --display-name=\u0026#34;Stage\u0026#34; oc new-project cicd --display-name=\u0026#34;CI/CD\u0026#34; Very good. Now we are going to use project cicd and install Jenkins there:\noc project cicd oc new-app jenkins-persistent Let\u0026rsquo;s expose jenkin\u0026rsquo;s url using:\noc expose svc/jenkins-persistant FYI: You can do this step using OpenShift UI as well.   \nNow, we need to give jenkins permission to make changes in dev and stage. Let\u0026rsquo;s do that using:\noc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n dev oc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n stage In conclusion Our preparation is completed. Let\u0026rsquo;s continue with Jenkins pipeline in next article.\nIf you have any questions regarding this, feel free to comment. Thanks for reading.\nCheers!!\n","description":"Deploying a Python application to OpenShift is fairly easy. Write a Dockerfile and run oc new-app /path/to/Dockerfile, that\u0026rsquo;s it!! But if you want implement a full fledged modern CI/CD using Jenkins and openshift, you need to do little more than that. So let\u0026rsquo;s dive into it.\nWe will explain about the whole process in three articles:"},{"date_published":"2018-07-22T17:51:20Z","date_modified":"2022-07-28T22:03:00+02:00","date":"July 22, 2018","id":"https://ruddra.com/django-openshift-pipeline/","url":"https://ruddra.com/django-openshift-pipeline/","title":"Deploy Django to OpenShift Using Jenkins Pipeline(CI/CD)","image":"https://ruddra.com/content/images/2020/04/cargo.jpg","tags":["OpenShift","Pipeline","Jenkins","CI/CD","Gunicorn"],"content_html":"\u003cp\u003eUsing Jenkins pipeline, you can easily automate your deployments in OpenShift. In this post, we are going to use this powerful tool to deploy a Django project. But before we start, one thing I need to mention is that, this project has been tested on in \u003cstrong\u003eMinishift 1.2.0, OpenShift v3.9.0 and\nKubernetes v1.9.1\u003c/strong\u003e. So without further adieu, let us begin.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#source-code\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#pipeline-execution-steps\"\u003ePipeline execution steps\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#automated-deploy-on-minishift\"\u003eAutomated deploy on minishift\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#manual-deploy-on-minishift\"\u003eManual deploy on minishift\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#screenshots\"\u003eScreenshots\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploy-your-project-pre-requisite\"\u003eDeploy your project: pre-requisite\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploy-your-project-modify-pipeline\"\u003edeploy your project: modify pipeline\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#advanced-implementation\"\u003eAdvanced implementation\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"source-code\"\u003eSource code\u003c/h2\u003e\n\u003cp\u003eYou can find the source code for a this project here: \u003ca href=\"https://github.com/ruddra/openshift-django\"\u003ehttps://github.com/ruddra/openshift-django\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"pipeline-execution-steps\"\u003ePipeline execution steps\u003c/h2\u003e\n\u003cp\u003eOn every pipeline execution, the code goes through the following steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eFirst, jenkins will check if build configuration for \u003ca href=\"https://github.com/ruddra/openshift-django\"\u003ethis repo\u003c/a\u003e exists in \u003ccode\u003edev\u003c/code\u003e project.\u003c/li\u003e\n\u003cli\u003eIf not, then it will create new app using the templates provided in code.\u003c/li\u003e\n\u003cli\u003eThen, it will build and test the code\u003c/li\u003e\n\u003cli\u003eAfter successful build, it will deploy the image to \u003ccode\u003edev\u003c/code\u003e project.\u003c/li\u003e\n\u003cli\u003eThen it will prompt if it will deploy the code to stage. If yes, then it will proceed to next step, else it will abort.\u003c/li\u003e\n\u003cli\u003eIt will push the \u003ccode\u003edev\u003c/code\u003e image to \u003ccode\u003estage\u003c/code\u003e and tag it as \u003ccode\u003epromoteToQA\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eThis image will be deployed to \u003ccode\u003estage\u003c/code\u003e project and will be scaled to 3.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"automated-deploy-on-minishift\"\u003eAutomated deploy on minishift\u003c/h2\u003e\n\u003cp\u003eGo to scripts directory and run \u003ccode\u003e./setup.sh\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"manual-deploy-on-minishift\"\u003eManual deploy on minishift\u003c/h2\u003e\n\u003cp\u003eFirst, run minishift using \u003ccode\u003eminishift start memory=4000\u003c/code\u003e.\nThen, run the following commands to create projects in OpenShift.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Create Projects\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project dev --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Tasks - Dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project stage --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Tasks - Stage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-project cicd --display-name\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;CI/CD\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInstall Jenkins in \u003ccode\u003ecicd\u003c/code\u003e by running\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc project cicd\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app openshift/jenkins-2-centos7\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, give permission to Jenkins to modify in dev and stage project.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n stage\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDeploy the MySQL in \u003ccode\u003ecicd\u003c/code\u003e project by loading MySQL template like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app -f .openshift/templates/mysql-template.yaml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will create the mysql server. Please keep in mind that, this MySQL will be available in 172.30.0.30. This configurations in defined in Service configuration section of the template\u003c/p\u003e\n\u003cp\u003eSo, we are almost ready. Now please load the pipeline using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app -f .openshift/pipelines/openshift-django-pipeline.yaml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow you will be able to see the pipeline in \u003cstrong\u003eConsole\u003c/strong\u003e \u0026gt; \u003cstrong\u003eCI/CD\u003c/strong\u003e \u0026gt; \u003cstrong\u003eBuild\u003c/strong\u003e \u0026gt; \u003cstrong\u003ePipelines\u003c/strong\u003e. You can run it from there or from CLI like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc start-build djangopipeline\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo implement webhooks, you can look into \u003ca href=\"https://blog.openshift.com/using-github-hooks-with-your-local-openshift-environment/\"\u003ethis project\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"screenshots\"\u003eScreenshots\u003c/h2\u003e\n\u003cp\u003ePipeline execustion looks like this in Blue Ocean:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2464\" height=\"504\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2464 504'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.17.19-PM_hu5f94807010834f8f8cf71e9d58f45982_56873_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.17.19-PM_hu5f94807010834f8f8cf71e9d58f45982_56873_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.17.19-PM_hu5f94807010834f8f8cf71e9d58f45982_56873_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.17.19-PM_hu5f94807010834f8f8cf71e9d58f45982_56873_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.17.19-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.17.19-PM.jpg\" width=\"2464\" height=\"504\" alt='Screen-Shot-2018-07-24-at-8.17.19-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eStage View in Jenkins looks like this:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2524\" height=\"482\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2524 482'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.20.50-PM_hua049ad6a363022786cc9beac2ab877d8_78945_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.20.50-PM_hua049ad6a363022786cc9beac2ab877d8_78945_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.20.50-PM_hua049ad6a363022786cc9beac2ab877d8_78945_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.20.50-PM_hua049ad6a363022786cc9beac2ab877d8_78945_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.20.50-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.20.50-PM.jpg\" width=\"2524\" height=\"482\" alt='Screen-Shot-2018-07-24-at-8.20.50-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIn \u003cstrong\u003eCI/CD\u003c/strong\u003e project of OpenShift:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2076\" height=\"1016\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2076 1016'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.22.46-PM_hud408cee4865bcdf48603905c177303df_103148_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.22.46-PM_hud408cee4865bcdf48603905c177303df_103148_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.22.46-PM_hud408cee4865bcdf48603905c177303df_103148_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.22.46-PM_hud408cee4865bcdf48603905c177303df_103148_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.22.46-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.22.46-PM.jpg\" width=\"2076\" height=\"1016\" alt='Screen-Shot-2018-07-24-at-8.22.46-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIn \u003cstrong\u003eDev\u003c/strong\u003e project of OpenShift:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2066\" height=\"1010\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2066 1010'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.06-PM_hu5a2b76f57e3b9e395cf1e69bbb4bdc96_125235_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.06-PM_hu5a2b76f57e3b9e395cf1e69bbb4bdc96_125235_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.06-PM_hu5a2b76f57e3b9e395cf1e69bbb4bdc96_125235_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.06-PM_hu5a2b76f57e3b9e395cf1e69bbb4bdc96_125235_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.23.06-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.06-PM.jpg\" width=\"2066\" height=\"1010\" alt='Screen-Shot-2018-07-24-at-8.23.06-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eIn \u003cstrong\u003eStage\u003c/strong\u003e project of OpenShift:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2090\" height=\"1048\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2090 1048'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.25-PM_hu7fe24ec6eca419ec1e7818040c2a3a63_134818_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.25-PM_hu7fe24ec6eca419ec1e7818040c2a3a63_134818_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.25-PM_hu7fe24ec6eca419ec1e7818040c2a3a63_134818_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.25-PM_hu7fe24ec6eca419ec1e7818040c2a3a63_134818_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.23.25-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.23.25-PM.jpg\" width=\"2090\" height=\"1048\" alt='Screen-Shot-2018-07-24-at-8.23.25-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eAfter Pipeline execution, it should look like this:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2088\" height=\"832\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2088 832'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.37.52-PM_hub9af6585e5f84c9207d024ad21d9acc9_85649_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/07/Screen-Shot-2018-07-24-at-8.37.52-PM_hub9af6585e5f84c9207d024ad21d9acc9_85649_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.37.52-PM_hub9af6585e5f84c9207d024ad21d9acc9_85649_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/07/Screen-Shot-2018-07-24-at-8.37.52-PM_hub9af6585e5f84c9207d024ad21d9acc9_85649_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Screen-Shot-2018-07-24-at-8.37.52-PM' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/07/Screen-Shot-2018-07-24-at-8.37.52-PM.jpg\" width=\"2088\" height=\"832\" alt='Screen-Shot-2018-07-24-at-8.37.52-PM'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"deploy-your-project-pre-requisite\"\u003eDeploy your project: pre-requisite\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eHave a Django Project with Docker to deploy it.\u003c/li\u003e\n\u003cli\u003eHave \u003ca href=\"https://github.com/minishift/minishift\"\u003eminishift\u003c/a\u003e installed in your local machine.\u003c/li\u003e\n\u003cli\u003eGive it 4GB memory.\u003c/li\u003e\n\u003cli\u003eIf you can pull python, jenkins-2-centos7, mysql-55-centos7 images beforehand using \u003ccode\u003edocker pull \u0026lt;image name\u0026gt;\u003c/code\u003e, it would make the deployment much more faster.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"deploy-your-project-modify-pipeline\"\u003edeploy your project: modify pipeline\u003c/h2\u003e\n\u003cp\u003eYou can use this Pipeline to deploy your own project with this minimal changes:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGo to Pipeline template at \u003ca href=\"https://github.com/ruddra/openshift-django/blob/master/.openshift/pipelines/openshift-django-pipeline.yaml\"\u003ein my github repository\u003c/a\u003e:\n\u003cstrong\u003eOR\u003c/strong\u003e\nTake this pipeline:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eopenshiftDjangoRepo\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://raw.githubusercontent.com/ruddra/openshift-django/develop/.openshift/templates/openshift-django-template.yaml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003estageTag\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;promoteToQA\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;dev\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eSTAGE_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;stage\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003etemplateName\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;openshift-django\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epipeline\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eagent\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003elabel\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003estages\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Create in DEV\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"n\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;checking openshift django exists in DEV\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;bc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexists\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDEV_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewApp\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshiftDjangoRepo\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003enarrow\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;svc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexpose\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Build and Test in DEV\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshiftBuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${DEV_PROJECT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ebuildConfig:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eshowBuildLogs:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;true\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nl\"\u003ewaitTime:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;600000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Rollout to DEV\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshiftDeploy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${DEV_PROJECT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003edeploymentConfig:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ewaitTime:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;600000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Scale in DEV\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshiftScale\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${DEV_PROJECT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003edeploymentConfig:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ereplicaCount:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;1\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Promote to STAGE?\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etimeout\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003etime:\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eunit:\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;MINUTES\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003einput\u003c/span\u003e \u003cspan class=\"nl\"\u003emessage:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Promote to STAGE?\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eok:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Promote\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${DEV_PROJECT}/${templateName}:latest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${STAGE_PROJECT}/${templateName}:${stageTag}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Rollout to STAGE\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithCluster\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithProject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSTAGE_PROJECT\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;dc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexists\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;dc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;svc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;route\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edelete\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eopenshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewApp\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;${templateName}:${stageTag}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003enarrow\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;svc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eexpose\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003estage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Scale in STAGE\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"n\"\u003esteps\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003escript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"n\"\u003eopenshiftScale\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003enamespace:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${STAGE_PROJECT}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003edeploymentConfig:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${templateName}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ereplicaCount:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;3\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eEdit this line in the template:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003eopenshiftDjangoRepo\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://raw.githubusercontent.com/ruddra/openshift-django/master/.openshift/templates/openshift-django.yaml\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003eChange the url to either your repository link like \u003ccode\u003ehttps://github.com/ruddra/openshift-django\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eChange the template name in there as well:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003edef\u003c/span\u003e \u003cspan class=\"n\"\u003etemplateName\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;openshift-django\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"advanced-implementation\"\u003eAdvanced implementation\u003c/h2\u003e\n\u003cp\u003eIn this post, we have deployed our application by using only OpenShift APIs in Jenkins Plugin. If you want more advanced implementation, like having Jenkins do build, testing, store test results etc with more advanced pipeline, then please look into these posts:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-one\"\u003eDeploy A Python App to OpenShift: Planning and Preparations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two\"\u003eWriting Jenkins Pipeline For OpenShift Deployment\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ruddra.com/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three\"\u003eAutomated Deployment to OpenShift Using Jenkins and Webhook\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThanks for reading.\nCheers!!\u003c/p\u003e\n","content":"Using Jenkins pipeline, you can easily automate your deployments in OpenShift. In this post, we are going to use this powerful tool to deploy a Django project. But before we start, one thing I need to mention is that, this project has been tested on in Minishift 1.2.0, OpenShift v3.9.0 and Kubernetes v1.9.1. So without further adieu, let us begin.Table of contents\u0026nbsp;  Source code Pipeline execution steps Automated deploy on minishift Manual deploy on minishift Screenshots Deploy your project: pre-requisite deploy your project: modify pipeline Advanced implementation   \nSource code You can find the source code for a this project here: https://github.com/ruddra/openshift-django\nPipeline execution steps On every pipeline execution, the code goes through the following steps:\n First, jenkins will check if build configuration for this repo exists in dev project. If not, then it will create new app using the templates provided in code. Then, it will build and test the code After successful build, it will deploy the image to dev project. Then it will prompt if it will deploy the code to stage. If yes, then it will proceed to next step, else it will abort. It will push the dev image to stage and tag it as promoteToQA. This image will be deployed to stage project and will be scaled to 3.  Automated deploy on minishift Go to scripts directory and run ./setup.sh\nManual deploy on minishift First, run minishift using minishift start memory=4000. Then, run the following commands to create projects in OpenShift.\n# Create Projects oc new-project dev --display-name=\u0026#34;Tasks - Dev\u0026#34; oc new-project stage --display-name=\u0026#34;Tasks - Stage\u0026#34; oc new-project cicd --display-name=\u0026#34;CI/CD\u0026#34; Install Jenkins in cicd by running\noc project cicd oc new-app openshift/jenkins-2-centos7 Now, give permission to Jenkins to modify in dev and stage project.\noc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n dev oc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n stage Deploy the MySQL in cicd project by loading MySQL template like this:\noc new-app -f .openshift/templates/mysql-template.yaml It will create the mysql server. Please keep in mind that, this MySQL will be available in 172.30.0.30. This configurations in defined in Service configuration section of the template\nSo, we are almost ready. Now please load the pipeline using:\noc new-app -f .openshift/pipelines/openshift-django-pipeline.yaml Now you will be able to see the pipeline in Console \u0026gt; CI/CD \u0026gt; Build \u0026gt; Pipelines. You can run it from there or from CLI like:\noc start-build djangopipeline To implement webhooks, you can look into this project.\nScreenshots Pipeline execustion looks like this in Blue Ocean:   \nStage View in Jenkins looks like this:   \nIn CI/CD project of OpenShift:   \nIn Dev project of OpenShift:   \nIn Stage project of OpenShift:   \nAfter Pipeline execution, it should look like this:   \nDeploy your project: pre-requisite  Have a Django Project with Docker to deploy it. Have minishift installed in your local machine. Give it 4GB memory. If you can pull python, jenkins-2-centos7, mysql-55-centos7 images beforehand using docker pull \u0026lt;image name\u0026gt;, it would make the deployment much more faster.  deploy your project: modify pipeline You can use this Pipeline to deploy your own project with this minimal changes:\n Go to Pipeline template at in my github repository: OR Take this pipeline:  def openshiftDjangoRepo=\u0026#34;https://raw.githubusercontent.com/ruddra/openshift-django/develop/.openshift/templates/openshift-django-template.yaml\u0026#34; def stageTag=\u0026#34;promoteToQA\u0026#34; def DEV_PROJECT=\u0026#34;dev\u0026#34; def STAGE_PROJECT=\u0026#34;stage\u0026#34; def templateName=\u0026#34;openshift-django\u0026#34; pipeline{ agent { label \u0026#34;\u0026#34;} stages{ stage(\u0026#39;Create in DEV\u0026#39;) { when { expression { openshift.withCluster() { openshift.withProject(DEV_PROJECT) { echo \u0026#34;checking openshift django exists in DEV\u0026#34; return !openshift.selector(\u0026#34;bc\u0026#34;, \u0026#34;${templateName}\u0026#34;).exists(); } } } } steps { script { openshift.withCluster() { openshift.withProject(DEV_PROJECT) { openshift.newApp(openshiftDjangoRepo).narrow(\u0026#34;svc\u0026#34;).expose(); } } } } } stage(\u0026#39;Build and Test in DEV\u0026#39;){ steps { script { openshiftBuild(namespace: \u0026#34;${DEV_PROJECT}\u0026#34;, buildConfig: \u0026#34;${templateName}\u0026#34;, showBuildLogs: \u0026#39;true\u0026#39;, waitTime: \u0026#34;600000\u0026#34;) } } } stage(\u0026#39;Rollout to DEV\u0026#39;) { steps { script { openshiftDeploy(namespace: \u0026#34;${DEV_PROJECT}\u0026#34;, deploymentConfig: \u0026#34;${templateName}\u0026#34;, waitTime: \u0026#34;600000\u0026#34;) } } } stage(\u0026#39;Scale in DEV\u0026#39;) { steps { script { openshiftScale(namespace: \u0026#34;${DEV_PROJECT}\u0026#34;, deploymentConfig: \u0026#34;${templateName}\u0026#34;, replicaCount: \u0026#39;1\u0026#39;) } } } stage(\u0026#39;Promote to STAGE?\u0026#39;) { steps { timeout(time:15, unit:\u0026#39;MINUTES\u0026#39;) { input message: \u0026#34;Promote to STAGE?\u0026#34;, ok: \u0026#34;Promote\u0026#34; } script { openshift.withCluster() { openshift.tag(\u0026#34;${DEV_PROJECT}/${templateName}:latest\u0026#34;, \u0026#34;${STAGE_PROJECT}/${templateName}:${stageTag}\u0026#34;) } } } } stage(\u0026#39;Rollout to STAGE\u0026#39;) { steps { script { openshift.withCluster() { openshift.withProject(STAGE_PROJECT) { if (openshift.selector(\u0026#39;dc\u0026#39;, \u0026#34;${templateName}\u0026#34;).exists()) { openshift.selector(\u0026#39;dc\u0026#39;, \u0026#34;${templateName}\u0026#34;).delete() openshift.selector(\u0026#39;svc\u0026#39;, \u0026#34;${templateName}\u0026#34;).delete() openshift.selector(\u0026#39;route\u0026#39;, \u0026#34;${templateName}\u0026#34;).delete() } openshift.newApp(\u0026#34;${templateName}:${stageTag}\u0026#34;).narrow(\u0026#34;svc\u0026#34;).expose() } } } } } stage(\u0026#39;Scale in STAGE\u0026#39;) { steps { script { openshiftScale(namespace: \u0026#34;${STAGE_PROJECT}\u0026#34;, deploymentConfig: \u0026#34;${templateName}\u0026#34;, replicaCount: \u0026#39;3\u0026#39;) } } } } } Edit this line in the template: def openshiftDjangoRepo=\u0026#34;https://raw.githubusercontent.com/ruddra/openshift-django/master/.openshift/templates/openshift-django.yaml\u0026#34; Change the url to either your repository link like https://github.com/ruddra/openshift-django Change the template name in there as well:  def templateName=\u0026#34;openshift-django\u0026#34; Advanced implementation In this post, we have deployed our application by using only OpenShift APIs in Jenkins Plugin. If you want more advanced implementation, like having Jenkins do build, testing, store test results etc with more advanced pipeline, then please look into these posts:\n Deploy A Python App to OpenShift: Planning and Preparations Writing Jenkins Pipeline For OpenShift Deployment Automated Deployment to OpenShift Using Jenkins and Webhook  Thanks for reading. Cheers!!\n","description":"Using Jenkins pipeline, you can easily automate your deployments in OpenShift. In this post, we are going to use this powerful tool to deploy a Django project. But before we start, one thing I need to mention is that, this project has been tested on in Minishift 1.2.0, OpenShift v3.9.0 and Kubernetes v1."},{"date_published":"2018-04-29T10:00:52Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 29, 2018","id":"https://ruddra.com/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/","url":"https://ruddra.com/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/","title":"Boilerplate For Angular 1.X and Django","image":"https://ruddra.com/content/images/2020/04/angular.jpg","tags":["Django","AngularJs"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated. Use it at your own risk\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eSimple and clean boilerplate for using django and angular 1.x together, with basic structure comes built-in. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#tech-stack\"\u003eTech Stack\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisite\"\u003ePrerequisite\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#setup-frontend\"\u003eSetup frontend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#setup-docker\"\u003eSetup docker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#setup-backend\"\u003eSetup backend\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#local-settings-sample\"\u003eLocal settings sample\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#screenshots\"\u003eScreenshots\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"tech-stack\"\u003eTech Stack\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003ePython3\u003c/li\u003e\n\u003cli\u003eDjango 1.11.6, Django Rest Framework\u003c/li\u003e\n\u003cli\u003eWebpack 2\u003c/li\u003e\n\u003cli\u003eJavaScript(ES6)/AngularJS 1.x\u003c/li\u003e\n\u003cli\u003eYarn\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"prerequisite\"\u003ePrerequisite\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eRequire Yarn. How to install Yarn: \u003ca href=\"https://yarnpkg.com/lang/en/docs/install/\"\u003ehttps://yarnpkg.com/lang/en/docs/install/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRequire Docker if you want to use this boiler plate with docker. How to install Docker: \u003ca href=\"https://docs.docker.com/engine/installation/\"\u003ehttps://docs.docker.com/engine/installation/\u003c/a\u003e\n** If you don\u0026rsquo;t want docker, you can still use this boilerplate. Look \u003c!-- raw HTML omitted --\u003ehere\u003c!-- raw HTML omitted --\u003e for details\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"setup-frontend\"\u003eSetup frontend\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eRun \u003ccode\u003emake install-frontend\u003c/code\u003e to install frontend dependencies\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003emake build-frontend\u003c/code\u003e to build frontend.\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003emake watch\u003c/code\u003e to watch over the file changes\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"setup-docker\"\u003eSetup docker\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eRun \u003ccode\u003emake docker-build\u003c/code\u003e to build up docker\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003emake docker-up\u003c/code\u003e to startup docker apps for first time.\u003c/li\u003e\n\u003cli\u003eTo start again \u003ccode\u003emake docker-start\u003c/code\u003e, stop \u003ccode\u003emake docker-stop\u003c/code\u003e, restart \u003ccode\u003emake docker-restart\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eFor running the migrations: \u003ccode\u003emake docker-migrate\u003c/code\u003e\n*How to use django with docker: ruddra.com/2016/08/14/docker-django-nginx-postgres/\n*For more commands, go inside docker folder.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"setup-backend\"\u003eSetup backend\u003c/h2\u003e\n\u003cp\u003eIf you are not using docker, then you can go to backend folder and do following steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate Virtual Environment using: \u003ccode\u003evirtualenv -p python3 /path/to/venv\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eActivate it: \u003ccode\u003esource /path/to/venv bin activate\u003c/code\u003e(Its different in Windows, see virtual environment documentation)\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003epip install -r requirements.txt\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ePut your local settings in \u003ccode\u003elocal_settings.py\u003c/code\u003e and place it in \u0026ldquo;backend/movie_app/\u0026rdquo; directory to override current settings. FYI You need to put your DB settings in \u003ccode\u003elocal_settings.py\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eNow run \u003ccode\u003e./manage.py migrate\u003c/code\u003e to migrate Database\u003c/li\u003e\n\u003cli\u003eNow run \u003ccode\u003e./manage.py collectstatic\u003c/code\u003e to run collectstatic\u003c/li\u003e\n\u003cli\u003eRun: \u003ccode\u003e./manage.py runserver\u003c/code\u003e to run the django application\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eCreate super user and access the adminsite. In there you can create movies instances.\u003c/li\u003e\n\u003cli\u003eOr use API \u003ccode\u003ehost:port/api/movies\u003c/code\u003e to create Movies\u003c/li\u003e\n\u003cli\u003eAccess \u003ccode\u003ehost:port\u003c/code\u003e to see the movies.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"local-settings-sample\"\u003eLocal settings sample\u003c/h2\u003e\n\u003cp\u003eLets say you want to use sqllite instead of psql. You can try like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Will reside in ./backend/movie_app/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBASE_DIR\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edirname\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edirname\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eabspath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vm\"\u003e__file__\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDATABASES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"s1\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s1\"\u003e\u0026#39;ENGINE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;django.db.backends.sqlite3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"s1\"\u003e\u0026#39;NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBASE_DIR\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;db.sqlite3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"screenshots\"\u003eScreenshots\u003c/h2\u003e\n\u003cp\u003eFront page at: http://localhost:8000/#!/\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='Front Page'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eRest API at: http://localhost:8000/api/movies/\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='DRF API'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAdmin Site at: http://localhost:8000/admin/movies/movie/\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \u003cimg class=\"lozad\" data-src=\"\" alt=\"\" title=\"\" /\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"\" alt='ADMIN SITE'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n","content":" This post is deprecated. Use it at your own risk\n Simple and clean boilerplate for using django and angular 1.x together, with basic structure comes built-in. Table of contents\u0026nbsp;  Tech Stack Prerequisite Setup frontend Setup docker Setup backend Usage Local settings sample Screenshots   \nTech Stack  Python3 Django 1.11.6, Django Rest Framework Webpack 2 JavaScript(ES6)/AngularJS 1.x Yarn  Prerequisite  Require Yarn. How to install Yarn: https://yarnpkg.com/lang/en/docs/install/ Require Docker if you want to use this boiler plate with docker. How to install Docker: https://docs.docker.com/engine/installation/ ** If you don\u0026rsquo;t want docker, you can still use this boilerplate. Look herefor details  Setup frontend  Run make install-frontend to install frontend dependencies Run make build-frontend to build frontend. Run make watch to watch over the file changes  Setup docker  Run make docker-build to build up docker Run make docker-up to startup docker apps for first time. To start again make docker-start, stop make docker-stop, restart make docker-restart For running the migrations: make docker-migrate *How to use django with docker: ruddra.com/2016/08/14/docker-django-nginx-postgres/ *For more commands, go inside docker folder.  Setup backend If you are not using docker, then you can go to backend folder and do following steps:\n Create Virtual Environment using: virtualenv -p python3 /path/to/venv Activate it: source /path/to/venv bin activate(Its different in Windows, see virtual environment documentation) Run pip install -r requirements.txt Put your local settings in local_settings.py and place it in \u0026ldquo;backend/movie_app/\u0026rdquo; directory to override current settings. FYI You need to put your DB settings in local_settings.py Now run ./manage.py migrate to migrate Database Now run ./manage.py collectstatic to run collectstatic Run: ./manage.py runserver to run the django application  Usage  Create super user and access the adminsite. In there you can create movies instances. Or use API host:port/api/movies to create Movies Access host:port to see the movies.  Local settings sample Lets say you want to use sqllite instead of psql. You can try like this:\n# Will reside in ./backend/movie_app/ import os BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) DATABASES = { \u0026#39;default\u0026#39;: { \u0026#39;ENGINE\u0026#39;: \u0026#39;django.db.backends.sqlite3\u0026#39;, \u0026#39;NAME\u0026#39;: os.path.join(BASE_DIR, \u0026#39;db.sqlite3\u0026#39;), } } Screenshots Front page at: http://localhost:8000/#!/\n   Rest API at: http://localhost:8000/api/movies/\n   Admin Site at: http://localhost:8000/admin/movies/movie/\n   ","description":"Simple and clean boilerplate for using Django with angular 1.x, with basic structure comes built-in."},{"date_published":"2018-04-29T07:37:24Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 29, 2018","id":"https://ruddra.com/migrating-from-ghost-11-to-1-xx-using-docker/","url":"https://ruddra.com/migrating-from-ghost-11-to-1-xx-using-docker/","title":"Migration from Ghost 0.11 to 1.XX Using Docker","image":"https://ruddra.com/content/images/2020/03/ghost.jpg","tags":["Docker","Ghost"],"content_html":"\u003cp\u003e\u003ca href=\"https://ghost.org/\"\u003eGhost\u003c/a\u003e had formulated lots changes when they released version 1.XX. So, when you try to upgrade from 0.11 to 1.XX, you can follow the following steps.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#steps\"\u003eSteps\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#export-backup\"\u003eExport backup\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#rename-old-content\"\u003eRename old content\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#copy-to-a-seperate-directory\"\u003eCopy to a seperate directory\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#create-cocker-compose-file\"\u003eCreate cocker compose file\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#start-docker-containers\"\u003eStart docker containers\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#setup-ghost-admin\"\u003eSetup ghost admin\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#import-file\"\u003eImport file\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#change-theme\"\u003eChange Theme\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#regarding-updating-handlebar-files\"\u003eRegarding updating handlebar files\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eFYI\u003c/strong\u003e, you can also use the following steps if you want run Ghost in Docker and import your existing settings. \u003cstrong\u003eJust Skip Step 1, 2, 7, 8\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"export-backup\"\u003eExport backup\u003c/h3\u003e\n\u003cp\u003eRun your Ghost server and go to adminsite by \u003ccode\u003elocalhost:2368/admin\u003c/code\u003e or \u003ccode\u003elocalhost:2368/ghost\u003c/code\u003e (assuming its running in 2368 port). Now go to \u003cem\u003eLabs\u003c/em\u003e\u0026gt;\u003cem\u003eExport Your Content\u003c/em\u003e. Click there and export your backup \u003ccode\u003ejson\u003c/code\u003e file.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2476\" height=\"908\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2476 908'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/export_huf332aa01888dea773845540f58eaa92b_133320_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/export_huf332aa01888dea773845540f58eaa92b_133320_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/export_huf332aa01888dea773845540f58eaa92b_133320_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/export_huf332aa01888dea773845540f58eaa92b_133320_720x0_resize_q75_lanczos.jpg 720w'\n        alt='export' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/export.jpg\" width=\"2476\" height=\"908\" alt='export'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"rename-old-content\"\u003eRename old content\u003c/h3\u003e\n\u003cp\u003eRenamed your content directory as \u003cem\u003eold content\u003c/em\u003e and copy your exiting \u003cem\u003eimages\u003c/em\u003e, \u003cem\u003ethemes\u003c/em\u003e from that directory and put them in new folder named \u003cstrong\u003econtent\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"copy-to-a-seperate-directory\"\u003eCopy to a seperate directory\u003c/h3\u003e\n\u003cp\u003eCopy \u003cstrong\u003econtent\u003c/strong\u003e directory to a seperate folder where your dockerized ghost files will exist.\u003c/p\u003e\n\u003ch3 id=\"create-cocker-compose-file\"\u003eCreate cocker compose file\u003c/h3\u003e\n\u003cp\u003eCreate a \u003ccode\u003edocker-compose.yml\u003c/code\u003e file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eghost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eghost:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eg01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;2368:2368\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003e./content/images:/var/lib/ghost/content/images\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003e./content/themes:/var/lib/ghost/content/themes\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003e./content/apps:/var/lib/ghost/content/apps\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"l\"\u003e./content/data:/var/lib/ghost/content/data\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere you can see that your \u003cstrong\u003econtent\u003c/strong\u003e directory is syncing with Ghost container\u0026rsquo;s \u003cstrong\u003econtent\u003c/strong\u003e directory through volume sharing.\n\u003cstrong\u003eBTW\u003c/strong\u003e you need to have \u003ca href=\"https://www.python.org/\"\u003ePython\u003c/a\u003e and \u003ca href=\"https://docs.docker.com/compose/\"\u003edocker-compose\u003c/a\u003e in your local machine. Install docker compose by \u003ccode\u003epip install docker-compose\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"start-docker-containers\"\u003eStart docker containers\u003c/h3\u003e\n\u003cp\u003eNow, run \u003ccode\u003edocker-compose up\u003c/code\u003e. It will start up your ghost server. Access it via \u003ccode\u003elocalhost:2368\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"setup-ghost-admin\"\u003eSetup ghost admin\u003c/h3\u003e\n\u003cp\u003eFor new Ghost users and those whom are migrating, you need to go adminsite using \u003ccode\u003elocalhost:2368/admin\u003c/code\u003e and setup your ghost admin.\u003c/p\u003e\n\u003ch3 id=\"import-file\"\u003eImport file\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eThis step is also for migration\u003c/em\u003e. Go to \u003cem\u003eLabs\u003c/em\u003e\u0026gt;\u003cem\u003eImport Your Content\u003c/em\u003e, then import the \u003ccode\u003ejson\u003c/code\u003e file from \u003cstrong\u003eStep 2\u003c/strong\u003e.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2456\" height=\"822\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2456 822'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/import_hu145032c187aa5ca826c77ce58d859493_114571_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/import_hu145032c187aa5ca826c77ce58d859493_114571_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/import_hu145032c187aa5ca826c77ce58d859493_114571_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/import_hu145032c187aa5ca826c77ce58d859493_114571_720x0_resize_q75_lanczos.jpg 720w'\n        alt='import' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/import.jpg\" width=\"2456\" height=\"822\" alt='import'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch3 id=\"change-theme\"\u003eChange Theme\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eThis step is also for migration only\u003c/em\u003e. Go to \u003cem\u003eDesign\u003c/em\u003e section in admin site. You can see the themes which can be used in here. \u003cstrong\u003eFYI\u003c/strong\u003e, if your theme does not appear, don\u0026rsquo;t worry.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2536\" height=\"626\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2536 626'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/THEME_hu63a9335ce762f3b14899154bcce1ee61_61644_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/THEME_hu63a9335ce762f3b14899154bcce1ee61_61644_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/THEME_hu63a9335ce762f3b14899154bcce1ee61_61644_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/THEME_hu63a9335ce762f3b14899154bcce1ee61_61644_720x0_resize_q75_lanczos.jpg 720w'\n        alt='THEME' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/THEME.jpg\" width=\"2536\" height=\"626\" alt='THEME'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eJust create a zip file of your particular theme in themes folder.\u003c/li\u003e\n\u003cli\u003eIn \u003ccode\u003eadminsite\u0026gt;Design\u003c/code\u003e section, click on upload a theme. Then try to upload the zip file. It will show errors where the changes needs, fix the errors, and import again.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"regarding-updating-handlebar-files\"\u003eRegarding updating handlebar files\u003c/h3\u003e\n\u003cp\u003eOne important thing to mention, if you update any handlebar files in the theme, then you need to restart the docker container to see the change in the frontend. Just run \u003ccode\u003edocker-compose stop\u003c/code\u003e and \u003ccode\u003edocker-compose start\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThats it. You have a docker powered ghost blog 😄.\u003c/p\u003e\n\u003cp\u003eYou can find a working example \u003ca href=\"https://github.com/ruddra/docker-ghost\"\u003ein my github repo\u003c/a\u003e.\u003c/p\u003e\n","content":"Ghost had formulated lots changes when they released version 1.XX. So, when you try to upgrade from 0.11 to 1.XX, you can follow the following steps.Table of contents\u0026nbsp;  Steps  Export backup Rename old content Copy to a seperate directory Create cocker compose file Start docker containers Setup ghost admin Import file Change Theme Regarding updating handlebar files   In conclusion   \nSteps FYI, you can also use the following steps if you want run Ghost in Docker and import your existing settings. Just Skip Step 1, 2, 7, 8.\nExport backup Run your Ghost server and go to adminsite by localhost:2368/admin or localhost:2368/ghost (assuming its running in 2368 port). Now go to Labs\u0026gt;Export Your Content. Click there and export your backup json file.   \nRename old content Renamed your content directory as old content and copy your exiting images, themes from that directory and put them in new folder named content.\nCopy to a seperate directory Copy content directory to a seperate folder where your dockerized ghost files will exist.\nCreate cocker compose file Create a docker-compose.yml file like this:\nversion:\u0026#34;2\u0026#34;services:ghost:image:ghost:latestcontainer_name:g01ports:- \u0026#34;2368:2368\u0026#34;volumes:- ./content/images:/var/lib/ghost/content/images- ./content/themes:/var/lib/ghost/content/themes- ./content/apps:/var/lib/ghost/content/apps- ./content/data:/var/lib/ghost/content/dataHere you can see that your content directory is syncing with Ghost container\u0026rsquo;s content directory through volume sharing. BTW you need to have Python and docker-compose in your local machine. Install docker compose by pip install docker-compose\nStart docker containers Now, run docker-compose up. It will start up your ghost server. Access it via localhost:2368.\nSetup ghost admin For new Ghost users and those whom are migrating, you need to go adminsite using localhost:2368/admin and setup your ghost admin.\nImport file This step is also for migration. Go to Labs\u0026gt;Import Your Content, then import the json file from Step 2.   \nChange Theme This step is also for migration only. Go to Design section in admin site. You can see the themes which can be used in here. FYI, if your theme does not appear, don\u0026rsquo;t worry.   \n Just create a zip file of your particular theme in themes folder. In adminsite\u0026gt;Design section, click on upload a theme. Then try to upload the zip file. It will show errors where the changes needs, fix the errors, and import again.  Regarding updating handlebar files One important thing to mention, if you update any handlebar files in the theme, then you need to restart the docker container to see the change in the frontend. Just run docker-compose stop and docker-compose start.\nIn conclusion Thats it. You have a docker powered ghost blog 😄.\nYou can find a working example in my github repo.\n","description":"Ghost had formulated lots changes when they released version 1.XX. So, when you try to upgrade from 0.11 to 1.XX, you can follow the following steps.Table of contents\u0026nbsp;  Steps  Export backup Rename old content Copy to a seperate directory Create cocker compose file Start docker containers Setup ghost admin Import file Change Theme Regarding updating handlebar files   In conclusion"},{"date_published":"2018-04-27T16:18:35Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 27, 2018","id":"https://ruddra.com/bandarban-nafakhum-amiakhum-satbhaikhum/","url":"https://ruddra.com/bandarban-nafakhum-amiakhum-satbhaikhum/","title":"[Travel] Bandarban: In Search of Waterfalls","image":"https://ruddra.com/content/images/2018/04/2-1.jpg","tags":["Travelling","Bangladesh"],"content_html":"\u003cp\u003eBandarban is a heaven for trekking for Bangladeshi people. There are lots of hills around the district, and there are some amazing waterfall as well. I visited three amazing waterfalls named \u003ca href=\"https://en.wikipedia.org/wiki/Nafa-khum\"\u003eNafakhum\u003c/a\u003e, AmiaKhum, Satbhaikhum. Khum means waterfall in Marma language.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#thanchi\"\u003eThanchi\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#remakri\"\u003eRemakri\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#nafakhum\"\u003eNafakhum\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#amiakhum\"\u003eAmiakhum\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#padma-jhiri\"\u003ePadma Jhiri\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#tindu\"\u003eTindu\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"thanchi\"\u003eThanchi\u003c/h2\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/road_to_thanchi_hu556d5b39ff9dbb25955ccd88e8a22c97_36546_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/road_to_thanchi_hu556d5b39ff9dbb25955ccd88e8a22c97_36546_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/road_to_thanchi_hu556d5b39ff9dbb25955ccd88e8a22c97_36546_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/road_to_thanchi_hu556d5b39ff9dbb25955ccd88e8a22c97_36546_720x0_resize_q75_lanczos.jpg 720w'\n        alt='thanchi' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/road_to_thanchi.jpg\" width=\"960\" height=\"720\" alt='thanchi'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003ecaptured on the way to Thanchi\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eAgain we went to Bandarban town and from there we took a \u003cstrong\u003eChander Gari\u003c/strong\u003e(A four wheel drive car) to \u003ca href=\"https://en.wikipedia.org/wiki/Thanchi_Upazila\"\u003eThanchi\u003c/a\u003e Upazila. On the way, you will cross Nilgiri and Peak69, they are two of most popular places in Bandarban.\u003c/p\u003e\n\u003ch2 id=\"remakri\"\u003eRemakri\u003c/h2\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/thanchi_hu702e16b85b45ae74a405b381cba126a0_168887_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/thanchi_hu702e16b85b45ae74a405b381cba126a0_168887_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/thanchi_hu702e16b85b45ae74a405b381cba126a0_168887_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/thanchi_hu702e16b85b45ae74a405b381cba126a0_168887_720x0_resize_q75_lanczos.jpg 720w'\n        alt='thanchi' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/thanchi.jpg\" width=\"960\" height=\"720\" alt='thanchi'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eShangu river at Thanchi Upazila\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWe hired guide from there, as you can\u0026rsquo;t go beyond this place unless you have a guide. Also to mention, we lost cellphone signal after leaving Thanchi, but it was long time ago.\u003c/p\u003e\n\u003cp\u003eAs we went there on an almost rainy season, the \u003ca href=\"https://en.wikipedia.org/wiki/Sangu_River\"\u003eShangu river\u003c/a\u003e was full and we took a boat to Remakri. On the way, we saw \u003cstrong\u003eBoro Pathor\u003c/strong\u003e(means big stones).\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/tindu_hu3ebff54f86720b5edc4061d370acde79_148504_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/tindu_hu3ebff54f86720b5edc4061d370acde79_148504_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/tindu_hu3ebff54f86720b5edc4061d370acde79_148504_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/tindu_hu3ebff54f86720b5edc4061d370acde79_148504_720x0_resize_q75_lanczos.jpg 720w'\n        alt='tindu' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/tindu.jpg\" width=\"960\" height=\"720\" alt='tindu'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eTindu\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWe spent the night in Remakri at a cottage. But you can stay in tent if you want, also you need to bring it yourself.\u003c/p\u003e\n\u003ch2 id=\"nafakhum\"\u003eNafakhum\u003c/h2\u003e\n\u003cp\u003eNext day moring, we started our trekking to Nafakhum. We walked through Shangu river bank, crossed many \u003cstrong\u003eJhiri poth\u003c/strong\u003e(the path has been created for regular water flow). Finally we arrived at Nafakhum in 3 hours. If you are on a day trip, then you need to return to Remakri from here.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/10689766_10204963444234738_8604235006789025468_n_hu5ba2f998c9a0126691d26ef63b1ff12d_134420_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/10689766_10204963444234738_8604235006789025468_n_hu5ba2f998c9a0126691d26ef63b1ff12d_134420_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/10689766_10204963444234738_8604235006789025468_n_hu5ba2f998c9a0126691d26ef63b1ff12d_134420_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/10689766_10204963444234738_8604235006789025468_n_hu5ba2f998c9a0126691d26ef63b1ff12d_134420_720x0_resize_q75_lanczos.jpg 720w'\n        alt='nafakum' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/10689766_10204963444234738_8604235006789025468_n.jpg\" width=\"960\" height=\"720\" alt='nafakum'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eNafakhum\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWe did not stay long at Nafakhum. So we started our trekking towards \u003cstrong\u003eKhiyong Para\u003c/strong\u003e. Its a village where \u003cstrong\u003eKhiyong\u003c/strong\u003e people lives. It took us about 4-5 hours to arrive there. Its in top of the hill, have an amazing view. We stayed with a Khiyong family, and enjoyed their food, company and hospitality.\u003c/p\u003e\n\u003ch2 id=\"amiakhum\"\u003eAmiakhum\u003c/h2\u003e\n\u003cp\u003eNext day moring, we took a local guide with us to go to Amiakhum. We climbed 3 hills and took us about 3 hours to arrive at Amiakhum.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/10290133_10204963447114810_6764257169095478011_n_hu8229f5a0f6893777bf5e2967740f1a11_158184_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/10290133_10204963447114810_6764257169095478011_n_hu8229f5a0f6893777bf5e2967740f1a11_158184_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/10290133_10204963447114810_6764257169095478011_n_hu8229f5a0f6893777bf5e2967740f1a11_158184_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/10290133_10204963447114810_6764257169095478011_n_hu8229f5a0f6893777bf5e2967740f1a11_158184_720x0_resize_q75_lanczos.jpg 720w'\n        alt='amiakhum' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/10290133_10204963447114810_6764257169095478011_n.jpg\" width=\"960\" height=\"720\" alt='amiakhum'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eView from some para which was a pitstop to Amiakhum trekking\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eAmiakhum is locally known as \u003cstrong\u003eHamiakhum\u003c/strong\u003e. \u003cstrong\u003eSatbhaikhum\u003c/strong\u003e is also close to the \u003cstrong\u003eAmiakhum\u003c/strong\u003e. You need to cross a small canal to arrive at Satbhaikhum. You will need a \u003cstrong\u003eBasher Bhela\u003c/strong\u003e(bamboo boat). Sometimes you can\u0026rsquo;t find \u003cem\u003ebhela\u003c/em\u003e, so you can either make a new one or swim across the canal. I crossed the icy cold canal that day, and on the other side, saw amazing view of \u003cstrong\u003eSatbhaikhum\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eAlso on top of \u003cstrong\u003eAmiakhum\u003c/strong\u003e, there is a small lake which sources all the water. We rode around it with a \u003cstrong\u003ebhela\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/hamiakum_hu398c4442a1e5641d203c5c721d50f1ae_132612_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/hamiakum_hu398c4442a1e5641d203c5c721d50f1ae_132612_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/hamiakum_hu398c4442a1e5641d203c5c721d50f1ae_132612_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/hamiakum_hu398c4442a1e5641d203c5c721d50f1ae_132612_720x0_resize_q75_lanczos.jpg 720w'\n        alt='amiakhum' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/hamiakum.jpg\" width=\"960\" height=\"720\" alt='amiakhum'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eAmiakhum\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eWe returned via \u003cstrong\u003eDebotar Pahar\u003c/strong\u003e(now a days people ofter use this route). When we went, it was full of jungle, as we went through, we got stuck by lots of leeches ;). It took us about 2 hours to get back.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"720\" height=\"960\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 720 960'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/2_hucbb3ce0874584ff6927e6d0347fc2cb0_169171_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/2_hucbb3ce0874584ff6927e6d0347fc2cb0_169171_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/2_hucbb3ce0874584ff6927e6d0347fc2cb0_169171_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/2_hucbb3ce0874584ff6927e6d0347fc2cb0_169171_720x0_resize_q75_lanczos.jpg 720w'\n        alt='amiakhum' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/2.jpg\" width=\"720\" height=\"960\" alt='amiakhum'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eView from the bottom of Amiakhum\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"padma-jhiri\"\u003ePadma Jhiri\u003c/h2\u003e\n\u003cp\u003eWe stayed the night at \u003cstrong\u003eKhiyong para\u003c/strong\u003e, next morning, we started our return journey by \u003cstrong\u003ePadma Jhiri\u003c/strong\u003e. On the way, we saw some amazing wild waterfalls. It was raining hard that day, so we walked through water a lot of time. It took us about 5 hours to arrive at \u003cstrong\u003eTindu\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"720\" height=\"960\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 720 960'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/padma-jhiri_hud9b23f209110f0d26703c121444f8e3c_237520_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/padma-jhiri_hud9b23f209110f0d26703c121444f8e3c_237520_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/padma-jhiri_hud9b23f209110f0d26703c121444f8e3c_237520_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/padma-jhiri_hud9b23f209110f0d26703c121444f8e3c_237520_720x0_resize_q75_lanczos.jpg 720w'\n        alt='padma jhiri' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/padma-jhiri.jpg\" width=\"720\" height=\"960\" alt='padma jhiri'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eOne snap from Padma Jhiri\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"tindu\"\u003eTindu\u003c/h2\u003e\n\u003cp\u003eFrom Tindu, we went to \u003cstrong\u003eThanchi\u003c/strong\u003e via a boat. From Thanchi we went to Bandarban via Bus(fare was 300 tk per head that time).\u003c/p\u003e\n\u003cp\u003eSo thats it\u0026hellip;. Cheers!!!\u003c/p\u003e\n","content":"Bandarban is a heaven for trekking for Bangladeshi people. There are lots of hills around the district, and there are some amazing waterfall as well. I visited three amazing waterfalls named Nafakhum, AmiaKhum, Satbhaikhum. Khum means waterfall in Marma language.Table of contents\u0026nbsp;  Thanchi Remakri Nafakhum Amiakhum Padma Jhiri Tindu   \nThanchi    captured on the way to Thanchi\nAgain we went to Bandarban town and from there we took a Chander Gari(A four wheel drive car) to Thanchi Upazila. On the way, you will cross Nilgiri and Peak69, they are two of most popular places in Bandarban.\nRemakri    Shangu river at Thanchi Upazila\nWe hired guide from there, as you can\u0026rsquo;t go beyond this place unless you have a guide. Also to mention, we lost cellphone signal after leaving Thanchi, but it was long time ago.\nAs we went there on an almost rainy season, the Shangu river was full and we took a boat to Remakri. On the way, we saw Boro Pathor(means big stones).\n   Tindu\nWe spent the night in Remakri at a cottage. But you can stay in tent if you want, also you need to bring it yourself.\nNafakhum Next day moring, we started our trekking to Nafakhum. We walked through Shangu river bank, crossed many Jhiri poth(the path has been created for regular water flow). Finally we arrived at Nafakhum in 3 hours. If you are on a day trip, then you need to return to Remakri from here.\n   Nafakhum\nWe did not stay long at Nafakhum. So we started our trekking towards Khiyong Para. Its a village where Khiyong people lives. It took us about 4-5 hours to arrive there. Its in top of the hill, have an amazing view. We stayed with a Khiyong family, and enjoyed their food, company and hospitality.\nAmiakhum Next day moring, we took a local guide with us to go to Amiakhum. We climbed 3 hills and took us about 3 hours to arrive at Amiakhum.\n   View from some para which was a pitstop to Amiakhum trekking\nAmiakhum is locally known as Hamiakhum. Satbhaikhum is also close to the Amiakhum. You need to cross a small canal to arrive at Satbhaikhum. You will need a Basher Bhela(bamboo boat). Sometimes you can\u0026rsquo;t find bhela, so you can either make a new one or swim across the canal. I crossed the icy cold canal that day, and on the other side, saw amazing view of Satbhaikhum.\nAlso on top of Amiakhum, there is a small lake which sources all the water. We rode around it with a bhela.\n   Amiakhum\nWe returned via Debotar Pahar(now a days people ofter use this route). When we went, it was full of jungle, as we went through, we got stuck by lots of leeches ;). It took us about 2 hours to get back.\n   View from the bottom of Amiakhum\nPadma Jhiri We stayed the night at Khiyong para, next morning, we started our return journey by Padma Jhiri. On the way, we saw some amazing wild waterfalls. It was raining hard that day, so we walked through water a lot of time. It took us about 5 hours to arrive at Tindu.\n   One snap from Padma Jhiri\nTindu From Tindu, we went to Thanchi via a boat. From Thanchi we went to Bandarban via Bus(fare was 300 tk per head that time).\nSo thats it\u0026hellip;. Cheers!!!\n","description":"My visit to Nafakhum, Amiakhum and Satbhaikhum, three most beautiful waterfalls in Bangladesh"},{"date_published":"2018-04-26T16:26:30Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 26, 2018","id":"https://ruddra.com/bandarban-journey-to-keokaradong/","url":"https://ruddra.com/bandarban-journey-to-keokaradong/","title":"[Travel] Bandarban: Journey to Keokradong","image":"https://ruddra.com/content/images/2018/04/bogalake-1.jpg","tags":["Travelling","Bangladesh"],"content_html":"\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Bandarban_District\"\u003eBandarban\u003c/a\u003e is a beautiful district of Bangladesh. You will see lots of amazing mountains which are part of \u003ca href=\"https://en.wikipedia.org/wiki/Arakan_Mountains\"\u003eArakan range\u003c/a\u003e. Keokradong is the 3rd highest pick**(after Tajingdong and Saka Haphong, \u003ca href=\"https://en.wikipedia.org/wiki/List_of_mountains_of_Bangladesh\"\u003ereferences are here\u003c/a\u003e) of Bangladesh, which is situated in Bandarbans. So today I am going to share my experience visiting there. But beware, your experience might differ from mine as I went there a long time ago.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#journey-begins\"\u003eJourney begins\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-bandarban\"\u003eIn Bandarban\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#at-boga-lake\"\u003eAt Boga lake\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#to-keokaradong\"\u003eTo Keokaradong\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"journey-begins\"\u003eJourney begins\u003c/h2\u003e\n\u003cp\u003eSo, me and some of my friends went there from Dhaka. We got to Bandarban via bus, but there are other means of transport. Like you can go to Chittagong via train/bus/plane, and catch a bus to Bandarban from there.\u003c/p\u003e\n\u003ch2 id=\"in-bandarban\"\u003eIn Bandarban\u003c/h2\u003e\n\u003cp\u003eAfter arriving to Bandarban, next we had breakfast, then took a 4 wheel drive Toyota car(its also known as \u003cstrong\u003eChander Gari\u003c/strong\u003e) to \u003ca href=\"https://en.wikipedia.org/wiki/Ruma_Upazila\"\u003eRuma\u003c/a\u003e. It costs about 5K tk per car. You can also take bus to go to there, costs 300 tk per-head.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/keo_1-1_hue1761d2423427cee57c75420fb5ff24d_210455_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/keo_1-1_hue1761d2423427cee57c75420fb5ff24d_210455_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/keo_1-1_hue1761d2423427cee57c75420fb5ff24d_210455_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/keo_1-1_hue1761d2423427cee57c75420fb5ff24d_210455_720x0_resize_q75_lanczos.jpg 720w'\n        alt='On the way to Ruma' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/keo_1-1.jpg\" width=\"2048\" height=\"1152\" alt='On the way to Ruma'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eTook this photo on the way to Ruma\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eBy car it takes about 3 hours to arrive at Ruma. From there we took another \u003cstrong\u003eChander Gari\u003c/strong\u003e to arrive at bottom of \u003ca href=\"https://en.wikipedia.org/wiki/Bagakain_Lake\"\u003eBoga Lake\u003c/a\u003e.\nYou can buy necessary stuff from Ruma Bazar, like masala(which we will mention later), shoes for climbing, anklet, medicine etc.\u003c/p\u003e\n\u003cp\u003eIn winter, you can take the \u003cstrong\u003eChander Gari\u003c/strong\u003e to lake\u0026rsquo;s bank directly, but in rainy season, you can\u0026rsquo;t get that close due to bad road condition. So, you might need to start trekking long before.\u003c/p\u003e\n\u003cp\u003eAfter we arrived at bottom of the hill which surrounds the Boga lake, we purchased some bamboo sticks and started climbing the hill.It took us around 60 minutes.\u003c/p\u003e\n\u003ch2 id=\"at-boga-lake\"\u003eAt Boga lake\u003c/h2\u003e\n\u003cp\u003eThen we saw a mesmerising beauty, the lake itself. It took away our tiredness of climbing, cheer us up!!\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/bogalake_hu92c04046da3d4074953cad185e3935e5_269308_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/bogalake_hu92c04046da3d4074953cad185e3935e5_269308_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/bogalake_hu92c04046da3d4074953cad185e3935e5_269308_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/bogalake_hu92c04046da3d4074953cad185e3935e5_269308_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Boga Lake' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/bogalake.jpg\" width=\"2048\" height=\"1152\" alt='Boga Lake'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eWe stayed at one of the cottages near the lake for 100 tk per night. We also ate our dinner there for 100 tk per meal. We also had BBQ chicken, we brought BBQ masala from Ruma Bazar, and chicken from some house in Boga lake.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/boga2_hud131b59d17f63e267c91cf9ec331ce79_32559_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/boga2_hud131b59d17f63e267c91cf9ec331ce79_32559_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/boga2_hud131b59d17f63e267c91cf9ec331ce79_32559_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/boga2_hud131b59d17f63e267c91cf9ec331ce79_32559_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Boga Lake evening' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/boga2.jpg\" width=\"960\" height=\"720\" alt='Boga Lake evening'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eBut, if you arrive early in Boga lake, then you can start climbing the Keokradong(which I did in my second trip). But its not recommended if its your first time in there.\u003c/p\u003e\n\u003ch2 id=\"to-keokaradong\"\u003eTo Keokaradong\u003c/h2\u003e\n\u003cp\u003eKeokradong stands just beside the Boga lake. We started climbing the hill in early morning. We bought some sugar canes before we started our journey. It gave us lots of glucose, which helped us stay fresh for the trekking. Be aware, there are lots leeches in rainy season, so bring salt/tobacco. You can climb at night as well, its super fun and less tiring.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/keo_3_hu7bc7cf2a955502e4eb9b6e644c4a9636_140944_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/keo_3_hu7bc7cf2a955502e4eb9b6e644c4a9636_140944_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/keo_3_hu7bc7cf2a955502e4eb9b6e644c4a9636_140944_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/keo_3_hu7bc7cf2a955502e4eb9b6e644c4a9636_140944_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Trekking' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/keo_3.jpg\" width=\"2048\" height=\"1152\" alt='Trekking'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIt took us about 4 hours to climb up. It may differ due to weather conditions. It was comfortable trekking. On top, it was amazing to see the surrounding.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"960\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 960 720'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/keo3_hu663303cbfe72989e6799d64d5be2603f_126143_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/keo3_hu663303cbfe72989e6799d64d5be2603f_126143_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/keo3_hu663303cbfe72989e6799d64d5be2603f_126143_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/keo3_hu663303cbfe72989e6799d64d5be2603f_126143_720x0_resize_q75_lanczos.jpg 720w'\n        alt='On top of Keokaradong' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/keo3.jpg\" width=\"960\" height=\"720\" alt='On top of Keokaradong'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eAfter spending sometime at top, we started the return journey, it took us about 1 hour. Then, we used the same vehicles same as our coming journey.\u003c/p\u003e\n\u003cp\u003eBut I spent the night at the rest house on top of the mountain for my second trip. Morning on top of Keokradong is amazing.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/keo4_hudaf59d1d6368d6fda5d59a19a3700f7b_79165_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/keo4_hudaf59d1d6368d6fda5d59a19a3700f7b_79165_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/keo4_hudaf59d1d6368d6fda5d59a19a3700f7b_79165_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/keo4_hudaf59d1d6368d6fda5d59a19a3700f7b_79165_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Morning' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/keo4.jpg\" width=\"2048\" height=\"1152\" alt='Morning'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cstrong\u003eMorning view from Keokradong\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSo, Thats it\u0026hellip;. Stay tuned for more travel blogs ;).\u003c/p\u003e\n","content":"Bandarban is a beautiful district of Bangladesh. You will see lots of amazing mountains which are part of Arakan range. Keokradong is the 3rd highest pick**(after Tajingdong and Saka Haphong, references are here) of Bangladesh, which is situated in Bandarbans. So today I am going to share my experience visiting there. But beware, your experience might differ from mine as I went there a long time ago.Table of contents\u0026nbsp;  Journey begins In Bandarban At Boga lake To Keokaradong   \nJourney begins So, me and some of my friends went there from Dhaka. We got to Bandarban via bus, but there are other means of transport. Like you can go to Chittagong via train/bus/plane, and catch a bus to Bandarban from there.\nIn Bandarban After arriving to Bandarban, next we had breakfast, then took a 4 wheel drive Toyota car(its also known as Chander Gari) to Ruma. It costs about 5K tk per car. You can also take bus to go to there, costs 300 tk per-head.\n   Took this photo on the way to Ruma\nBy car it takes about 3 hours to arrive at Ruma. From there we took another Chander Gari to arrive at bottom of Boga Lake. You can buy necessary stuff from Ruma Bazar, like masala(which we will mention later), shoes for climbing, anklet, medicine etc.\nIn winter, you can take the Chander Gari to lake\u0026rsquo;s bank directly, but in rainy season, you can\u0026rsquo;t get that close due to bad road condition. So, you might need to start trekking long before.\nAfter we arrived at bottom of the hill which surrounds the Boga lake, we purchased some bamboo sticks and started climbing the hill.It took us around 60 minutes.\nAt Boga lake Then we saw a mesmerising beauty, the lake itself. It took away our tiredness of climbing, cheer us up!!   \nWe stayed at one of the cottages near the lake for 100 tk per night. We also ate our dinner there for 100 tk per meal. We also had BBQ chicken, we brought BBQ masala from Ruma Bazar, and chicken from some house in Boga lake.\n   But, if you arrive early in Boga lake, then you can start climbing the Keokradong(which I did in my second trip). But its not recommended if its your first time in there.\nTo Keokaradong Keokradong stands just beside the Boga lake. We started climbing the hill in early morning. We bought some sugar canes before we started our journey. It gave us lots of glucose, which helped us stay fresh for the trekking. Be aware, there are lots leeches in rainy season, so bring salt/tobacco. You can climb at night as well, its super fun and less tiring.\n   It took us about 4 hours to climb up. It may differ due to weather conditions. It was comfortable trekking. On top, it was amazing to see the surrounding.\n   After spending sometime at top, we started the return journey, it took us about 1 hour. Then, we used the same vehicles same as our coming journey.\nBut I spent the night at the rest house on top of the mountain for my second trip. Morning on top of Keokradong is amazing.\n   Morning view from Keokradong\nSo, Thats it\u0026hellip;. Stay tuned for more travel blogs ;).\n","description":"Travel blog of my visit to Bandarban, Where I climbed the third highest peak in Bangladesh."},{"date_published":"2018-04-25T18:20:01Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 25, 2018","id":"https://ruddra.com/journey-to-bhutan/","url":"https://ruddra.com/journey-to-bhutan/","title":"[Travel] Journey to the Land of Thunder Dragon","image":"https://ruddra.com/content/images/2018/04/road_trip_2-1.jpg","tags":["Travelling","Bhutan"],"content_html":"\u003cp\u003eI went to Bhutan on September, 2015. It was my best trip ever, really ever. From Dhaka, we went there by DRUK AIR. We(me and two of my friends) landed in \u003ca href=\"https://en.wikipedia.org/wiki/Paro,_Bhutan\"\u003eParo\u003c/a\u003e Airport. It was really wonderful airport, it was small but clean and organised. After getting out of the plan, a chilling air struck us, and instantly we knew, we gonna like this country.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#journey-starts\"\u003eJourney starts\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#at-thimpu\"\u003eAt Thimpu\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#towards-punakha\"\u003eTowards Punakha\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#phobjika-valley\"\u003ePhobjika valley\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#at-bumtang\"\u003eAt Bumtang\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#chelala-pass\"\u003eChelala Pass\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#again-at-thimpu-and-then-to-phuntsholing\"\u003eAgain at Thimpu and then to Phuntsholing\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#back-again-at-thimpu-and-then-to-paro\"\u003eBack again at Thimpu and then to Paro\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#itinerary\"\u003eItinerary\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#tips\"\u003eTips\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#food\"\u003eFood\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#people\"\u003ePeople\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/from_air_hu4e0ba86e78fa34728e984226f3643723_225309_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/from_air_hu4e0ba86e78fa34728e984226f3643723_225309_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/from_air_hu4e0ba86e78fa34728e984226f3643723_225309_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/from_air_hu4e0ba86e78fa34728e984226f3643723_225309_720x0_resize_q75_lanczos.jpg 720w'\n        alt='from air' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/from_air.jpg\" width=\"2048\" height=\"1152\" alt='from air'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"journey-starts\"\u003eJourney starts\u003c/h2\u003e\n\u003cp\u003eAfter completing immigration, we went out and bought sim cards. Before coming to Bhutan, we contacted a Taxi driver named Mr. Darji. He picked us up from outside of airport and escorted to his car. From there, we went to Thimpu. On the way, we really enjoyed the surroundings. It was fantastic.\u003c/p\u003e\n\u003ch2 id=\"at-thimpu\"\u003eAt Thimpu\u003c/h2\u003e\n\u003cp\u003eAfter arriving \u003ca href=\"https://en.wikipedia.org/wiki/Thimphu\"\u003eThimpu\u003c/a\u003e, we went to Police Station to pick up permission for rest of the journey. It took us about 2-3 hours to get the permission. To me, Thimpu is the cleanest and most beautiful city in South Asia.\u003c/p\u003e\n\u003cp\u003eWe were backpackers and wanted a long road journey, so we decided to go to \u003cstrong\u003eBumthang\u003c/strong\u003e by road. That is why we did not stay Thimpu for long that day.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/dochula_hu9214a2b3678a4d39ba1326384196ba53_222121_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/dochula_hu9214a2b3678a4d39ba1326384196ba53_222121_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/dochula_hu9214a2b3678a4d39ba1326384196ba53_222121_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/dochula_hu9214a2b3678a4d39ba1326384196ba53_222121_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Dochula Pass' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/dochula.jpg\" width=\"2048\" height=\"1152\" alt='Dochula Pass'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"towards-punakha\"\u003eTowards Punakha\u003c/h2\u003e\n\u003cp\u003eFrom there we went to \u003ca href=\"https://en.wikipedia.org/wiki/Punakha\"\u003ePunakha\u003c/a\u003e at the evening. On the way, we stopped briefly at \u003ca href=\"https://en.wikipedia.org/wiki/Dochula_Pass\"\u003eDochula pass\u003c/a\u003e. At night, we stayed at Punakha.\u003c/p\u003e\n\u003cp\u003eNext morning, we went to \u003ca href=\"https://en.wikipedia.org/wiki/Punakha_Dzong\"\u003ePunakha Dzong\u003c/a\u003e. It was a majestic place, really enjoyed looking around. But it would be better if you get a guided tour.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1066\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1066'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/punakha-dzong_hu62de7a924a0515dc8b353649f5a1bd67_270278_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/punakha-dzong_hu62de7a924a0515dc8b353649f5a1bd67_270278_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/punakha-dzong_hu62de7a924a0515dc8b353649f5a1bd67_270278_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/punakha-dzong_hu62de7a924a0515dc8b353649f5a1bd67_270278_720x0_resize_q75_lanczos.jpg 720w'\n        alt='from air' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/punakha-dzong.jpg\" width=\"2048\" height=\"1066\" alt='from air'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"phobjika-valley\"\u003ePhobjika valley\u003c/h2\u003e\n\u003cp\u003eFrom there, we went to \u003ca href=\"https://en.wikipedia.org/wiki/Phobjikha_Valley\"\u003ePhobjikha Valley\u003c/a\u003e, there we went to see \u003cstrong\u003eGangteng Monastery\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1151\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1151'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/road_trip1_hufaba0974e115d74d8ae6ff716642ab8b_170442_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/road_trip1_hufaba0974e115d74d8ae6ff716642ab8b_170442_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/road_trip1_hufaba0974e115d74d8ae6ff716642ab8b_170442_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/road_trip1_hufaba0974e115d74d8ae6ff716642ab8b_170442_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Road One' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/road_trip1.jpg\" width=\"2048\" height=\"1151\" alt='Road One'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eWe took a pit stop at Trongsa. Had lunch, then began our journey again. At night we arrived at \u003ca href=\"https://en.wikipedia.org/wiki/Bumthang_District\"\u003eBumthang\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"at-bumtang\"\u003eAt Bumtang\u003c/h2\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/bumtang_hub3bff8df79c3242674b86952b3923f96_399576_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/bumtang_hub3bff8df79c3242674b86952b3923f96_399576_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/bumtang_hub3bff8df79c3242674b86952b3923f96_399576_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/bumtang_hub3bff8df79c3242674b86952b3923f96_399576_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Bumthang' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/bumtang.jpg\" width=\"2048\" height=\"1152\" alt='Bumthang'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIn the morning, we went sight seeing around in the town and outside, visited some Dzong. At late morning, we started our return journey\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/road_trip_2-1_hufbbc7d256ff4aabd4402be3990a39eab_343724_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/road_trip_2-1_hufbbc7d256ff4aabd4402be3990a39eab_343724_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/road_trip_2-1_hufbbc7d256ff4aabd4402be3990a39eab_343724_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/road_trip_2-1_hufbbc7d256ff4aabd4402be3990a39eab_343724_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Road Two' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/road_trip_2-1.jpg\" width=\"2048\" height=\"1152\" alt='Road Two'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/road_trip_3_hu2086e9a62b762907d769eff31bb5efe6_437806_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/road_trip_3_hu2086e9a62b762907d769eff31bb5efe6_437806_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/road_trip_3_hu2086e9a62b762907d769eff31bb5efe6_437806_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/road_trip_3_hu2086e9a62b762907d769eff31bb5efe6_437806_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Road Three' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/road_trip_3.jpg\" width=\"2048\" height=\"1152\" alt='Road Three'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"chelala-pass\"\u003eChelala Pass\u003c/h2\u003e\n\u003cp\u003eWe also saw \u003ca href=\"https://en.wikipedia.org/wiki/Ha_Chhu\"\u003eChelala pass\u003c/a\u003e on the way.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/chelala_hu69ff0e642737edf9607f9dc0ee69b1c3_154056_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/chelala_hu69ff0e642737edf9607f9dc0ee69b1c3_154056_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/chelala_hu69ff0e642737edf9607f9dc0ee69b1c3_154056_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/chelala_hu69ff0e642737edf9607f9dc0ee69b1c3_154056_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Chelala Pass' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/chelala.jpg\" width=\"2048\" height=\"1152\" alt='Chelala Pass'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"again-at-thimpu-and-then-to-phuntsholing\"\u003eAgain at Thimpu and then to Phuntsholing\u003c/h2\u003e\n\u003cp\u003eAt night we arrived in Thimpu. Next day, we began our journey to \u003ca href=\"https://en.wikipedia.org/wiki/Phuntsholing\"\u003ePhuntsholing\u003c/a\u003e. Phuntsholing is the border city of Bhutan. This city is divided into two, the part in Bhutan is called Phuntsholing, in India, its called Joygaon. We arrived there at afternoon, so got into a hotel, left our bags, and started strolling around the city.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1153\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1153'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/phunsilong_hu3f70078f18f3a569aa69405c520929b7_471283_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/phunsilong_hu3f70078f18f3a569aa69405c520929b7_471283_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/phunsilong_hu3f70078f18f3a569aa69405c520929b7_471283_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/phunsilong_hu3f70078f18f3a569aa69405c520929b7_471283_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Phuntsholing' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/phunsilong.jpg\" width=\"2048\" height=\"1153\" alt='Phuntsholing'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"back-again-at-thimpu-and-then-to-paro\"\u003eBack again at Thimpu and then to Paro\u003c/h2\u003e\n\u003cp\u003eNext day, we returned to Thimpu. The day after, we went to Paro. We climbed the hill and visited the famous temple Tiger\u0026rsquo;s Nest in our last day of Bhutan.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1154\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1154'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/tiger_hu8764c63b7b3d19d1e0bbb796d130534a_349340_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/tiger_hu8764c63b7b3d19d1e0bbb796d130534a_349340_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/tiger_hu8764c63b7b3d19d1e0bbb796d130534a_349340_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/tiger_hu8764c63b7b3d19d1e0bbb796d130534a_349340_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Tigers Nest' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/tiger.jpg\" width=\"2048\" height=\"1154\" alt='Tigers Nest'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\nIn afternoon, we strolled around the city with bicycle with our Bhutanese friend Ugen. We met ugen at bikeshop. He is a cool person, and we had a lot in common. We had a lot of fun that day. And next day, we went back to Bangladesh from Paro via Druk Air.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2048\" height=\"1152\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2048 1152'%3E%3C/svg%3E\"\n        data-src=\"/content/images/2018/04/paro_river_hu67da24a40d7f36474bfea3fb2b197494_209604_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/images/2018/04/paro_river_hu67da24a40d7f36474bfea3fb2b197494_209604_500x0_resize_q75_lanczos.jpg 500w,/content/images/2018/04/paro_river_hu67da24a40d7f36474bfea3fb2b197494_209604_600x0_resize_q75_lanczos.jpg 600w,/content/images/2018/04/paro_river_hu67da24a40d7f36474bfea3fb2b197494_209604_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Paro River' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/images/2018/04/paro_river.jpg\" width=\"2048\" height=\"1152\" alt='Paro River'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"itinerary\"\u003eItinerary\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eParo -\u0026gt; Thimpu\u003c/li\u003e\n\u003cli\u003eThimpu -\u0026gt; Punakha\u003c/li\u003e\n\u003cli\u003ePunakha -\u0026gt; Bumthang\u003c/li\u003e\n\u003cli\u003eBhumthang -\u0026gt; Thimpu\u003c/li\u003e\n\u003cli\u003eThimpu -\u0026gt; Phuntsholing -\u0026gt; Thimpu\u003c/li\u003e\n\u003cli\u003eThimpu -\u0026gt; Paro\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"tips\"\u003eTips\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eTaxi can be costly in Bhutan. Try to ride via bus.\u003c/li\u003e\n\u003cli\u003eDon\u0026rsquo;t miss Momo(dumplings).\u003c/li\u003e\n\u003cli\u003eMasala Tea is fantastic in Bhutan.\u003c/li\u003e\n\u003cli\u003eChilly is not that hot. Food is fantastic\u003c/li\u003e\n\u003cli\u003eIts really safe.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDon\u0026rsquo;t miss Bumthang\u003c/strong\u003e. You can go there by Air if you want.\u003c/li\u003e\n\u003cli\u003eBest time to go: April, September, October. But Bhutan is enjoyable all around the year.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI know that, we rushed a lot, missed a lot of good spots, maybe spend some more time in places like Punakha, Bumthang, Thimpu etc.\u003c/p\u003e\n\u003ch2 id=\"food\"\u003eFood\u003c/h2\u003e\n\u003cp\u003eWe ate a lot of Kawa datshi, Ema datshi, Chilly rice, noodles, Momo, Masala Tea, Masala Omlet etc.\u003c/p\u003e\n\u003ch2 id=\"people\"\u003ePeople\u003c/h2\u003e\n\u003cp\u003ePeople in Bhutan are really friendly. We found help from random strangers everywhere. We even made friends with them.\u003c/p\u003e\n\u003cp\u003eAn example of their helpfulness: On our last day, we had trouble arranging Taxi, as our flight was in early morning. So, at 5am, we went out, there was no taxi in the road. We tried to hitch-hike to airport, but no car was stopping for us. All of a sudden, a car stopped, the door opened, the guy behind the wheel asked if we are going to airport. We said yes. He told us to hop in, and we did(in fear, we are not used to hitch-hike). On the way, he said nothing much. When we arrived at airport, he dropped us. He did not ask for anything, and we were really grateful.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eBhutan trip was fantastic, we covered 600KM in 3 days ;). Made friends with local people, was amazed by their friendly and helpful behaviour. Majmorized by the natural beauty. Hoping to visit Bhutan again really soon.\u003c/p\u003e\n","content":"I went to Bhutan on September, 2015. It was my best trip ever, really ever. From Dhaka, we went there by DRUK AIR. We(me and two of my friends) landed in Paro Airport. It was really wonderful airport, it was small but clean and organised. After getting out of the plan, a chilling air struck us, and instantly we knew, we gonna like this country.Table of contents\u0026nbsp;  Journey starts At Thimpu Towards Punakha Phobjika valley At Bumtang Chelala Pass Again at Thimpu and then to Phuntsholing Back again at Thimpu and then to Paro Itinerary Tips Food People In conclusion   \n   Journey starts After completing immigration, we went out and bought sim cards. Before coming to Bhutan, we contacted a Taxi driver named Mr. Darji. He picked us up from outside of airport and escorted to his car. From there, we went to Thimpu. On the way, we really enjoyed the surroundings. It was fantastic.\nAt Thimpu After arriving Thimpu, we went to Police Station to pick up permission for rest of the journey. It took us about 2-3 hours to get the permission. To me, Thimpu is the cleanest and most beautiful city in South Asia.\nWe were backpackers and wanted a long road journey, so we decided to go to Bumthang by road. That is why we did not stay Thimpu for long that day.\n   Towards Punakha From there we went to Punakha at the evening. On the way, we stopped briefly at Dochula pass. At night, we stayed at Punakha.\nNext morning, we went to Punakha Dzong. It was a majestic place, really enjoyed looking around. But it would be better if you get a guided tour.\n   Phobjika valley From there, we went to Phobjikha Valley, there we went to see Gangteng Monastery.\n   We took a pit stop at Trongsa. Had lunch, then began our journey again. At night we arrived at Bumthang.\nAt Bumtang    In the morning, we went sight seeing around in the town and outside, visited some Dzong. At late morning, we started our return journey\u0026hellip;\n      Chelala Pass We also saw Chelala pass on the way.\n   Again at Thimpu and then to Phuntsholing At night we arrived in Thimpu. Next day, we began our journey to Phuntsholing. Phuntsholing is the border city of Bhutan. This city is divided into two, the part in Bhutan is called Phuntsholing, in India, its called Joygaon. We arrived there at afternoon, so got into a hotel, left our bags, and started strolling around the city.\n   Back again at Thimpu and then to Paro Next day, we returned to Thimpu. The day after, we went to Paro. We climbed the hill and visited the famous temple Tiger\u0026rsquo;s Nest in our last day of Bhutan.    In afternoon, we strolled around the city with bicycle with our Bhutanese friend Ugen. We met ugen at bikeshop. He is a cool person, and we had a lot in common. We had a lot of fun that day. And next day, we went back to Bangladesh from Paro via Druk Air.\n   Itinerary  Paro -\u0026gt; Thimpu Thimpu -\u0026gt; Punakha Punakha -\u0026gt; Bumthang Bhumthang -\u0026gt; Thimpu Thimpu -\u0026gt; Phuntsholing -\u0026gt; Thimpu Thimpu -\u0026gt; Paro  Tips  Taxi can be costly in Bhutan. Try to ride via bus. Don\u0026rsquo;t miss Momo(dumplings). Masala Tea is fantastic in Bhutan. Chilly is not that hot. Food is fantastic Its really safe. Don\u0026rsquo;t miss Bumthang. You can go there by Air if you want. Best time to go: April, September, October. But Bhutan is enjoyable all around the year.  I know that, we rushed a lot, missed a lot of good spots, maybe spend some more time in places like Punakha, Bumthang, Thimpu etc.\nFood We ate a lot of Kawa datshi, Ema datshi, Chilly rice, noodles, Momo, Masala Tea, Masala Omlet etc.\nPeople People in Bhutan are really friendly. We found help from random strangers everywhere. We even made friends with them.\nAn example of their helpfulness: On our last day, we had trouble arranging Taxi, as our flight was in early morning. So, at 5am, we went out, there was no taxi in the road. We tried to hitch-hike to airport, but no car was stopping for us. All of a sudden, a car stopped, the door opened, the guy behind the wheel asked if we are going to airport. We said yes. He told us to hop in, and we did(in fear, we are not used to hitch-hike). On the way, he said nothing much. When we arrived at airport, he dropped us. He did not ask for anything, and we were really grateful.\nIn conclusion Bhutan trip was fantastic, we covered 600KM in 3 days ;). Made friends with local people, was amazed by their friendly and helpful behaviour. Majmorized by the natural beauty. Hoping to visit Bhutan again really soon.\n","description":"I went to Bhutan on September, 2015. It was my best trip ever, really ever. From Dhaka, we went there by DRUK AIR. We(me and two of my friends) landed in Paro Airport. It was really wonderful airport, it was small but clean and organised. After getting out of the plan, a chilling air struck us, and instantly we knew, we gonna like this country."},{"date_published":"2018-02-24T13:32:11Z","date_modified":"2022-07-28T22:03:00+02:00","date":"February 24, 2018","id":"https://ruddra.com/deploy-django-to-openshift-3/","url":"https://ruddra.com/deploy-django-to-openshift-3/","title":"Deploy Django to OpenShift 3 Powered by MySQL and Gunicorn","image":"https://ruddra.com/content/images/2020/03/sql.jpg","tags":["OpenShift","MySQL","CI/CD","Gunicorn","DevOps"],"content_html":"\u003cp\u003eIf you want to use OpenShift for deploying Django, you can follow this post and simply do that. You don\u0026rsquo;t need to learn Kubernetes. We will use docker file only. No other fancy stuff.\u003c/p\u003e\n\u003cp\u003eAlso, before starting, I am also hoping you are little bit familiar with \u003cstrong\u003e\u003ca href=\"https://www.openshift.com/\"\u003eOpenShift 3\u003c/a\u003e\u003c/strong\u003e and \u003ca href=\"https://docs.openshift.com/enterprise/3.0/cli_reference/get_started_cli.html\"\u003eoc tools\u003c/a\u003e. You can \u003ca href=\"https://www.openshift.org/download.html\"\u003edownload the oc client\u003c/a\u003e as well.\u003c/p\u003e\n\u003cp\u003eSo let\u0026rsquo;s get started.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#contents-of-this-post\"\u003eContents of this post\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploying-database\"\u003eDeploying database\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#making-django-project\"\u003eMaking django project\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#creating-dockerfile-for-django\"\u003eCreating \u0026lsquo;Dockerfile\u0026rsquo; for django\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#serving-static-and-media-contents\"\u003eServing static and media contents\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#deploying-django-to-openshift\"\u003eDeploying django to OpenShift\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#allowed-hosts-in-django\"\u003eAllowed hosts in django\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#uploading-images-in-persistent-volume\"\u003eUploading images in persistent volume\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"contents-of-this-post\"\u003eContents of this post\u003c/h2\u003e\n\u003cp\u003eIn the blog, we are going to discuss about how we can deploy production grade django server, using mysql as \u003cstrong\u003eDatabase\u003c/strong\u003e. We are also going to use \u003cstrong\u003eGunicorn\u003c/strong\u003e to deploy Django. We will be using \u003cstrong\u003eWhitenoise\u003c/strong\u003e to serve static files. We will use \u003cstrong\u003ePersistent Volume\u003c/strong\u003e provided by OpenShift to store media contents.\nA working example for deploying can be found here:\n\u003ca href=\"https://github.com/ruddra/openshift-django\"\u003eDeploying Django in OpenShift Github Repo\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNow let\u0026rsquo;s discuss part by part about the deployment.\u003c/p\u003e\n\u003ch2 id=\"deploying-database\"\u003eDeploying database\u003c/h2\u003e\n\u003cp\u003eFirst we need to deploy our mysql server to OpenShift. We are going to do that using this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app openshift/mysql-55-centos7\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will start building the deployment for mysql. But it will throw error as there is no \u003ccode\u003eMYSQL_USER\u003c/code\u003e, \u003ccode\u003eMYSQL_PASSWORD\u003c/code\u003e, \u003ccode\u003eMYSQL_DATABASE\u003c/code\u003e defined in environment variable. So we can update the deployment by this commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt; oc env dc/mysql-55-centos7 \u003cspan class=\"nv\"\u003eMYSQL_USER\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emyroot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt; oc env dc/mysql-55-centos7 \u003cspan class=\"nv\"\u003eMYSQL_PASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emyroot123\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt; oc env dc/mysql-55-centos7 \u003cspan class=\"nv\"\u003eMYSQL_DATABASE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emydjango\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can check the deployment name using the command \u003ccode\u003eoc status\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eNow our MySQL server is ready inside OpenShift and it should look like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2038\" height=\"718\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2038 718'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/mysql-deployment_hu63a9335ce762f3b14899154bcce1ee61_71530_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/mysql-deployment_hu63a9335ce762f3b14899154bcce1ee61_71530_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/mysql-deployment_hu63a9335ce762f3b14899154bcce1ee61_71530_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/mysql-deployment_hu63a9335ce762f3b14899154bcce1ee61_71530_720x0_resize_q75_lanczos.jpg 720w'\n        alt='OpenShift Image' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/mysql-deployment.jpg\" width=\"2038\" height=\"718\" alt='OpenShift Image'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIn our django application, we can use internal service name(FYI:It did not work for my local machine) \u003ccode\u003emysql-55-centos7\u003c/code\u003e in \u003cstrong\u003eDATABASE_SETTINGS\u003c/strong\u003e or we can use internal IP which we can find in \u003ccode\u003eapplication\u0026gt;pods\u003c/code\u003e. Checkout the list of pods:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2524\" height=\"1132\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2524 1132'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/pods_hu5c904a184c7ac0072c0ecb40c0156861_186364_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/pods_hu5c904a184c7ac0072c0ecb40c0156861_186364_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/pods_hu5c904a184c7ac0072c0ecb40c0156861_186364_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/pods_hu5c904a184c7ac0072c0ecb40c0156861_186364_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Pods' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/pods.jpg\" width=\"2524\" height=\"1132\" alt='Pods'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eFind out the \u003cstrong\u003erunning Pod\u003c/strong\u003e of Mysql and when you click on the name, you will go the details page. There you can find the IP like given image given below:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1864\" height=\"960\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1864 960'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/mysql-pod_hud459706cfd54927e7d3446917a17e84c_134924_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/mysql-pod_hud459706cfd54927e7d3446917a17e84c_134924_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/mysql-pod_hud459706cfd54927e7d3446917a17e84c_134924_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/mysql-pod_hud459706cfd54927e7d3446917a17e84c_134924_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Mysql Pod' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/mysql-pod.jpg\" width=\"1864\" height=\"960\" alt='Mysql Pod'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eYou can update the settings of the Django application like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDATABASES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;ENGINE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;django.db.backends.mysql\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;mydjango\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;USER\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;rootadmin\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;PASSWORD\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;rootadmin123\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;HOST\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;172.17.0.4\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# The IP we get from Pods\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;PORT\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;3306\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat\u0026rsquo;s it, our mysql configuration is done.\u003c/p\u003e\n\u003ch2 id=\"making-django-project\"\u003eMaking django project\u003c/h2\u003e\n\u003cp\u003eWe need a django application for this deployment right!! So let\u0026rsquo;s create one or if you have one, you can use it(lets hope its not too much complicated). If you have one, then please skip to next section.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003edjango-admin.py startproject django-openshift\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow inside the project, lets create an app:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edjango\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epy\u003c/span\u003e \u003cspan class=\"n\"\u003estartapp\u003c/span\u003e \u003cspan class=\"n\"\u003epictures\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand add this app to django project:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#inside django settings(django-openshift/django-openshift/settings.py)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;pictures\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLets update the \u003cstrong\u003emodels.py\u003c/strong\u003e of pictures:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePictures\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eimage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eImageField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand update the \u003cstrong\u003eadmin.py\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ePicture\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePicture\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand add a requirements.pip file in the root directory with the given entries:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edjango\u0026gt;=2.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emysqlclient==1.3.12\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epillow==5.0.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egunicorn==19.7.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewhitenoise==3.3.1\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe have created a really simple django application where we can upload photos.\u003c/p\u003e\n\u003ch2 id=\"creating-dockerfile-for-django\"\u003eCreating \u0026lsquo;Dockerfile\u0026rsquo; for django\u003c/h2\u003e\n\u003cp\u003eNow lets create the \u003cstrong\u003eDockerfile\u003c/strong\u003e for django:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-docker\" data-lang=\"docker\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.6\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e . /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e ./manage.py migrate\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e ./manage.py collectstatic --no-input\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e gunicorn openshift_django.wsgi -b 0.0.0.0:3013\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eEXPOSE\u003c/span\u003e\u003cspan class=\"s\"\u003e 3013\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn this dockerfile, we are going to do the following stuffs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eWe will be using \u003ccode\u003epython:3.6\u003c/code\u003e official image.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe are going to install dependencies from \u003cstrong\u003erequirements.pip\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe are going to run database migrations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe are going to put \u003cstrong\u003egunicorn\u003c/strong\u003e command which will make the application running in \u003cstrong\u003eCMD\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe are going to expose 3013 port.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe are going to expose 3013 because it\u0026rsquo;s one of the default port for openshift, we can also use 8080 as well.\u003c/p\u003e\n\u003ch2 id=\"serving-static-and-media-contents\"\u003eServing static and media contents\u003c/h2\u003e\n\u003cp\u003eFor serving static files, we are going to use \u003ca href=\"http://whitenoise.evans.io/en/stable/\"\u003ewhitenoise\u003c/a\u003e. Its pretty simple, please go their documentation and check how they configure it in Django.\u003c/p\u003e\n\u003cp\u003eFor Media content, we are using django\u0026rsquo;s own media serving mechanism. You can update the \u003cstrong\u003eurls.py\u003c/strong\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf.urls\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ere_path\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views.static\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eserve\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ere_path\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^media/(?P\u0026lt;path\u0026gt;.*)$\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eserve\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s1\"\u003e\u0026#39;document_root\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMEDIA_ROOT\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo media will be served from url path \u003ccode\u003e/media/*\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eNow we need to configure media settings in \u003cstrong\u003esettings.py\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMEDIA_ROOT\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/data/\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Why data? explained in below\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMEDIA_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/media/\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo, it will store media contents in \u003ccode\u003e/data\u003c/code\u003e directory whenever its uploaded through django.\u003c/p\u003e\n\u003ch2 id=\"deploying-django-to-openshift\"\u003eDeploying django to OpenShift\u003c/h2\u003e\n\u003cp\u003eThere are many ways to deploy to openshift. You can check \u003ca href=\"https://docs.openshift.com/enterprise/3.0/dev_guide/deployments.html\"\u003ethe documentation of deployment\u003c/a\u003e for more details. But I can share my ways.\u003c/p\u003e\n\u003cp\u003eLets say, you have your application in git. So you can deploy it using\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-app /path/to/src\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen it will push the git configurations to openshift. Then openshift will pull code from git, build the image and start deploying it.\u003c/p\u003e\n\u003cp\u003eOr you can use\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc new-build /path/to/src\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will push binary to openshift, and openshift will build image from that and start deployment.\u003c/p\u003e\n\u003cp\u003eIf you want to rebuild the app, you can use\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc start-build ./path/to/src\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will start new build.\u003c/p\u003e\n\u003cp\u003eNow, if you want to see status of your deployment from console, you can use \u003ccode\u003eoc status\u003c/code\u003e command. If you want to expose your app(it will create url and you can access it through that url), then use this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc expose svc/\u0026lt;your-service-name\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"allowed-hosts-in-django\"\u003eAllowed hosts in django\u003c/h2\u003e\n\u003cp\u003eOnce deployed, if you try to access the application, you might face errors. And one of the most common error is related \u003ccode\u003eALLOWED_HOSTS\u003c/code\u003e. There is several ways to avoid this, like you can put\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eALLOWED_HOSTS\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;*\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will allow all hosts. Or\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eALLOWED_HOSTS\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;OPENSHIFT_DNS\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;*\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd you can configure the deployment by adding environment variable like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eoc env svc/\u0026lt;your-service\u0026gt; \u003cspan class=\"nv\"\u003eOPENSHIFT_DNS\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;YOUR OPENSHIFT DNS\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"uploading-images-in-persistent-volume\"\u003eUploading images in persistent volume\u003c/h2\u003e\n\u003cp\u003eWhen you try to upload images, You will face permission errors from Django. To avoid that, you can attach storage(Persistent Volume) to your deployment. To do that, create a storage from console like this given image:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2438\" height=\"1054\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2438 1054'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/create-storage_hu83a4ee7f34b49c487417b223a3123fe3_132351_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/create-storage_hu83a4ee7f34b49c487417b223a3123fe3_132351_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/create-storage_hu83a4ee7f34b49c487417b223a3123fe3_132351_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/create-storage_hu83a4ee7f34b49c487417b223a3123fe3_132351_720x0_resize_q75_lanczos.jpg 720w'\n        alt='image' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/create-storage.jpg\" width=\"2438\" height=\"1054\" alt='image'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003ePut any name you want, access mode can \u003cstrong\u003eRWO\u003c/strong\u003e, size 1 GB or anything you wish.\u003c/p\u003e\n\u003cp\u003eAfter creating the storage, go to deployment configuration:\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2556\" height=\"876\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2556 876'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/go-to-deployment-config_hu1bd8f880e9c8594be7052d4d7d7123b4_119488_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/go-to-deployment-config_hu1bd8f880e9c8594be7052d4d7d7123b4_119488_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/go-to-deployment-config_hu1bd8f880e9c8594be7052d4d7d7123b4_119488_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/go-to-deployment-config_hu1bd8f880e9c8594be7052d4d7d7123b4_119488_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Image' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/go-to-deployment-config.jpg\" width=\"2556\" height=\"876\" alt='Image'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\nIn the bottom of the page, there is a button called \u003cstrong\u003eadd storage\u003c/strong\u003e, click on that.\nWhile adding the storage, mount path should be the path where you want to access your media files from in file storage. In our application, its \u003ccode\u003e/data\u003c/code\u003e like image below:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"2498\" height=\"1136\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 2498 1136'%3E%3C/svg%3E\"\n        data-src=\"/content/git/openshift-django/oc-add-storage_huf5ccabbe9481f4bc19387c1bdf211d3e_155464_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/openshift-django/oc-add-storage_huf5ccabbe9481f4bc19387c1bdf211d3e_155464_500x0_resize_q75_lanczos.jpg 500w,/content/git/openshift-django/oc-add-storage_huf5ccabbe9481f4bc19387c1bdf211d3e_155464_600x0_resize_q75_lanczos.jpg 600w,/content/git/openshift-django/oc-add-storage_huf5ccabbe9481f4bc19387c1bdf211d3e_155464_720x0_resize_q75_lanczos.jpg 720w'\n        alt='Image' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/openshift-django/oc-add-storage.jpg\" width=\"2498\" height=\"1136\" alt='Image'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThat\u0026rsquo;s about it, you should be able to access your application in exposed url.\u003c/p\u003e\n\u003cp\u003eFor more advanced stuff, please checkout \u003ca href=\"https://blog.openshift.com/migrating-django-applications-openshift-3/\"\u003eOpenShift\u0026rsquo;s Blog about how they deploy Django\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThanks for reading. Cheers!!\u003c/p\u003e\n","content":"If you want to use OpenShift for deploying Django, you can follow this post and simply do that. You don\u0026rsquo;t need to learn Kubernetes. We will use docker file only. No other fancy stuff.\nAlso, before starting, I am also hoping you are little bit familiar with OpenShift 3 and oc tools. You can download the oc client as well.\nSo let\u0026rsquo;s get started.Table of contents\u0026nbsp;  Contents of this post Deploying database Making django project Creating \u0026lsquo;Dockerfile\u0026rsquo; for django Serving static and media contents Deploying django to OpenShift Allowed hosts in django Uploading images in persistent volume   \nContents of this post In the blog, we are going to discuss about how we can deploy production grade django server, using mysql as Database. We are also going to use Gunicorn to deploy Django. We will be using Whitenoise to serve static files. We will use Persistent Volume provided by OpenShift to store media contents. A working example for deploying can be found here: Deploying Django in OpenShift Github Repo\nNow let\u0026rsquo;s discuss part by part about the deployment.\nDeploying database First we need to deploy our mysql server to OpenShift. We are going to do that using this command:\noc new-app openshift/mysql-55-centos7 It will start building the deployment for mysql. But it will throw error as there is no MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE defined in environment variable. So we can update the deployment by this commands:\n\u0026gt; oc env dc/mysql-55-centos7 MYSQL_USER=myroot \u0026gt; oc env dc/mysql-55-centos7 MYSQL_PASSWORD=myroot123 \u0026gt; oc env dc/mysql-55-centos7 MYSQL_DATABASE=mydjango You can check the deployment name using the command oc status.\nNow our MySQL server is ready inside OpenShift and it should look like this:\n   In our django application, we can use internal service name(FYI:It did not work for my local machine) mysql-55-centos7 in DATABASE_SETTINGS or we can use internal IP which we can find in application\u0026gt;pods. Checkout the list of pods:\n   Find out the running Pod of Mysql and when you click on the name, you will go the details page. There you can find the IP like given image given below:   \nYou can update the settings of the Django application like this:\nDATABASES = { \u0026#39;default\u0026#39;: { \u0026#39;ENGINE\u0026#39;: \u0026#39;django.db.backends.mysql\u0026#39;, \u0026#39;NAME\u0026#39;: \u0026#39;mydjango\u0026#39;, \u0026#39;USER\u0026#39;: \u0026#39;rootadmin\u0026#39;, \u0026#39;PASSWORD\u0026#39;: \u0026#39;rootadmin123\u0026#39;, \u0026#39;HOST\u0026#39;: \u0026#39;172.17.0.4\u0026#39;, # The IP we get from Pods \u0026#39;PORT\u0026#39;: \u0026#39;3306\u0026#39;, } } That\u0026rsquo;s it, our mysql configuration is done.\nMaking django project We need a django application for this deployment right!! So let\u0026rsquo;s create one or if you have one, you can use it(lets hope its not too much complicated). If you have one, then please skip to next section.\ndjango-admin.py startproject django-openshift Now inside the project, lets create an app:\ndjango-admin.py startapp pictures and add this app to django project:\n#inside django settings(django-openshift/django-openshift/settings.py) INSTALLED_APPS += [ \u0026#39;pictures\u0026#39; ] Lets update the models.py of pictures:\nfrom django.db import models class Pictures(models.Model): image = models.ImageField() and update the admin.py\nfrom django.contrib import admin from .models import Picture admin.site.register(Picture) and add a requirements.pip file in the root directory with the given entries:\ndjango\u0026gt;=2.0 mysqlclient==1.3.12 pillow==5.0.0 gunicorn==19.7.1 whitenoise==3.3.1 We have created a really simple django application where we can upload photos.\nCreating \u0026lsquo;Dockerfile\u0026rsquo; for django Now lets create the Dockerfile for django:\nFROMpython:3.6ENV PYTHONUNBUFFERED 1RUN mkdir /srcWORKDIR/srcADD . /srcRUN pip install -r requirements.pipRUN ./manage.py migrateRUN ./manage.py collectstatic --no-inputCMD gunicorn openshift_django.wsgi -b 0.0.0.0:3013EXPOSE3013In this dockerfile, we are going to do the following stuffs:\n  We will be using python:3.6 official image.\n  We are going to install dependencies from requirements.pip.\n  We are going to run database migrations.\n  We are going to put gunicorn command which will make the application running in CMD.\n  We are going to expose 3013 port.\n  We are going to expose 3013 because it\u0026rsquo;s one of the default port for openshift, we can also use 8080 as well.\nServing static and media contents For serving static files, we are going to use whitenoise. Its pretty simple, please go their documentation and check how they configure it in Django.\nFor Media content, we are using django\u0026rsquo;s own media serving mechanism. You can update the urls.py like this:\nfrom django.conf.urls import url, re_path from django.views.static import serve from django.conf import settings urlpatterns += [ re_path(r\u0026#39;^media/(?P\u0026lt;path\u0026gt;.*)$\u0026#39;, serve, { \u0026#39;document_root\u0026#39;: settings.MEDIA_ROOT, }), ] So media will be served from url path /media/*\nNow we need to configure media settings in settings.py.\nMEDIA_ROOT = \u0026#39;/data/\u0026#39; # Why data? explained in below MEDIA_URL=\u0026#39;/media/\u0026#39; So, it will store media contents in /data directory whenever its uploaded through django.\nDeploying django to OpenShift There are many ways to deploy to openshift. You can check the documentation of deployment for more details. But I can share my ways.\nLets say, you have your application in git. So you can deploy it using\noc new-app /path/to/src Then it will push the git configurations to openshift. Then openshift will pull code from git, build the image and start deploying it.\nOr you can use\noc new-build /path/to/src It will push binary to openshift, and openshift will build image from that and start deployment.\nIf you want to rebuild the app, you can use\noc start-build ./path/to/src It will start new build.\nNow, if you want to see status of your deployment from console, you can use oc status command. If you want to expose your app(it will create url and you can access it through that url), then use this command:\noc expose svc/\u0026lt;your-service-name\u0026gt; Allowed hosts in django Once deployed, if you try to access the application, you might face errors. And one of the most common error is related ALLOWED_HOSTS. There is several ways to avoid this, like you can put\nALLOWED_HOSTS=[\u0026#39;*\u0026#39;] It will allow all hosts. Or\nALLOWED_HOSTS=[ os.environ.get(\u0026#39;OPENSHIFT_DNS\u0026#39;, \u0026#39;*\u0026#39;) ] And you can configure the deployment by adding environment variable like this:\noc env svc/\u0026lt;your-service\u0026gt; OPENSHIFT_DNS=\u0026#39;YOUR OPENSHIFT DNS\u0026#39; Uploading images in persistent volume When you try to upload images, You will face permission errors from Django. To avoid that, you can attach storage(Persistent Volume) to your deployment. To do that, create a storage from console like this given image:   \nPut any name you want, access mode can RWO, size 1 GB or anything you wish.\nAfter creating the storage, go to deployment configuration:    In the bottom of the page, there is a button called add storage, click on that. While adding the storage, mount path should be the path where you want to access your media files from in file storage. In our application, its /data like image below:\n   That\u0026rsquo;s about it, you should be able to access your application in exposed url.\nFor more advanced stuff, please checkout OpenShift\u0026rsquo;s Blog about how they deploy Django.\nThanks for reading. Cheers!!\n","description":"A simple deployment procedure to deploy Django in OpenShift, no fancy stuff."},{"date_published":"2017-07-26T16:13:17Z","date_modified":"2022-07-28T22:03:00+02:00","date":"July 26, 2017","id":"https://ruddra.com/vs-code-for-python-development/","url":"https://ruddra.com/vs-code-for-python-development/","title":"Use VS Code for Python and Django Development","image":"https://ruddra.com/content/images/2020/06/vscode.jpg","tags":["Visual Studio Code","Python","IDE"],"content_html":"\u003cp\u003e\u003ca href=\"https://code.visualstudio.com/\"\u003eVisual Studio Code\u003c/a\u003e is an editor developed by Microsoft. I have been using this editor for Python development for sometime now. Previously I have been using PyCharm Community Edition for development, but I had to switch to an editor which was less resource consuming than PyCharm, since I have been using VS Code.\u003c/p\u003e\n\u003cp\u003eIt was initially suggested to me by one of my colleagues. My first impression was, what is this? Is it really usable? Is it as bad as Atom?(I have a dreadful experience with Atom, although Atom is maybe as good as VS Code). But instead, I found that it is really useful, user-friendly and has lots of useful features.\u003c/p\u003e\n\u003cp\u003eLet us check out how we can use VS Code to develop Production grade Python applications.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#go-to-settings\"\u003eGo to settings\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-python\"\u003eConfiguring python\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#install-python-plugin\"\u003eInstall python plugin\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#add-virtual-environment\"\u003eAdd virtual environment\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#using-pep8-and-lint\"\u003eUsing PEP8 and lint\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#generic-configurations\"\u003eGeneric configurations\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#format-on-save\"\u003eFormat on save\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#ignoring-unnecessary-files\"\u003eIgnoring unnecessary files\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#disable-preview\"\u003eDisable preview\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#ui-customization\"\u003eUI customization\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#add-ruler-in-editor\"\u003eAdd ruler in editor\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#increase-zoom-level\"\u003eIncrease zoom level\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#themes\"\u003eThemes\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#more-customization\"\u003eMore customization\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#debugging\"\u003eDebugging\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#using-pylanceoptional\"\u003eUsing Pylance(optional)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#useful-plugins\"\u003eUseful plugins\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"go-to-settings\"\u003eGo to settings\u003c/h2\u003e\n\u003cp\u003eYou can check \u003ca href=\"https://code.visualstudio.com/docs/getstarted/settings\"\u003eVS code\u0026rsquo;s documentation\u003c/a\u003e on how to go to User and Workspace Settings. I prefer to use \u003cstrong\u003eCommand Palette\u003c/strong\u003e for them.\u003c/p\u003e\n\u003cp\u003eTo go to \u003cstrong\u003eWorkspace\u003c/strong\u003e Settings, press \u003cstrong\u003eCTRL+SHIFT+P\u003c/strong\u003e(\u003cstrong\u003eCMD+SHIFT+P\u003c/strong\u003e for MacOS), it will open up \u003cstrong\u003eCommand Palette\u003c/strong\u003e, then type \u003cem\u003ePreferences: Open Workspace Settings\u003c/em\u003e. After pressing \u003cem\u003eEnter\u003c/em\u003e(or \u003cem\u003eclick\u003c/em\u003e), you will go into Workspace settings(JSON).\u003c/p\u003e\n\u003cp\u003eAnd to go to \u003cstrong\u003eUser\u003c/strong\u003e settings,press \u003cstrong\u003eCTRL+SHIFT+P\u003c/strong\u003e(\u003cstrong\u003eCMD+SHIFT+P\u003c/strong\u003e for MacOS) and type \u003cem\u003ePreferences: Open Settings(JSON)\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"configuring-python\"\u003eConfiguring python\u003c/h2\u003e\n\u003cp\u003eFor python related configurations, we are going to use \u003ca href=\"#go-to-settings\"\u003e\u003cem\u003eWorkspace Settings\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"install-python-plugin\"\u003eInstall python plugin\u003c/h3\u003e\n\u003cp\u003eFor using pythonic features, you need to install plugin \u003ca href=\"https://github.com/Microsoft/vscode-python\"\u003ePython VS Code\u003c/a\u003e\nTo do that, go to Extensions Section of VS Code(marked blue in the image given below), in search section, type python; and install the red marked package called \u003cstrong\u003ePython by Don Jayamanne(Now Maintained by Microsoft)\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"680\" height=\"140\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 680 140'%3E%3C/svg%3E\"\n        data-src=\"/content/git/vscode/1_hu7fba9da1679ce4a56c592454604cb9c1_24131_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/vscode/1_hu7fba9da1679ce4a56c592454604cb9c1_24131_500x0_resize_q75_lanczos.jpg 500w,/content/git/vscode/1_hu7fba9da1679ce4a56c592454604cb9c1_24131_600x0_resize_q75_lanczos.jpg 600w'\n        alt='Python' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/vscode/1.jpg\" width=\"680\" height=\"140\" alt='Python'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch3 id=\"add-virtual-environment\"\u003eAdd virtual environment\u003c/h3\u003e\n\u003cp\u003eHere is how to configure the \u003ca href=\"https://docs.python.org/3/tutorial/venv.html\"\u003evirtual environment\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.pythonPath\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/path/to/virtualenv/bin/python\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat should be enough to let you use the virtual environment for development. If you want to add your own modules, then add this settings:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.autoComplete.extraPaths\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;./path-to-your-code\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter that, let us add some more features which are useful to develop python codes.\u003c/p\u003e\n\u003ch3 id=\"using-pep8-and-lint\"\u003eUsing PEP8 and lint\u003c/h3\u003e\n\u003cp\u003eTo add them to vs code, add the following key values to above dictionary:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pep8Enabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pylintPath\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;/path/to/virtualenv/bin/pylint\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pylintArgs\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;--load-plugins\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;pylint_django\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;python.linting.pylintEnabled\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo use the above features, editor will prompt you to install \u003cstrong\u003epylint\u003c/strong\u003e and \u003cstrong\u003eautopep8\u003c/strong\u003e, or you can install them directly in virtual environment:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install autopep8\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install pylint\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"generic-configurations\"\u003eGeneric configurations\u003c/h2\u003e\n\u003cp\u003eFor generic related configurations, we are going to use \u003ca href=\"#go-to-settings\"\u003eUser Settings\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"format-on-save\"\u003eFormat on save\u003c/h3\u003e\n\u003cp\u003eAdd this like in dict: \u003ccode\u003e\u0026quot;editor.formatOnSave\u0026quot;: true\u003c/code\u003e\nIt will auto format code (language does not matter).\u003c/p\u003e\n\u003ch3 id=\"ignoring-unnecessary-files\"\u003eIgnoring unnecessary files\u003c/h3\u003e\n\u003cp\u003eTo ignore unnecessary files, add this following lines:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;files.exclude\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/.git\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/.svn\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/.hg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/CVS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/.DS_Store\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;.vscode\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/*.pyc\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;**/__pycache__/\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"disable-preview\"\u003eDisable preview\u003c/h3\u003e\n\u003cp\u003eWhen you open a file using an import file or try to go back to the declaration of the code, vs code intends to open it in a preview window, which sometimes is annoying when you want to do it multiple steps/times. To disable it, add this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;workbench.editor.enablePreview\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"ui-customization\"\u003eUI customization\u003c/h2\u003e\n\u003ch3 id=\"add-ruler-in-editor\"\u003eAdd ruler in editor\u003c/h3\u003e\n\u003cp\u003eAdding rulers in the editor gives you a better idea of how many words you will put on a single line, in Pep8 Standard, it\u0026rsquo;s 79. So let\u0026rsquo;s add the following key and values in the settings dictionary:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;editor.rulers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e120\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"increase-zoom-level\"\u003eIncrease zoom level\u003c/h3\u003e\n\u003cp\u003eYou can increase the zoom level of the IDE via adding the following settings:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;window.zoomLevel\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.15\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"themes\"\u003eThemes\u003c/h3\u003e\n\u003cp\u003eYou can download any theme from the \u003ca href=\"https://marketplace.visualstudio.com/search?term=theme\u0026amp;target=VSCode\u0026amp;category=All%20categories\u0026amp;sortBy=Relevance\"\u003evscode marketplace\u003c/a\u003e and install them. Currently I am using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-community-material-theme\"\u003eMaterial theme\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"more-customization\"\u003eMore customization\u003c/h3\u003e\n\u003cp\u003eIf you want to do further customizations to vscode, you can use either one of the following packages:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=be5invis.vscode-custom-css\"\u003eCustom CSS and JS Loader\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://marketplace.visualstudio.com/items?itemName=iocave.customize-ui\"\u003eCustomizeUI\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"debugging\"\u003eDebugging\u003c/h2\u003e\n\u003cp\u003eIt is really cool to have debugging feature built-in VS Code. Although as far as I tested, it works perfectly fine on Ubuntu, but not in OSX. So please check before you configure it.\u003c/p\u003e\n\u003cp\u003eAnyways, the best way to configure it for \u003cstrong\u003eDjango\u003c/strong\u003e is to add the following lines in \u003cstrong\u003elaunch.js\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;version\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;0.2.0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;configurations\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Django\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;python\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;request\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;launch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;stopOnEntry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;pythonPath\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${config:python.pythonPath}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;program\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${workspaceRoot}/manage.py\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;cwd\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${workspaceRoot}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;args\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;runserver\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--noreload\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;--nothreading\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;env\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;envFile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;${workspaceRoot}/path/to/virtualenv\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;debugOptions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;WaitOnAbnormalExit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;WaitOnNormalExit\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;RedirectOutput\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;DjangoDebugging\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr go to the \u003ccode\u003eDebug section\u003c/code\u003e(Marked green in the screenshot), click the section marked as yellow and then click add configuration.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"581\" height=\"499\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 581 499'%3E%3C/svg%3E\"\n        data-src=\"/content/git/vscode/3_hudac7d5880c91ea8293693e8130ac76fe_13705_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/vscode/3_hudac7d5880c91ea8293693e8130ac76fe_13705_500x0_resize_q75_lanczos.jpg 500w'\n        alt='3' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/vscode/3.jpg\" width=\"581\" height=\"499\" alt='3'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThen, click on Django settings to add new Django settings for debugging.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"949\" height=\"468\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 949 468'%3E%3C/svg%3E\"\n        data-src=\"/content/git/vscode/4_hu3c999118de0a6f2d9b4344ff192583b2_36102_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/vscode/4_hu3c999118de0a6f2d9b4344ff192583b2_36102_500x0_resize_q75_lanczos.jpg 500w,/content/git/vscode/4_hu3c999118de0a6f2d9b4344ff192583b2_36102_600x0_resize_q75_lanczos.jpg 600w,/content/git/vscode/4_hu3c999118de0a6f2d9b4344ff192583b2_36102_720x0_resize_q75_lanczos.jpg 720w'\n        alt='4' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/vscode/4.jpg\" width=\"949\" height=\"468\" alt='4'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"using-pylanceoptional\"\u003eUsing Pylance(optional)\u003c/h2\u003e\n\u003cp\u003eMS has also developed a tool called \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance\"\u003epylance\u003c/a\u003e which gives fast, feature-rich language support for Python. It can be an alternative to VS Code\u0026rsquo;s default language server for Python.\u003c/p\u003e\n\u003ch2 id=\"useful-plugins\"\u003eUseful plugins\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://marketplace.visualstudio.com/\"\u003eVS Code Marketplace\u003c/a\u003e is really rich with lots of themes, plugins and so on. You can download and use the following plugins from marketplace to enrich your coding experience.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUse \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync\"\u003eCode Settings Sync\u003c/a\u003e to synchronize your settings in between VS Code instances over multiple machines.\u003c/li\u003e\n\u003cli\u003eYou can use \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=waderyan.gitblame\"\u003eGit Blame\u003c/a\u003e to see Git blames.\u003c/li\u003e\n\u003cli\u003eYou can use \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\"\u003eGit LENS\u003c/a\u003e to supercharge git functionality.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/k--kato/vscode-intellij-idea-keybindings\"\u003eIntellijIdea Keybindings\u003c/a\u003e allows you to use Idea\u0026rsquo;s shortcut keys in VSCode.\u003c/li\u003e\n\u003cli\u003eUse \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=robertohuertasm.vscode-icons\"\u003eVScode Icons\u003c/a\u003e to beautify VS Code\u0026rsquo;s icons.\u003c/li\u003e\n\u003cli\u003eUse \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons\"\u003eMaterial Icons\u003c/a\u003e for using material icons on the sidebar.\u003c/li\u003e\n\u003cli\u003eUse \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker\"\u003eCode Spell Checker\u003c/a\u003e to check spells in code.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIt goes without saying that PyCharm is the best IDE for Python development. It supports refactoring, which makes life a lot easier; has advanced debugging, and its easy to configure. Still, VS code has its own charm. I prefer VS code\u0026rsquo;s UI, its configurations(which is really dynamic and lots of options) and most importantly, I can do front end development better in VS Code, as PyCharm community edition does not support JS. Also its lightweight(not resource hungry as PyCharm).\u003c/p\u003e\n\u003cp\u003eThanks for reading. Cheers!!\u003c/p\u003e\n","content":"Visual Studio Code is an editor developed by Microsoft. I have been using this editor for Python development for sometime now. Previously I have been using PyCharm Community Edition for development, but I had to switch to an editor which was less resource consuming than PyCharm, since I have been using VS Code.\nIt was initially suggested to me by one of my colleagues. My first impression was, what is this? Is it really usable? Is it as bad as Atom?(I have a dreadful experience with Atom, although Atom is maybe as good as VS Code). But instead, I found that it is really useful, user-friendly and has lots of useful features.\nLet us check out how we can use VS Code to develop Production grade Python applications.Table of contents\u0026nbsp;  Go to settings Configuring python  Install python plugin Add virtual environment Using PEP8 and lint   Generic configurations  Format on save Ignoring unnecessary files Disable preview   UI customization  Add ruler in editor Increase zoom level Themes More customization   Debugging Using Pylance(optional) Useful plugins In conclusion   \nGo to settings You can check VS code\u0026rsquo;s documentation on how to go to User and Workspace Settings. I prefer to use Command Palette for them.\nTo go to Workspace Settings, press CTRL+SHIFT+P(CMD+SHIFT+P for MacOS), it will open up Command Palette, then type Preferences: Open Workspace Settings. After pressing Enter(or click), you will go into Workspace settings(JSON).\nAnd to go to User settings,press CTRL+SHIFT+P(CMD+SHIFT+P for MacOS) and type Preferences: Open Settings(JSON).\nConfiguring python For python related configurations, we are going to use Workspace Settings.\nInstall python plugin For using pythonic features, you need to install plugin Python VS Code To do that, go to Extensions Section of VS Code(marked blue in the image given below), in search section, type python; and install the red marked package called Python by Don Jayamanne(Now Maintained by Microsoft).\n   Add virtual environment Here is how to configure the virtual environment:\n{ \u0026#34;python.pythonPath\u0026#34;: \u0026#34;/path/to/virtualenv/bin/python\u0026#34; } That should be enough to let you use the virtual environment for development. If you want to add your own modules, then add this settings:\n{ \u0026#34;python.autoComplete.extraPaths\u0026#34;: [\u0026#34;./path-to-your-code\u0026#34;] } After that, let us add some more features which are useful to develop python codes.\nUsing PEP8 and lint To add them to vs code, add the following key values to above dictionary:\n{ \u0026#34;python.linting.pep8Enabled\u0026#34;: true, \u0026#34;python.linting.pylintPath\u0026#34;: \u0026#34;/path/to/virtualenv/bin/pylint\u0026#34;, \u0026#34;python.linting.pylintArgs\u0026#34;: [\u0026#34;--load-plugins\u0026#34;, \u0026#34;pylint_django\u0026#34;], \u0026#34;python.linting.pylintEnabled\u0026#34;: true } To use the above features, editor will prompt you to install pylint and autopep8, or you can install them directly in virtual environment:\npip install autopep8 pip install pylint Generic configurations For generic related configurations, we are going to use User Settings.\nFormat on save Add this like in dict: \u0026quot;editor.formatOnSave\u0026quot;: true It will auto format code (language does not matter).\nIgnoring unnecessary files To ignore unnecessary files, add this following lines:\n{ \u0026#34;files.exclude\u0026#34;: { \u0026#34;**/.git\u0026#34;: true, \u0026#34;**/.svn\u0026#34;: true, \u0026#34;**/.hg\u0026#34;: true, \u0026#34;**/CVS\u0026#34;: true, \u0026#34;**/.DS_Store\u0026#34;: true, \u0026#34;.vscode\u0026#34;: true, \u0026#34;**/*.pyc\u0026#34;: true, \u0026#34;**/__pycache__/\u0026#34;: true } } Disable preview When you open a file using an import file or try to go back to the declaration of the code, vs code intends to open it in a preview window, which sometimes is annoying when you want to do it multiple steps/times. To disable it, add this:\n{ \u0026#34;workbench.editor.enablePreview\u0026#34;: false } UI customization Add ruler in editor Adding rulers in the editor gives you a better idea of how many words you will put on a single line, in Pep8 Standard, it\u0026rsquo;s 79. So let\u0026rsquo;s add the following key and values in the settings dictionary:\n{ \u0026#34;editor.rulers\u0026#34;: [80, 120] } Increase zoom level You can increase the zoom level of the IDE via adding the following settings:\n{ \u0026#34;window.zoomLevel\u0026#34;: 0.15 } Themes You can download any theme from the vscode marketplace and install them. Currently I am using the Material theme.\nMore customization If you want to do further customizations to vscode, you can use either one of the following packages:\n Custom CSS and JS Loader. CustomizeUI.  Debugging It is really cool to have debugging feature built-in VS Code. Although as far as I tested, it works perfectly fine on Ubuntu, but not in OSX. So please check before you configure it.\nAnyways, the best way to configure it for Django is to add the following lines in launch.js:\n{ \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;Django\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;python\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;launch\u0026#34;, \u0026#34;stopOnEntry\u0026#34;: true, \u0026#34;pythonPath\u0026#34;: \u0026#34;${config:python.pythonPath}\u0026#34;, \u0026#34;program\u0026#34;: \u0026#34;${workspaceRoot}/manage.py\u0026#34;, \u0026#34;cwd\u0026#34;: \u0026#34;${workspaceRoot}\u0026#34;, \u0026#34;args\u0026#34;: [\u0026#34;runserver\u0026#34;, \u0026#34;--noreload\u0026#34;, \u0026#34;--nothreading\u0026#34;], \u0026#34;env\u0026#34;: {}, \u0026#34;envFile\u0026#34;: \u0026#34;${workspaceRoot}/path/to/virtualenv\u0026#34;, \u0026#34;debugOptions\u0026#34;: [ \u0026#34;WaitOnAbnormalExit\u0026#34;, \u0026#34;WaitOnNormalExit\u0026#34;, \u0026#34;RedirectOutput\u0026#34;, \u0026#34;DjangoDebugging\u0026#34; ] } ] } Or go to the Debug section(Marked green in the screenshot), click the section marked as yellow and then click add configuration.\n   Then, click on Django settings to add new Django settings for debugging.\n   Using Pylance(optional) MS has also developed a tool called pylance which gives fast, feature-rich language support for Python. It can be an alternative to VS Code\u0026rsquo;s default language server for Python.\nUseful plugins VS Code Marketplace is really rich with lots of themes, plugins and so on. You can download and use the following plugins from marketplace to enrich your coding experience.\n Use Code Settings Sync to synchronize your settings in between VS Code instances over multiple machines. You can use Git Blame to see Git blames. You can use Git LENS to supercharge git functionality. IntellijIdea Keybindings allows you to use Idea\u0026rsquo;s shortcut keys in VSCode. Use VScode Icons to beautify VS Code\u0026rsquo;s icons. Use Material Icons for using material icons on the sidebar. Use Code Spell Checker to check spells in code.  In conclusion It goes without saying that PyCharm is the best IDE for Python development. It supports refactoring, which makes life a lot easier; has advanced debugging, and its easy to configure. Still, VS code has its own charm. I prefer VS code\u0026rsquo;s UI, its configurations(which is really dynamic and lots of options) and most importantly, I can do front end development better in VS Code, as PyCharm community edition does not support JS. Also its lightweight(not resource hungry as PyCharm).\nThanks for reading. Cheers!!\n","description":"A guide for configuring VS Code to develop applications with Python and Django."},{"date_published":"2017-07-19T16:12:47Z","date_modified":"2022-07-28T22:03:00+02:00","date":"July 19, 2017","id":"https://ruddra.com/ubuntu-protip-launching-chrome-apps-at-startup/","url":"https://ruddra.com/ubuntu-protip-launching-chrome-apps-at-startup/","title":"Ubuntu Hacks: Launching Chrome Apps at Startup","image":"https://ruddra.com/content/images/2020/03/ball.jpg","tags":["Ubuntu","Chrome App","Linux"],"content_html":"\u003cp\u003eChrome apps are really handy when you don\u0026rsquo;t want to overhaul your system with apps for every little purpose. Starting those apps at startup can be used instead of manually starting them every time you want to use them. Like starting the messenger at startup of the system. To do that.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#steps\"\u003eSteps\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eFirst, go to Ubuntu\u0026rsquo;s search menu and search for \u003ccode\u003estartup applications\u003c/code\u003e.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1010\" height=\"293\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1010 293'%3E%3C/svg%3E\"\n        data-src=\"/content/git/ubuntu_chrome_app/1_hud73de6e57d31ad76726b8317fc380172_29611_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/ubuntu_chrome_app/1_hud73de6e57d31ad76726b8317fc380172_29611_500x0_resize_q75_lanczos.jpg 500w,/content/git/ubuntu_chrome_app/1_hud73de6e57d31ad76726b8317fc380172_29611_600x0_resize_q75_lanczos.jpg 600w,/content/git/ubuntu_chrome_app/1_hud73de6e57d31ad76726b8317fc380172_29611_720x0_resize_q75_lanczos.jpg 720w'\n        alt='1' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/ubuntu_chrome_app/1.jpg\" width=\"1010\" height=\"293\" alt='1'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003eThen open that application preference and add new startup application.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"604\" height=\"234\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 604 234'%3E%3C/svg%3E\"\n        data-src=\"/content/git/ubuntu_chrome_app/3_hucc180330d14e40476955ac9da108817f_21201_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/ubuntu_chrome_app/3_hucc180330d14e40476955ac9da108817f_21201_500x0_resize_q75_lanczos.jpg 500w,/content/git/ubuntu_chrome_app/3_hucc180330d14e40476955ac9da108817f_21201_600x0_resize_q75_lanczos.jpg 600w'\n        alt='2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/ubuntu_chrome_app/3.jpg\" width=\"604\" height=\"234\" alt='2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"264\" height=\"165\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 264 165'%3E%3C/svg%3E\"\n        data-src=\"/content/git/ubuntu_chrome_app/4_hu6458e1395bb37c88d9eef50200ad0e78_6167_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/ubuntu_chrome_app/4_hu6458e1395bb37c88d9eef50200ad0e78_6167_500x0_resize_q75_lanczos.jpg 500w'\n        alt='3' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/ubuntu_chrome_app/4.jpg\" width=\"264\" height=\"165\" alt='3'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003ePut any name you want in there. Also, in command section, write:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egoogle-chrome --app-id\u003cspan class=\"o\"\u003e=[\u003c/span\u003eapp_id\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow you need to have \u003cstrong\u003eapp_id\u003c/strong\u003e which you can easily find like this:\u003c/p\u003e\n\u003cp\u003eFor example, we want to add All in One Messenger, and when you look for it in chrome store, the URL will appear like this: \u003ca href=\"https://chrome.google.com/webstore/detail/all-in-one-messenger/lainlkmlgipednloilifbppmhdocjbda?hl=en\"\u003ehttps://chrome.google.com/webstore/detail/all-in-one-messenger/lainlkmlgipednloilifbppmhdocjbda?hl=en\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"920\" height=\"252\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 920 252'%3E%3C/svg%3E\"\n        data-src=\"/content/git/ubuntu_chrome_app/2_huc223d0840793c8537d6fc0f18b451bd4_29202_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/ubuntu_chrome_app/2_huc223d0840793c8537d6fc0f18b451bd4_29202_500x0_resize_q75_lanczos.jpg 500w,/content/git/ubuntu_chrome_app/2_huc223d0840793c8537d6fc0f18b451bd4_29202_600x0_resize_q75_lanczos.jpg 600w,/content/git/ubuntu_chrome_app/2_huc223d0840793c8537d6fc0f18b451bd4_29202_720x0_resize_q75_lanczos.jpg 720w'\n        alt='2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/ubuntu_chrome_app/2.jpg\" width=\"920\" height=\"252\" alt='2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eSo the \u003ccode\u003elainlkmlgipednloilifbppmhdocjbda\u003c/code\u003e is the \u003cstrong\u003eapp_id\u003c/strong\u003e here.\u003c/p\u003e\n\u003cp\u003eFinally, if we want to add this app at startup, first we need to add it to our chrome, then like the previous steps mentioned above, add new startup application with the command: \u003ccode\u003egoogle-chrome --app-id=lainlkmlgipednloilifbppmhdocjbda\u003c/code\u003e. That should do the trick and you will see all in one messenger starting up whenever you initially login into the system.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eIts pretty simple and straight forward proccess, and very useful when you have bunch of chrome apps.\u003c/p\u003e\n","content":"Chrome apps are really handy when you don\u0026rsquo;t want to overhaul your system with apps for every little purpose. Starting those apps at startup can be used instead of manually starting them every time you want to use them. Like starting the messenger at startup of the system. To do that.Table of contents\u0026nbsp;  Steps In conclusion   \nSteps  First, go to Ubuntu\u0026rsquo;s search menu and search for startup applications.    Then open that application preference and add new startup application.       Put any name you want in there. Also, in command section, write:  google-chrome --app-id=[app_id] Now you need to have app_id which you can easily find like this:\nFor example, we want to add All in One Messenger, and when you look for it in chrome store, the URL will appear like this: https://chrome.google.com/webstore/detail/all-in-one-messenger/lainlkmlgipednloilifbppmhdocjbda?hl=en\n   So the lainlkmlgipednloilifbppmhdocjbda is the app_id here.\nFinally, if we want to add this app at startup, first we need to add it to our chrome, then like the previous steps mentioned above, add new startup application with the command: google-chrome --app-id=lainlkmlgipednloilifbppmhdocjbda. That should do the trick and you will see all in one messenger starting up whenever you initially login into the system.\nIn conclusion Its pretty simple and straight forward proccess, and very useful when you have bunch of chrome apps.\n","description":"Chrome apps are really handy when you don\u0026rsquo;t want to overhaul your system with apps for every little purpose. Starting those apps at startup can be used instead of manually starting them every time you want to use them. Like starting the messenger at startup of the system. To do that."},{"date_published":"2017-05-28T14:35:59Z","date_modified":"2022-07-28T22:03:00+02:00","date":"May 28, 2017","id":"https://ruddra.com/play-with-pillow/","url":"https://ruddra.com/play-with-pillow/","title":"Play With Pillow","image":"https://ruddra.com/content/images/2019/08/pillow.jpg","tags":["Python","PIL"],"content_html":"\u003cp\u003eWho hasn\u0026rsquo;t heard PIL? It\u0026rsquo;s an image processing library made by python (Python Image Library). Pillow is an extension of it.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#resize-image\"\u003eResize image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#crop-image-in-box-shape\"\u003eCrop image in box shape\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#resize-image-and-crop-in-center-to-convert-it-to-a-fixed-size\"\u003eResize image and crop in center to convert it to a fixed size\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#paste-image-over-a-background-image\"\u003ePaste image over a background image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#draw-text-over-an-image\"\u003eDraw text over an image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#adjast-brightness-of-an-image\"\u003eAdjast brightness of an image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#adjast-color-of-an-image\"\u003eAdjast color of an image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#save-the-pil-image-in-django-models-or-serve-as-django-file\"\u003eSave the PIL image in django models or serve as django file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#convert-to-webp\"\u003eConvert to webp\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#convert-to-jpgjpeg\"\u003eConvert to JPG/JPEG\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#and-many-more\"\u003eAnd Many more\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eSo installing pillow is really easy:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install pillow\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we are going to do some image processing cool stuff:\u003c/p\u003e\n\u003cp\u003eFirst Load Image:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ePIL\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eImageOps\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;image.png\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"resize-image\"\u003eResize image\u003c/h2\u003e\n\u003cp\u003eSuppose We want to resize an image and maintain its aspect ratio. Here we need to get the aspect ratio after resizing. Here is a snippet for it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_resize_image_size\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebaseheight\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Get resize image size\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Getting resize image size\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ebaseheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ebaseheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ehpercent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebaseheight\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ewsize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehpercent\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ewsize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebaseheight\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eOr\u003c/strong\u003e we may want to our desired image size.\u003c/p\u003e\n\u003cp\u003eAfter we get the desired aspect ratio, now we resize it with the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eresize_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Resize Image\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    img: Image file opened by PIL\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    size: if Size not given, it will be\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    calculated\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Resizing image\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_resize_image_size\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eimg\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eresize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eANTIALIAS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eimg\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"crop-image-in-box-shape\"\u003eCrop image in box shape\u003c/h2\u003e\n\u003cp\u003eWhen we try to crop, we can either give it positions for cropping or we can calculate the points, which will be used in cropping. Suppose we have a random image, but we want to crop it in middle position and we want to crop in such way that, we will only take out 1200x1200 size out of the sample image, the following is the code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecrop_position\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Get Crop Image Positions\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Getting Crop Image Positions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enew_width\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enew_height\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1200\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eleft\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003enew_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etop\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003enew_height\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eright\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enew_width\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebottom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003enew_height\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eleft\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etop\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eright\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ebottom\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we got the position, lets do cropping:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecrop_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epositions\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e   Crop Image in Box Shape\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e   \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003epositions\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003epositions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecrop_position\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecrop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebox\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003epositions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"resize-image-and-crop-in-center-to-convert-it-to-a-fixed-size\"\u003eResize image and crop in center to convert it to a fixed size\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s take an image in size and convert it to 1200x1200 image:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003econvert_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Resize Image and Crop in Center to Convert it to a Fixed Size\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Nothing to change, returning image\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eimage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Resize to size given in settings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epil_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresize_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Cropping to adjust size given in settings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epil_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecrop_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ne\"\u003eKeyError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003eexp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexp\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eexp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"paste-image-over-a-background-image\"\u003ePaste image over a background image\u003c/h2\u003e\n\u003cp\u003eThe following code will do the trick:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd_overlay_over_background\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebackground_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoverlay_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Add overlay image over background image\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebackground_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaste\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoverlay_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoffset\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emask\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eoverlay_image\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebackground_image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"draw-text-over-an-image\"\u003eDraw text over an image\u003c/h2\u003e\n\u003cp\u003eFor that, we first we need fonts:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;path/to/font\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_font\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Get Font Object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eImageFont\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etruetype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen we need to co-ordinates where the texts will be written:\u003c/p\u003e\n\u003cp\u003eHere are two scenarios:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eYou provide the exact positions.\u003c/li\u003e\n\u003cli\u003eYou can provide the height of the text position, we will calculate where the texts will be printed in the image. Here we are assuming that texts will be aligned in middle horizontally. It will be symmetric in perspective middle vertical line.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_text_coordination\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eposition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evertical_only\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Process Co-Ordination of the position\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evertical_only\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Case Two\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esize\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetsize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Case One\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eposition\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we got everything, so let\u0026rsquo;s do writing text on image:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ewrite_text_on_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eposition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evertical_only\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Write Text over Image\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edraw\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImageDraw\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDraw\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003efont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_font\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eposition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_text_coordination\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eposition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evertical_only\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edraw\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eposition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003efont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efill\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eimage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBTW, here color can be hexa value of the color you want to use. For white, you need use: \u003ccode\u003e#fffff\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"adjast-brightness-of-an-image\"\u003eAdjast brightness of an image\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s lighten or darken image based on amount:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edarken_or_lighten_pixels\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Enhance Image\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003econverter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImageEnhance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eBrightness\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econverter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenhance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"adjast-color-of-an-image\"\u003eAdjast color of an image\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s adjust color of image based on amount\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd_color_saturation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Color saturation\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003econverter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImageEnhance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econverter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenhance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"save-the-pil-image-in-django-models-or-serve-as-django-file\"\u003eSave the PIL image in django models or serve as django file\u003c/h2\u003e\n\u003cp\u003eThis code will convert PIL Images to Content file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_django_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;png\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    Process the PIL file to Django File\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003efile_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBytesIO\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efile_object\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003econtent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efile_object\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetvalue\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContentFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd saving image will be damn easy:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;image.png\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003econtent_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprocess_django_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epil_image\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;some name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eformat\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;png\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emy_model\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003econtent_file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emy_model\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePut watermark on your image by \u003ccode\u003ePILService\u003c/code\u003e object\u0026rsquo;s \u003ccode\u003ewater_mark_on_image\u003c/code\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foobar.jpg\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epil_service\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePILService\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epil_service\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewater_mark_on_image\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eimg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;Text\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;20\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e# percent of height\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s2\"\u003e\u0026#34;font/path\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eopacity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emargin\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"convert-to-webp\"\u003eConvert to webp\u003c/h2\u003e\n\u003cp\u003eFor this feature you need to install.jpg driver in your machine. For mac use you need to run the following(using homebrew):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebrew install webp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr you can install \u003ccode\u003elibwebp\u003c/code\u003e in Unix/Linux.\u003c/p\u003e\n\u003cp\u003eThen you need to re-install pillow. Now, run this command to convert all the files to \u003ccode\u003e*.webp\u003c/code\u003e format in a certain directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDIR\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Path/To/Images\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edirs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efiles\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDIR\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003einfile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplitext\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eim\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;.webp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;WEBP\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# comment out this line if you want to keep original images\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"convert-to-jpgjpeg\"\u003eConvert to JPG/JPEG\u003c/h2\u003e\n\u003cp\u003eBefore converting to JPG/JPEG, you need to know that JPG is a lossy compression, and it can\u0026rsquo;t convert RGBA(Red, Green, Blue, Alpha). Meaning it can\u0026rsquo;t convert Alpha. So you can try like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econvert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;RGB\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# convert RGB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;.jpg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;JPEG\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBut above code will convert any transparent background to black. So instead you can use a white background to replace transparent part and then convert to RGB:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfile\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003enew_image\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eImage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;RGBA\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esize\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;WHITE\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# White Image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003enew_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epaste\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Setting as background\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enew_image\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econvert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;RGB\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eim\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;.jpg\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;JPEG\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"and-many-more\"\u003eAnd Many more\u003c/h2\u003e\n\u003cp\u003eMany more methods are given in this Repo: \u003ca href=\"https://github.com/ruddra/play-with-pillow\"\u003ehttps://github.com/ruddra/play-with-pillow\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHope it was helpful. Cheers!!!\u003c/p\u003e\n","content":"Who hasn\u0026rsquo;t heard PIL? It\u0026rsquo;s an image processing library made by python (Python Image Library). Pillow is an extension of it.Table of contents\u0026nbsp;  Installation Resize image Crop image in box shape Resize image and crop in center to convert it to a fixed size Paste image over a background image Draw text over an image Adjast brightness of an image Adjast color of an image Save the PIL image in django models or serve as django file Convert to webp Convert to JPG/JPEG And Many more   \nInstallation So installing pillow is really easy:\npip install pillow Now we are going to do some image processing cool stuff:\nFirst Load Image:\nfrom PIL import Image, ImageOps img = Image.open(\u0026#39;image.png\u0026#39;) Resize image Suppose We want to resize an image and maintain its aspect ratio. Here we need to get the aspect ratio after resizing. Here is a snippet for it:\ndef get_resize_image_size(image, baseheight=None): \u0026#34;\u0026#34;\u0026#34; Get resize image size \u0026#34;\u0026#34;\u0026#34; size = 1200, 1200 print(\u0026#34;Getting resize image size\u0026#34;) if not baseheight: baseheight = size[1] hpercent = (baseheight / float(image.size[1])) wsize = int((float(image.size[0]) * float(hpercent))) return wsize, baseheight Or we may want to our desired image size.\nAfter we get the desired aspect ratio, now we resize it with the following code:\ndef resize_image(img, size=None): \u0026#34;\u0026#34;\u0026#34; Resize Image img: Image file opened by PIL size: if Size not given, it will be calculated \u0026#34;\u0026#34;\u0026#34; print(\u0026#34;Resizing image\u0026#34;) if not size: size = get_resize_image_size(img) img = img.resize(size, Image.ANTIALIAS) return img Crop image in box shape When we try to crop, we can either give it positions for cropping or we can calculate the points, which will be used in cropping. Suppose we have a random image, but we want to crop it in middle position and we want to crop in such way that, we will only take out 1200x1200 size out of the sample image, the following is the code:\ndef crop_position(image): \u0026#34;\u0026#34;\u0026#34; Get Crop Image Positions \u0026#34;\u0026#34;\u0026#34; print(\u0026#34;Getting Crop Image Positions\u0026#34;) width, height = image.size new_width, new_height = 1200, 1200 left = (width - new_width) / 2 top = (height - new_height) / 2 right = (width + new_width) / 2 bottom = (height + new_height) / 2 return left, top, right, bottom Now we got the position, lets do cropping:\ndef crop_image(img, positions=None): \u0026#34;\u0026#34;\u0026#34; Crop Image in Box Shape \u0026#34;\u0026#34;\u0026#34; if not positions: positions = crop_position(img) return img.crop(box=positions) Resize image and crop in center to convert it to a fixed size Let\u0026rsquo;s take an image in size and convert it to 1200x1200 image:\ndef convert_image(pil_image): \u0026#34;\u0026#34;\u0026#34; Resize Image and Crop in Center to Convert it to a Fixed Size \u0026#34;\u0026#34;\u0026#34; try: if pil_image.size == self.size: print(\u0026#34;Nothing to change, returning image\u0026#34;) return image # Resize to size given in settings pil_image = resize_image(pil_image) # Cropping to adjust size given in settings pil_image = crop_image(pil_image) pil_image.save(path) except (KeyError, Exception) as exp: print(str(exp)) raise exp Paste image over a background image The following code will do the trick:\ndef add_overlay_over_background(background_image, overlay_image, offset=(0, 0)): \u0026#34;\u0026#34;\u0026#34; Add overlay image over background image \u0026#34;\u0026#34;\u0026#34; background_image.paste(overlay_image, offset, mask=overlay_image) return background_image Draw text over an image For that, we first we need fonts:\npath = \u0026#39;path/to/font\u0026#39; def get_font(size): \u0026#34;\u0026#34;\u0026#34; Get Font Object \u0026#34;\u0026#34;\u0026#34; return ImageFont.truetype(path, size=size) Then we need to co-ordinates where the texts will be written:\nHere are two scenarios:\n You provide the exact positions. You can provide the height of the text position, we will calculate where the texts will be printed in the image. Here we are assuming that texts will be aligned in middle horizontally. It will be symmetric in perspective middle vertical line.  def process_text_coordination(position, font=None, vertical_only=False, text=None): \u0026#34;\u0026#34;\u0026#34; Process Co-Ordination of the position \u0026#34;\u0026#34;\u0026#34; if vertical_only: # Case Two size = font.getsize(text) width = (self.size[0] - size[0]) / 2 return width, position # Case One return position Now we got everything, so let\u0026rsquo;s do writing text on image:\ndef write_text_on_image(image, font, text,position, color, size, vertical_only=False): \u0026#34;\u0026#34;\u0026#34; Write Text over Image \u0026#34;\u0026#34;\u0026#34; draw = ImageDraw.Draw(image) font = get_font(size) position = process_text_coordination( position, font, vertical_only, text ) draw.text(position, text, font=font, fill=color) return image BTW, here color can be hexa value of the color you want to use. For white, you need use: #fffff\nAdjast brightness of an image Let\u0026rsquo;s lighten or darken image based on amount:\ndef darken_or_lighten_pixels(image, amount=0.5): \u0026#34;\u0026#34;\u0026#34; Enhance Image \u0026#34;\u0026#34;\u0026#34; converter = ImageEnhance.Brightness(image) return converter.enhance(amount) Adjast color of an image Let\u0026rsquo;s adjust color of image based on amount\ndef add_color_saturation(image, amount=0.5): \u0026#34;\u0026#34;\u0026#34; Color saturation \u0026#34;\u0026#34;\u0026#34; converter = ImageEnhance.Color(image) return converter.enhance(amount) Save the PIL image in django models or serve as django file This code will convert PIL Images to Content file:\ndef process_django_file(pil_image, name, format=\u0026#39;png\u0026#39;): \u0026#34;\u0026#34;\u0026#34; Process the PIL file to Django File \u0026#34;\u0026#34;\u0026#34; file_object = BytesIO() pil_image.save(file_object, format=format) content = file_object.getvalue() return ContentFile(content, name=name) And saving image will be damn easy:\npil_image = Image.open(\u0026#39;image.png\u0026#39;) content_file = process_django_file(pil_image, name=\u0026#34;some name\u0026#34;, format=\u0026#39;png\u0026#39;) my_model.image = content_file my_model.save() Put watermark on your image by PILService object\u0026rsquo;s water_mark_on_image method:\nimg= Image.open(\u0026#39;foobar.jpg\u0026#39;) pil_service = PILService() pil_service.water_mark_on_image( img, \u0026#34;Text\u0026#34;, \u0026#34;20\u0026#34;, # percent of height \u0026#34;font/path\u0026#34;, opacity=50, margin=10 ) Convert to webp For this feature you need to install.jpg driver in your machine. For mac use you need to run the following(using homebrew):\nbrew install webp Or you can install libwebp in Unix/Linux.\nThen you need to re-install pillow. Now, run this command to convert all the files to *.webp format in a certain directory.\nDIR = \u0026#34;Path/To/Images\u0026#34; for root, dirs, files in os.walk(DIR): for file in files: infile = os.path.join(root, file) name, ext = os.path.splitext(file) try: im = Image.open(infile) im.save(os.path.join(root, name) + \u0026#34;.webp\u0026#34;, \u0026#34;WEBP\u0026#34;) os.remove(infile) # comment out this line if you want to keep original images except Exception as e: print(e) Convert to JPG/JPEG Before converting to JPG/JPEG, you need to know that JPG is a lossy compression, and it can\u0026rsquo;t convert RGBA(Red, Green, Blue, Alpha). Meaning it can\u0026rsquo;t convert Alpha. So you can try like this:\nim = Image.open(infile) im = im.convert(\u0026#39;RGB\u0026#39;) # convert RGB im.save(os.path.join(root, name) + \u0026#34;.jpg\u0026#34;, \u0026#34;JPEG\u0026#34;) But above code will convert any transparent background to black. So instead you can use a white background to replace transparent part and then convert to RGB:\nim = Image.open(infile) new_image = Image.new(\u0026#34;RGBA\u0026#34;, im.size, \u0026#34;WHITE\u0026#34;) # White Image new_image.paste(im, (0, 0), im) # Setting as background im = new_image.convert(\u0026#39;RGB\u0026#39;) im.save(os.path.join(root, name) + \u0026#34;.jpg\u0026#34;, \u0026#34;JPEG\u0026#34;) And Many more Many more methods are given in this Repo: https://github.com/ruddra/play-with-pillow\nHope it was helpful. Cheers!!!\n","description":"Who hasn\u0026rsquo;t heard PIL? It\u0026rsquo;s an image processing library made by python (Python Image Library). Pillow is an extension of it.Table of contents\u0026nbsp;  Installation Resize image Crop image in box shape Resize image and crop in center to convert it to a fixed size Paste image over a background image Draw text over an image Adjast brightness of an image Adjast color of an image Save the PIL image in django models or serve as django file Convert to webp Convert to JPG/JPEG And Many more"},{"date_published":"2017-03-21T15:45:11Z","date_modified":"2022-07-28T22:03:00+02:00","date":"March 21, 2017","id":"https://ruddra.com/python-selenium-with-phantomjs-to-capture-screenshots/","url":"https://ruddra.com/python-selenium-with-phantomjs-to-capture-screenshots/","title":"Python: Selenium with PhantomJs to capture Screenshots","image":"https://ruddra.com/content/images/2019/02/pycharm.jpg","tags":["Python","Selenium","PhantomJs"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis article is deprecated as PhantomJs has been deprecated from Selenium as driver.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cem\u003ePhantomJS is\u003c/em\u003e a headless WebKit script-able with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG. \u003cstrong\u003eAnd\u003c/strong\u003e \u003cem\u003eSelenium is\u003c/em\u003e a portable software-testing framework for web applications. Selenium provides a record/playback tool for authoring tests without the need to learn a test scripting language (Selenium IDE)\u003c/p\u003e\n\u003cp\u003eUsing the combination of selenium and PhantomJs can give you a way to capture screenshots and use it in your choices.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#installation-of-phantomjs\"\u003eInstallation of PhantomJs\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installation-of-selenium\"\u003eInstallation of Selenium\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#using-with-django\"\u003eUsing with Django\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"installation-of-phantomjs\"\u003eInstallation of PhantomJs\u003c/h2\u003e\n\u003cp\u003eFor that let\u0026rsquo;s install PhantomJs in your computer.\nFor Ubuntu/Debian platform, you can use like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo apt-get install phantomjs\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo apt-get update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo apt-get install build-essential chrpath libssl-dev libxft-dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo apt-get install libfreetype6 libfreetype6-dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo apt-get install libfontconfig1 libfontconfig1-dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;cd ~\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo mv phantomjs-2.1.1-linux-x86_64 /usr/local/share\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;sudo ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr use \u003ccode\u003enpm\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;npm install phantomjs2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"installation-of-selenium\"\u003eInstallation of Selenium\u003c/h2\u003e\n\u003cp\u003eInstall selenium by using \u003ccode\u003epip install selenium\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s go to coding:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eselenium\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ewebdriver\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Import selenium web driver\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edriver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ewebdriver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePhantomJs\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# PhantomJs webdriver\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edriver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;https://google.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edriver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave_screenshot\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;google.jpg\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDone! your image will be saved as \u003cstrong\u003egoogle.jpg\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"using-with-django\"\u003eUsing with Django\u003c/h2\u003e\n\u003cp\u003eSuppose you want to store the image in Django ImageFile, you can use the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003escreenshot\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edriver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escreenshot_as_base64\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# binary image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emy_model\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyModel\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emy_model\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eimage_field\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eContentFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003escreenshot\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;google.jpg\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMyModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat\u0026rsquo;s all for now.\nCheers!!\u003c/p\u003e\n","content":" This article is deprecated as PhantomJs has been deprecated from Selenium as driver.\n PhantomJS is a headless WebKit script-able with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG. And Selenium is a portable software-testing framework for web applications. Selenium provides a record/playback tool for authoring tests without the need to learn a test scripting language (Selenium IDE)\nUsing the combination of selenium and PhantomJs can give you a way to capture screenshots and use it in your choices.Table of contents\u0026nbsp;  Installation of PhantomJs Installation of Selenium Using with Django   \nInstallation of PhantomJs For that let\u0026rsquo;s install PhantomJs in your computer. For Ubuntu/Debian platform, you can use like this:\n\u0026gt;sudo apt-get install phantomjs Or,\n\u0026gt;sudo apt-get update \u0026gt;sudo apt-get install build-essential chrpath libssl-dev libxft-dev \u0026gt;sudo apt-get install libfreetype6 libfreetype6-dev \u0026gt;sudo apt-get install libfontconfig1 libfontconfig1-dev \u0026gt;cd ~ \u0026gt;wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \u0026gt;sudo tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 \u0026gt;sudo mv phantomjs-2.1.1-linux-x86_64 /usr/local/share \u0026gt;sudo ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin Or use npm:\n\u0026gt;npm install phantomjs2 Installation of Selenium Install selenium by using pip install selenium\nLet\u0026rsquo;s go to coding:\nfrom selenium import webdriver # Import selenium web driver driver = webdriver.PhantomJs() # PhantomJs webdriver driver.get(\u0026#39;https://google.com\u0026#39;) driver.save_screenshot(\u0026#39;google.jpg\u0026#39;) Done! your image will be saved as google.jpg.\nUsing with Django Suppose you want to store the image in Django ImageFile, you can use the following code:\nscreenshot = driver.screenshot_as_base64() # binary image my_model = MyModel() my_model.image_field = ContentFile(screenshot, \u0026#39;google.jpg\u0026#39;) MyModel.save() That\u0026rsquo;s all for now. Cheers!!\n","description":"This article is deprecated as PhantomJs has been deprecated from Selenium as driver.\n PhantomJS is a headless WebKit script-able with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG. And Selenium is a portable software-testing framework for web applications."},{"date_published":"2017-02-24T18:52:20Z","date_modified":"2022-07-28T22:03:00+02:00","date":"February 24, 2017","id":"https://ruddra.com/documentation-of-django-encrypt-file/","url":"https://ruddra.com/documentation-of-django-encrypt-file/","title":"Documentation Of Django Encrypt File","image":"https://ruddra.com/content/images/2020/04/encrypt.jpg","tags":["Django","Documentation"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis is no longer maintained. Use it at your own risk.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/ruddra/django-encrypt-file\"\u003eDjango Encrypt File\u003c/a\u003e is a simple Library which can be used to encrypt uploaded files and store them.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#basic-usage\"\u003eBasic usage\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#using-in-the-view\"\u003eUsing in the view\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#advance-examplewith-models\"\u003eAdvance example(with models)\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#model-defination\"\u003eModel defination\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#encrypt-view\"\u003eEncrypt view\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#decrypt-view\"\u003eDecrypt view\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#notes\"\u003eNotes\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eUse pip to install it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install djangoencryptfile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install https://github.com/ruddra/django-encrypt-file/tarball/0.7\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"basic-usage\"\u003eBasic usage\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjangoencryptfile\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.files\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;1234\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eservice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraise_exception\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;readme.md\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;rb\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003einputfile\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eusefile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputfile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;readme.md\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eservice\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euseFile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# it will save readme.md.enc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eservice\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;.enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# it will remove .enc extension\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"using-in-the-view\"\u003eUsing in the view\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango_encrypt_file\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esome_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emyfile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFILES\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;myfile\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eservice\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# it will remove .enc extension\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"advance-examplewith-models\"\u003eAdvance example(with models)\u003c/h2\u003e\n\u003ch3 id=\"model-defination\"\u003eModel defination\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyModel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eupload_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFileField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eupload_to\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;tuploaded_file/%Y/%m/\u003c/span\u003e\u003cspan class=\"si\"\u003e%d\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"encrypt-view\"\u003eEncrypt view\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango_encrypt_file\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eencrypt_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emyfile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFILES\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;myfile\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emyfile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emymodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecreate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euploaded_file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"decrypt-view\"\u003eDecrypt view\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango_encrypt_file\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eEncryptionService\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edecrypt_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emy_object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epk\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emyfile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emy_object\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euploaded_file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eservice\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencrypted_file\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eextension\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;enc\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emy_object\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euploaded_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edecrypt_file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003emy_object\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"notes\"\u003eNotes\u003c/h2\u003e\n\u003cp\u003eInput file here can be any kind of Django File Object like \u003ccode\u003emodels.FileField\u003c/code\u003e or \u003ccode\u003eforms.FileFiled\u003c/code\u003e. \u003ccode\u003eraise_exception = True\u003c/code\u003e will throw ValidationError error which can be imported from \u003ccode\u003edjango_encrypt_file import ValidationError\u003c/code\u003e.\u003c/p\u003e\n","content":" This is no longer maintained. Use it at your own risk.\n Django Encrypt File is a simple Library which can be used to encrypt uploaded files and store them.Table of contents\u0026nbsp;  Installation Basic usage Using in the view Advance example(with models)  Model defination Encrypt view Decrypt view   Notes   \nInstallation Use pip to install it:\npip install djangoencryptfile Or\npip install https://github.com/ruddra/django-encrypt-file/tarball/0.7 Basic usage from djangoencryptfile import EncryptionService from django.core.files import File password = \u0026#39;1234\u0026#39; service = EncryptionService(raise_exception=False) open(\u0026#39;readme.md\u0026#39;, \u0026#39;rb\u0026#39;) as inputfile: usefile = File(inputfile, name=\u0026#39;readme.md\u0026#39;) encrypted_file = service.encrypt_file(useFile, password, extension=\u0026#39;enc\u0026#39;) # it will save readme.md.enc decrypt_file = service.decrypt_file(encrypted_file, password, extension=\u0026#39;.enc\u0026#39;) # it will remove .enc extension Using in the view from django_encrypt_file import EncryptionService, ValidationError def some_view(request): try: myfile = request.FILES.get(\u0026#39;myfile\u0026#39;, None) password = request.POST.get(\u0026#39;password\u0026#39;, None) encrypted_file = EncryptionService().encrypt_file(myfile, password, extension=\u0026#39;enc\u0026#39;) decrypt_file = service.decrypt_file(encrypted_file, password, extension=\u0026#39;enc\u0026#39;) # it will remove .enc extension except ValidationError as e: print(e) Advance example(with models) Model defination class MyModel(models.Model): upload_file = models.FileField( upload_to=\u0026#39;tuploaded_file/%Y/%m/%d\u0026#39; ) Encrypt view from django_encrypt_file import EncryptionService, ValidationError def encrypt_view(request): try: myfile = request.FILES.get(\u0026#39;myfile\u0026#39;, None) password = request.POST.get(\u0026#39;password\u0026#39;, None) encrypted_file = EncryptionService().encrypt_file(myfile, password, extension=\u0026#39;enc\u0026#39;) mymodel = MyModel.objects.create(uploaded_file=encrypted_file) except ValidationError as e: print(e) Decrypt view from django_encrypt_file import EncryptionService, ValidationError def decrypt_view(request): try: my_object = MyModel.objects.get(pk=1) myfile = my_object.uploaded_file password = request.POST.get(\u0026#39;password\u0026#39;, None) decrypt_file = service.decrypt_file(encrypted_file, password, extension=\u0026#39;enc\u0026#39;) my_object.uploaded_file = decrypt_file my_object.save() except ValidationError as e: print(e) Notes Input file here can be any kind of Django File Object like models.FileField or forms.FileFiled. raise_exception = True will throw ValidationError error which can be imported from django_encrypt_file import ValidationError.\n","description":"This is no longer maintained. Use it at your own risk.\n Django Encrypt File is a simple Library which can be used to encrypt uploaded files and store them.Table of contents\u0026nbsp;  Installation Basic usage Using in the view Advance example(with models)  Model defination Encrypt view Decrypt view   Notes"},{"date_published":"2016-11-14T15:43:31Z","date_modified":"2022-07-28T22:03:00+02:00","date":"November 14, 2016","id":"https://ruddra.com/docker-do-stuff-using-celery-using-redis-as-broker/","url":"https://ruddra.com/docker-do-stuff-using-celery-using-redis-as-broker/","title":"Docker: Use Celery in Django(Redis as Broker)","image":"https://ruddra.com/content/images/2020/04/celery.jpg","tags":["Docker","Django","Celery","Gunicorn"],"content_html":"\u003cp\u003eIn previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#add-celery-to-django\"\u003eAdd \u0026lsquo;Celery\u0026rsquo; to django\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#make-a-simple-async-task\"\u003eMake a simple async task\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#explanations\"\u003eExplanations\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#need-proof-that-this-works\"\u003eNeed proof that this works\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"add-celery-to-django\"\u003eAdd \u0026lsquo;Celery\u0026rsquo; to django\u003c/h2\u003e\n\u003cp\u003eTo add celery, we need make a container for celery. We can re-use the \u003ccode\u003eDockerfile\u003c/code\u003e of django for making celery\u0026rsquo;s container like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-docker\" data-lang=\"docker\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.6\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e C_FORCE_ROOT true\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /static\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e ./src /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e python manage.py collectstatic --no-input\u003cspan class=\"p\"\u003e;\u003c/span\u003epython manage.py migrate\u003cspan class=\"p\"\u003e;\u003c/span\u003e gunicorn mydjango.wsgi -b 0.0.0.0:8000 \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e celery worker --app\u003cspan class=\"o\"\u003e=\u003c/span\u003emyapp.tasks\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e** \u003cem\u003eFYI\u003c/em\u003e We are avoiding Python \u003cstrong\u003e3.7\u003c/strong\u003e or **latest** docker image, because celery conflicts with Python\u0026rsquo;s \u003ccode\u003easync\u003c/code\u003e api(\u003ca href=\"https://github.com/celery/celery/issues/4500\"\u003ereference in github\u003c/a\u003e).\u003c/p\u003e\n\u003cp\u003eNow lets update the \u003ccode\u003edocker-compose.yml\u003c/code\u003e file to link django with celery, also link redis container to celery.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enginx:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./config/nginx:/etc/nginx/conf.d\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eexpose\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003elinks\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eredis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epostgres:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eredis:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erz01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;6379:6379\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow in django project, lets add broker url for celery in \u003ccode\u003esettings.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eCELERY_BROKER_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;redis://redis:6379/0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eCELERY_RESULT_BACKEND\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;redis://redis:6379/0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIntegration with celery from django is complete. You don\u0026rsquo;t need to read the next section if you already have celery tasks.\u003c/p\u003e\n\u003ch2 id=\"make-a-simple-async-task\"\u003eMake a simple async task\u003c/h2\u003e\n\u003cp\u003eHow to use celery from django? There is an amazing article about that on \u003ca href=\"http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html\"\u003ecelery\u0026rsquo;s own documentation page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo make this post post short, I will not get to details, but do basic stuff for making a simple async task using celery.\u003c/p\u003e\n\u003cp\u003eLets add a \u003ccode\u003ecelery.py\u003c/code\u003e inside \u003cstrong\u003emydjango\u0026gt;mydjango\u003c/strong\u003e directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eunicode_literals\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecelery\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eCelery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003elogging\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003elogger\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogging\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Celery\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;mydjango.settings\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCelery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;mydjango\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_from_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;django.conf:settings\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enamespace\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;CELERY\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eautodiscover_tasks\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@app\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebind\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edebug_task\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Request: \u003c/span\u003e\u003cspan class=\"si\"\u003e{0!r}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd create a new app named \u003ccode\u003emyapp\u003c/code\u003e, add it to django settings:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.admin\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.auth\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.contenttypes\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.sessions\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.messages\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;django.contrib.staticfiles\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;myapp.apps.MyappConfig\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;celery\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Don\u0026#39;t forget to add celery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we need to install \u003ccode\u003ecelery\u003c/code\u003e and \u003ccode\u003eredis\u003c/code\u003e by using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install celery\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install redis\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eor we can add them to \u003cstrong\u003econfig\u0026gt;requirements.pip\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eNow lets add a simple email sending task in \u003cstrong\u003esrc\u0026gt;mydjango\u0026gt;myapp\u0026gt;tasks.py\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eunicode_literals\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003elogging\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emydjango.celery\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003elogger\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogging\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;celery\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@app\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etask\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eshow_hello_world\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Printing Hello from Celery\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;-\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it, that should do the trick. Now just run \u003ccode\u003edocker-compose build\u003c/code\u003e and \u003ccode\u003edocker-compose run\u003c/code\u003e to make the project running. If you do then you should see an output like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"921\" height=\"66\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 921 66'%3E%3C/svg%3E\"\n        data-src=\"/content/git/Demo%202_hu5e36768e9a7ee8abf27c0a5f97897a8a_13777_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/Demo%202_hu5e36768e9a7ee8abf27c0a5f97897a8a_13777_500x0_resize_q75_lanczos.jpg 500w,/content/git/Demo%202_hu5e36768e9a7ee8abf27c0a5f97897a8a_13777_600x0_resize_q75_lanczos.jpg 600w,/content/git/Demo%202_hu5e36768e9a7ee8abf27c0a5f97897a8a_13777_720x0_resize_q75_lanczos.jpg 720w'\n        alt='demo' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/Demo%202.jpg\" width=\"921\" height=\"66\" alt='demo'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"explanations\"\u003eExplanations\u003c/h2\u003e\n\u003cp\u003eIn first step, we have updated \u003ccode\u003eDockerfile\u003c/code\u003e which was responsible for building django application\u0026rsquo;s environment.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-docker\" data-lang=\"docker\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.6\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e C_FORCE_ROOT true\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /static\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e ./src /src\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e python manage.py collectstatic --no-input\u003cspan class=\"p\"\u003e;\u003c/span\u003epython manage.py migrate\u003cspan class=\"p\"\u003e;\u003c/span\u003e gunicorn mydjango.wsgi -b 0.0.0.0:8000 \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e celery worker --app\u003cspan class=\"o\"\u003e=\u003c/span\u003emyapp.tasks\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere we are using python \u003cstrong\u003e3.6\u003c/strong\u003e image and inside it creating \u003cem\u003esrc\u003c/em\u003e \u0026amp; \u003cem\u003estatic\u003c/em\u003e directory. After that, we have added local \u003cem\u003esrc\u003c/em\u003e directory to docker\u0026rsquo;s \u003cem\u003esrc\u003c/em\u003e, and made it working directory(whenever you go into docker, you will be directly inside \u003cem\u003esrc\u003c/em\u003e folder). Then we installed the requirements. Finally, the \u003cem\u003eCMD\u003c/em\u003e command runs \u003ca href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/\"\u003ecollect static\u003c/a\u003e, migration, gunicorn and in the end creates celery workers.\u003c/p\u003e\n\u003cp\u003eIn \u003ccode\u003edocker-compose.yml\u003c/code\u003e, we have are adding nothing new from \u003ca href=\"/serve-static-files-by-nginx-from-django-using-docker/\"\u003elast step\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eNow the new \u003cstrong\u003ecelery\u003c/strong\u003e will be running in the old \u003cstrong\u003edjango\u003c/strong\u003e container.\u003c/p\u003e\n\u003cp\u003eCelery will run this command: \u003ccode\u003ecelery worker --app=myapp.tasks\u003c/code\u003e, which will execute tasks within an app named myapp.\u003c/p\u003e\n\u003ch2 id=\"need-proof-that-this-works\"\u003eNeed proof that this works\u003c/h2\u003e\n\u003cp\u003eGo to this \u003ca href=\"https://github.com/ruddra/docker-django\"\u003egithub link\u003c/a\u003e and pull and build. Don\u0026rsquo;t forget to update email configurations inside the settings of django.\u003c/p\u003e\n\u003cp\u003eCheckout previous posts about docker:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"/docker-django-nginx-postgres/\"\u003eDeploy Django, Gunicorn, NGINX, Postgresql using Docker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/serve-static-files-by-nginx-from-django-using-docker/\"\u003eServe Static Files by Nginx from Django using Docker\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n","content":"In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.Table of contents\u0026nbsp;  Add \u0026lsquo;Celery\u0026rsquo; to django Make a simple async task Explanations Need proof that this works   \nAdd \u0026lsquo;Celery\u0026rsquo; to django To add celery, we need make a container for celery. We can re-use the Dockerfile of django for making celery\u0026rsquo;s container like this:\nFROMpython:3.6ENV PYTHONUNBUFFERED 1ENV C_FORCE_ROOT trueRUN mkdir /srcRUN mkdir /staticWORKDIR/srcADD ./src /srcRUN pip install -r requirements.pipCMD python manage.py collectstatic --no-input;python manage.py migrate; gunicorn mydjango.wsgi -b 0.0.0.0:8000 \u0026amp; celery worker --app=myapp.tasks** FYI We are avoiding Python 3.7 or **latest** docker image, because celery conflicts with Python\u0026rsquo;s async api(reference in github).\nNow lets update the docker-compose.yml file to link django with celery, also link redis container to celery.\nversion:\u0026#34;2\u0026#34;services:nginx:image:nginx:latestcontainer_name:nz01ports:- \u0026#34;8000:8000\u0026#34;volumes:- ./src:/src- ./config/nginx:/etc/nginx/conf.ddepends_on:- webweb:build:.container_name:dz01depends_on:- dbvolumes:- ./src:/srcexpose:- \u0026#34;8000\u0026#34;links:- redisdb:image:postgres:latestcontainer_name:pz01redis:image:redis:latestcontainer_name:rz01ports:- \u0026#34;6379:6379\u0026#34;Now in django project, lets add broker url for celery in settings.py:\nCELERY_BROKER_URL = \u0026#39;redis://redis:6379/0\u0026#39; CELERY_RESULT_BACKEND = \u0026#39;redis://redis:6379/0\u0026#39; Integration with celery from django is complete. You don\u0026rsquo;t need to read the next section if you already have celery tasks.\nMake a simple async task How to use celery from django? There is an amazing article about that on celery\u0026rsquo;s own documentation page.\nTo make this post post short, I will not get to details, but do basic stuff for making a simple async task using celery.\nLets add a celery.py inside mydjango\u0026gt;mydjango directory.\nfrom __future__ import absolute_import, unicode_literals import os from celery import Celery import logging logger = logging.getLogger(\u0026#34;Celery\u0026#34;) os.environ.setdefault(\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;, \u0026#39;mydjango.settings\u0026#39;) app = Celery(\u0026#39;mydjango\u0026#39;) app.config_from_object(\u0026#39;django.conf:settings\u0026#39;, namespace=\u0026#39;CELERY\u0026#39;) app.autodiscover_tasks() @app.task(bind=True) def debug_task(self): print(\u0026#39;Request: {0!r}\u0026#39;.format(self.request)) And create a new app named myapp, add it to django settings:\nINSTALLED_APPS = [ \u0026#39;django.contrib.admin\u0026#39;, \u0026#39;django.contrib.auth\u0026#39;, \u0026#39;django.contrib.contenttypes\u0026#39;, \u0026#39;django.contrib.sessions\u0026#39;, \u0026#39;django.contrib.messages\u0026#39;, \u0026#39;django.contrib.staticfiles\u0026#39;, \u0026#39;myapp.apps.MyappConfig\u0026#39;, \u0026#39;celery\u0026#39;, # Don\u0026#39;t forget to add celery ] Now we need to install celery and redis by using:\npip install celery pip install redis or we can add them to config\u0026gt;requirements.pip.\nNow lets add a simple email sending task in src\u0026gt;mydjango\u0026gt;myapp\u0026gt;tasks.py\nfrom __future__ import absolute_import, unicode_literals import logging from django.conf import settings from mydjango.celery import app logger = logging.getLogger(\u0026#34;celery\u0026#34;) @app.task def show_hello_world(): logger.info(\u0026#34;-\u0026#34;*25) logger.info(\u0026#34;Printing Hello from Celery\u0026#34;) logger.info(\u0026#34;-\u0026#34;*25) Thats it, that should do the trick. Now just run docker-compose build and docker-compose run to make the project running. If you do then you should see an output like this:\n   Explanations In first step, we have updated Dockerfile which was responsible for building django application\u0026rsquo;s environment.\nFROMpython:3.6ENV PYTHONUNBUFFERED 1ENV C_FORCE_ROOT trueRUN mkdir /srcRUN mkdir /staticWORKDIR/srcADD ./src /srcRUN pip install -r requirements.pipCMD python manage.py collectstatic --no-input;python manage.py migrate; gunicorn mydjango.wsgi -b 0.0.0.0:8000 \u0026amp; celery worker --app=myapp.tasksHere we are using python 3.6 image and inside it creating src \u0026amp; static directory. After that, we have added local src directory to docker\u0026rsquo;s src, and made it working directory(whenever you go into docker, you will be directly inside src folder). Then we installed the requirements. Finally, the CMD command runs collect static, migration, gunicorn and in the end creates celery workers.\nIn docker-compose.yml, we have are adding nothing new from last step.\nNow the new celery will be running in the old django container.\nCelery will run this command: celery worker --app=myapp.tasks, which will execute tasks within an app named myapp.\nNeed proof that this works Go to this github link and pull and build. Don\u0026rsquo;t forget to update email configurations inside the settings of django.\nCheckout previous posts about docker:\n Deploy Django, Gunicorn, NGINX, Postgresql using Docker Serve Static Files by Nginx from Django using Docker  ","description":"In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.Table of contents\u0026nbsp;  Add \u0026lsquo;Celery\u0026rsquo; to django Make a simple async task Explanations Need proof that this works"},{"date_published":"2016-11-02T17:24:56Z","date_modified":"2022-07-28T22:03:00+02:00","date":"November 2, 2016","id":"https://ruddra.com/serve-static-files-by-nginx-from-django-using-docker/","url":"https://ruddra.com/serve-static-files-by-nginx-from-django-using-docker/","title":"Serve Static Files by Nginx from Django using Docker","image":"https://ruddra.com/content/images/2020/04/docker.jpg","tags":["Docker","Nginx","Django","DevOps"],"content_html":"\u003cp\u003eThis is more of a follow up post of \u003ca href=\"/docker-django-nginx-postgres/\"\u003emy previous article\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBefore I start, I am assuming you have successfully deployed django using docker and nginx, but having some problems serving static files.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#steps\"\u003eSteps\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update\"\u003eUpdate\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\u003cp\u003eNo worries, it is easy. Just follow these steps:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e1.\u003c/strong\u003e In your django \u003cstrong\u003esettings.py\u003c/strong\u003e file, add static file directory i.e. \u003ccode\u003eSTATIC_ROOT=/static\u003c/code\u003e. So what it will do is, when you run \u003ccode\u003ecollectstatic\u003c/code\u003e command(\u003ccode\u003epython manage.py collectstatic\u003c/code\u003e), it will store the static files in your \u003cstrong\u003e/static\u003c/strong\u003e directory of OS.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e2.\u003c/strong\u003e Now in \u003ccode\u003edocker-compose.yml\u003c/code\u003e folder, lets add a configuration like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enginx:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eNGINXDOCKERNAME\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./config/nginx:/etc/nginx/conf.d\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e/static:/static  \u0026lt;--- HERE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDJANGOXDOCKERNAME\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebash -c \u0026#34;python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e/static:/static    \u0026lt;---- HERE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eexpose\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epostgres:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePSQLDOCKERNAME\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cem\u003eFYI\u003c/em\u003e the \u003ccode\u003ecommand\u003c/code\u003e argument of the docker compose is same as \u003ca href=\"https://docs.docker.com/engine/reference/builder/\"\u003e\u003ccode\u003eCMD\u003c/code\u003e of Dockerfile\u003c/a\u003e. So we can move this inside Dockerfile if we want to(i.e.: \u003ccode\u003eCMD python manage.py makemigrations;python manage.py migrate;gunicorn mydjango.wsgi -b 0.0.0.0:8000\u003c/code\u003e).\u003c/p\u003e\n\u003cp\u003eWhat it will do is that, two containers \u003cem\u003eweb\u003c/em\u003e and \u003cem\u003enginx\u003c/em\u003e will share a directory named \u003cstrong\u003e/static\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e3.\u003c/strong\u003e Now lets add few lines in nginx\u0026rsquo;s config file, i.e \u003ccode\u003emydjango.conf\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-nginx\" data-lang=\"nginx\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eupstream\u003c/span\u003e \u003cspan class=\"s\"\u003eweb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eip_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eserver\u003c/span\u003e \u003cspan class=\"n\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e8000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eserver\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003elocation\u003c/span\u003e \u003cspan class=\"s\"\u003e/static/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eautoindex\u003c/span\u003e \u003cspan class=\"no\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003ealias\u003c/span\u003e \u003cspan class=\"s\"\u003e/static/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003elocation\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eproxy_pass\u003c/span\u003e \u003cspan class=\"s\"\u003ehttp://web/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003elisten\u003c/span\u003e \u003cspan class=\"mi\"\u003e8000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kn\"\u003eserver_name\u003c/span\u003e \u003cspan class=\"s\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo what it will do is, any request to url like \u003ccode\u003eyourhost:yourport/static/*\u003c/code\u003e this comes to nginx, it will serve data from \u003ccode\u003e/static\u003c/code\u003e directory.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e4.\u003c/strong\u003e Now lets run the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e DOCKERNAME /bin/sh -c \u003cspan class=\"s2\"\u003e\u0026#34;python manage.py collectstatic --noinput\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr update the \u003ccode\u003ecommand\u003c/code\u003e key\u0026rsquo;s value in compose to:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebash -c \u0026#34;python manage.py collectstatic --no-input \u0026amp;\u0026amp; python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will put static files in \u003ccode\u003e/static\u003c/code\u003e directory and thats should do the trick. Whenever you hit url with \u003ccode\u003e/static\u003c/code\u003e will serve static files from that folder. Similarly you can serve media files too.\nCodes have been updated here at: \u003ca href=\"https://github.com/ruddra/docker-django\"\u003ehttps://github.com/ruddra/docker-django\u003c/a\u003e\nCheers!!\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"update\"\u003eUpdate\u003c/h2\u003e\n\u003cp\u003eIf you are interested to run \u003ca href=\"http://www.celeryproject.org/\"\u003edistributed tasks using celery\u003c/a\u003e in Docker with Django, then please \u003ca href=\"/docker-do-stuff-using-celery-using-redis-as-broker/\"\u003eread this post\u003c/a\u003e.\u003c/p\u003e\n","content":"This is more of a follow up post of my previous article.\nBefore I start, I am assuming you have successfully deployed django using docker and nginx, but having some problems serving static files.Table of contents\u0026nbsp;  Steps Update   \nSteps No worries, it is easy. Just follow these steps:\n1. In your django settings.py file, add static file directory i.e. STATIC_ROOT=/static. So what it will do is, when you run collectstatic command(python manage.py collectstatic), it will store the static files in your /static directory of OS.\n2. Now in docker-compose.yml folder, lets add a configuration like this:\nversion:\u0026#34;2\u0026#34;services:nginx:image:nginx:latestcontainer_name:NGINXDOCKERNAMEports:- \u0026#34;8000:8000\u0026#34;volumes:- ./src:/src- ./config/nginx:/etc/nginx/conf.d- /static:/static \u0026lt;--- HEREdepends_on:- webweb:build:.container_name:DJANGOXDOCKERNAMEcommand:bash -c \u0026#34;python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;depends_on:- dbvolumes:- ./src:/src- /static:/static \u0026lt;---- HEREexpose:- \u0026#34;8000\u0026#34;db:image:postgres:latestcontainer_name:PSQLDOCKERNAMEFYI the command argument of the docker compose is same as CMD of Dockerfile. So we can move this inside Dockerfile if we want to(i.e.: CMD python manage.py makemigrations;python manage.py migrate;gunicorn mydjango.wsgi -b 0.0.0.0:8000).\nWhat it will do is that, two containers web and nginx will share a directory named /static.\n3. Now lets add few lines in nginx\u0026rsquo;s config file, i.e mydjango.conf:\nupstream web { ip_hash; server web:8000; } server { location /static/ { autoindex on; alias /static/; } location / { proxy_pass http://web/; } listen 8000; server_name localhost; } So what it will do is, any request to url like yourhost:yourport/static/* this comes to nginx, it will serve data from /static directory.\n4. Now lets run the following command:\ndocker exec DOCKERNAME /bin/sh -c \u0026#34;python manage.py collectstatic --noinput\u0026#34; Or update the command key\u0026rsquo;s value in compose to:\ncommand:bash -c \u0026#34;python manage.py collectstatic --no-input \u0026amp;\u0026amp; python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;It will put static files in /static directory and thats should do the trick. Whenever you hit url with /static will serve static files from that folder. Similarly you can serve media files too. Codes have been updated here at: https://github.com/ruddra/docker-django Cheers!!\n Update If you are interested to run distributed tasks using celery in Docker with Django, then please read this post.\n","description":"This is more of a follow up post of my previous article.\nBefore I start, I am assuming you have successfully deployed django using docker and nginx, but having some problems serving static files.Table of contents\u0026nbsp;  Steps Update   \nSteps No worries, it is easy. Just follow these steps:"},{"date_published":"2016-08-09T13:47:22Z","date_modified":"2022-07-28T22:03:00+02:00","date":"August 9, 2016","id":"https://ruddra.com/docker-django-nginx-postgres/","url":"https://ruddra.com/docker-django-nginx-postgres/","title":"Deploy Django, Gunicorn, NGINX, Postgresql using Docker","image":"https://ruddra.com/content/images/2020/05/computer.jpg","tags":["Django","Nginx","Postgres","Docker","Gunicorn"],"content_html":"\u003cblockquote\u003e\n\u003cp\u003eThis post is based on \u003ca href=\"https://docs.docker.com/compose/django/\"\u003ethis article on docker documentation\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI will be extending this post by serving django+gunicorn using Nginx, also I will using Postgresql docker container to use it as database.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#steps\"\u003eSteps\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#create-django-project\"\u003eCreate django project\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#add-requirementpip\"\u003eAdd \u0026lsquo;requirement.pip\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#create-dockerfile\"\u003eCreate \u0026lsquo;Dockerfile\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#install-docker-compose\"\u003eInstall \u0026lsquo;docker-compose\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#add-configuration-to-docker-composeyml\"\u003eAdd configuration to \u0026lsquo;docker-compose.yml\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#create-nginx-config\"\u003eCreate NGINX config\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#database-configuration\"\u003eDatabase configuration\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#almost-done\"\u003eAlmost done\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#start-and-stop-docker-compose\"\u003eStart and stop docker compose\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#shell-access\"\u003eShell access\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#example-source-code\"\u003eExample source code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update\"\u003eUpdate\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\u003cp\u003eLet us checkout to the following steps.\u003c/p\u003e\n\u003ch3 id=\"create-django-project\"\u003eCreate django project\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s make an empty directory named \u003cstrong\u003emyproject\u003c/strong\u003e and add another folder inside name it \u003cstrong\u003esrc\u003c/strong\u003e. \u003cstrong\u003esrc\u003c/strong\u003e should contain the django project. For testing purpose lets put a simple django project inside named \u003cstrong\u003emydjango\u003c/strong\u003e.\u003c/p\u003e\n\u003ch3 id=\"add-requirementpip\"\u003eAdd \u0026lsquo;requirement.pip\u0026rsquo;\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s create a subdirectory inside \u003cstrong\u003emyproject\u003c/strong\u003e and name it \u003cstrong\u003econfig\u003c/strong\u003e. Lets put a \u003ccode\u003erequirement.pip\u003c/code\u003e file inside \u003cstrong\u003econfig\u003c/strong\u003e and write these line in it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eDjango==1.10\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egunicorn==19.6.0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epsycopg2==2.6.2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"create-dockerfile\"\u003eCreate \u0026lsquo;Dockerfile\u0026rsquo;\u003c/h3\u003e\n\u003cp\u003eNow let\u0026rsquo;s make a \u003ccode\u003eDockerfile\u003c/code\u003e inside the \u003cstrong\u003emyproject\u003c/strong\u003e. This should contain the following lines:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-docker\" data-lang=\"docker\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e python:3.6\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eENV\u003c/span\u003e PYTHONUNBUFFERED \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /config\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e /config/requirements.pip /config/\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e pip install -r /config/requirements.pip\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e mkdir /src\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /src\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo this \u003cstrong\u003eDockerfile\u003c/strong\u003e starts with a Python 3.5 based image. Then the container is modified by adding the \u003ccode\u003erequirement.pip\u003c/code\u003e file in \u003cstrong\u003e/config\u003c/strong\u003e directory within the container and installing the packages from it.\u003c/p\u003e\n\u003ch3 id=\"install-docker-compose\"\u003eInstall \u0026lsquo;docker-compose\u0026rsquo;\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s create a file called \u003ccode\u003edocker-compose.yml\u003c/code\u003e in \u003cstrong\u003emyproject\u003c/strong\u003e directory.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003edocker-compose.yml\u003c/code\u003e file describes the services that make your app. Here we need a web service(Django+Gunicorn), A database(Postgres), and Proxy Server(Nginx). It also describes which Docker images these services will use, how they will link together, any volumes they might need mounted inside the containers. Finally, the \u003ccode\u003edocker-compose.yml\u003c/code\u003e file describes which ports these services expose. See the \u003ca href=\"https://docs.docker.com/compose/compose-file/\"\u003edocker-compose.yml\u003c/a\u003e reference for more information on how this file works. Don\u0026rsquo;t forget to add \u003cstrong\u003edocker-compose\u003c/strong\u003e\nto your python environment by running \u003ccode\u003epip install docker-compose\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"add-configuration-to-docker-composeyml\"\u003eAdd configuration to \u0026lsquo;docker-compose.yml\u0026rsquo;\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s add the following configuration to the \u003ccode\u003edocker-compose.yml\u003c/code\u003e file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eversion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eservices\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enginx:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eng01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./config/nginx:/etc/nginx/conf.d\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edg01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecommand\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebash -c \u0026#34;python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edepends_on\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003edb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003evolumes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003e./src:/src\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eexpose\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;8000\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epostgres:latest\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eps01\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt says that there are three services for this project: \u003cem\u003enginx, web, db\u003c/em\u003e. nginx depends on web, web depends on db. \u003cem\u003edb\u003c/em\u003e container uses \u003ca href=\"https://hub.docker.com/_/postgres/\"\u003epostgres\u0026rsquo;s latest image\u003c/a\u003e from dockerhub. Default username for \u003cem\u003edb\u003c/em\u003e is \u003ccode\u003epostgres\u003c/code\u003e and password is \u003ccode\u003epostgres\u003c/code\u003e\n\u003cem\u003eweb\u003c/em\u003e container is build using project\u0026rsquo;s \u003ccode\u003eDockerfile\u003c/code\u003e. It mounts \u003cstrong\u003esrc\u003c/strong\u003e directory into it and exposes port 8000. \u003ccode\u003eversion\u003c/code\u003e is being used for \u003ca href=\"https://medium.com/@giorgioto/docker-compose-yml-from-v1-to-v2-3c0f8bb7a48e#.asnbe1ob5\"\u003ewhich format to use to compose\u003c/a\u003e the docker file.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003enginx\u003c/em\u003e uses \u003ca href=\"https://hub.docker.com/_/nginx/\"\u003enginx\u0026rsquo;s latest image\u003c/a\u003e from dockerhub. This proxy server is accessible from port 8000. It mounts \u003cstrong\u003esrc\u003c/strong\u003e and \u003cstrong\u003econfig\u003c/strong\u003e directory.\u003c/p\u003e\n\u003ch3 id=\"create-nginx-config\"\u003eCreate NGINX config\u003c/h3\u003e\n\u003cp\u003eNow let\u0026rsquo;s write a \u003ca href=\"http://nginx.org/en/docs/beginners_guide.html\"\u003enginx configuration\u003c/a\u003e config file named \u003ccode\u003emydjango.conf\u003c/code\u003e inside \u003cstrong\u003emyproject\u003c/strong\u003e\u0026rsquo;s config folder and put it in a subdirectory named \u003cstrong\u003enginx\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-nginx\" data-lang=\"nginx\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eupstream\u003c/span\u003e \u003cspan class=\"s\"\u003eweb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eip_hash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eserver\u003c/span\u003e \u003cspan class=\"n\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e8000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# portal\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eserver\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003elocation\u003c/span\u003e \u003cspan class=\"s\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kn\"\u003eproxy_pass\u003c/span\u003e \u003cspan class=\"s\"\u003ehttp://web/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003elisten\u003c/span\u003e \u003cspan class=\"mi\"\u003e8000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kn\"\u003eserver_name\u003c/span\u003e \u003cspan class=\"s\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo what it does that, nginx acts as a reverse proxy for any connections going to django server and all connections goes through nginx to reach django server.\u003c/p\u003e\n\u003cp\u003eProject Directory should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e── myproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── src\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── mydjango\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── manage.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── config\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── requirements.pip\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── nginx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │      ├── mydjango.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    └── docker-compose.yml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"database-configuration\"\u003eDatabase configuration\u003c/h3\u003e\n\u003cp\u003eTo communicate from django to postgres, we need to put database configuration in django applications settings file. It should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDATABASES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;default\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;ENGINE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;django.db.backends.postgresql_psycopg2\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;NAME\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;USER\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;postgres\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;HOST\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;db\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;PORT\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e5432\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"almost-done\"\u003eAlmost done\u003c/h3\u003e\n\u003cp\u003eAll is done. Now lets run \u003ccode\u003edocker-compose build\u003c/code\u003e in terminal within the project directory. It will build/rebuild(if necessary) all the containers. For first time running the containers, run \u003ccode\u003edocker-compose up -d\u003c/code\u003e. Lets go to browser and type: \u003ccode\u003elocalhost:8000\u003c/code\u003e. We should see the django application up and running.\u003c/p\u003e\n\u003ch3 id=\"start-and-stop-docker-compose\"\u003eStart and stop docker compose\u003c/h3\u003e\n\u003cp\u003eFor stopping the docker, run \u003ccode\u003edocker-compose stop\u003c/code\u003e. Re-running docker, use \u003ccode\u003edocker-compose start\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"shell-access\"\u003eShell access\u003c/h3\u003e\n\u003cp\u003eFor shell accessing.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Nginx\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -ti nginx bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Web\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -ti web bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Database\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -ti db bash\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor logs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Nginx\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose logs nginx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Web\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose logs web\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#DB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edocker-compose logs db\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it.\u003c/p\u003e\n\u003ch2 id=\"example-source-code\"\u003eExample source code\u003c/h2\u003e\n\u003cp\u003eYou can see an working example here in my repo: \u003ca href=\"https://github.com/ruddra/docker-django\"\u003ehttps://github.com/ruddra/docker-django\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAlso another deployment example for Ruby on rails here: \u003ca href=\"https://github.com/ruddra/deploy-notebook\"\u003ehttps://github.com/ruddra/deploy-notebook\u003c/a\u003e\n(Thanks to \u003ca href=\"https://github.com/akimul\"\u003eAkimul Islam\u003c/a\u003e for the source)\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThats all for now. Thanks for reading. If you have any question, please post it in comment section below.\u003c/p\u003e\n\u003cp\u003eCheers!!\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"update\"\u003eUpdate\u003c/h2\u003e\n\u003cp\u003eServing django with gunicorn won\u0026rsquo;t allow you to serve static files with it. You need to serve static files seperately. You can follow \u003ca href=\"/serve-static-files-by-nginx-from-django-using-docker/\"\u003ethis post\u003c/a\u003e for how to do serve static files using Nginx from docker.\u003c/p\u003e\n","content":" This post is based on this article on docker documentation.\n I will be extending this post by serving django+gunicorn using Nginx, also I will using Postgresql docker container to use it as database.Table of contents\u0026nbsp;  Steps  Create django project Add \u0026lsquo;requirement.pip\u0026rsquo; Create \u0026lsquo;Dockerfile\u0026rsquo; Install \u0026lsquo;docker-compose\u0026rsquo; Add configuration to \u0026lsquo;docker-compose.yml\u0026rsquo; Create NGINX config Database configuration Almost done Start and stop docker compose Shell access   Example source code In conclusion Update   \nSteps Let us checkout to the following steps.\nCreate django project Let\u0026rsquo;s make an empty directory named myproject and add another folder inside name it src. src should contain the django project. For testing purpose lets put a simple django project inside named mydjango.\nAdd \u0026lsquo;requirement.pip\u0026rsquo; Let\u0026rsquo;s create a subdirectory inside myproject and name it config. Lets put a requirement.pip file inside config and write these line in it:\nDjango==1.10 gunicorn==19.6.0 psycopg2==2.6.2 Create \u0026lsquo;Dockerfile\u0026rsquo; Now let\u0026rsquo;s make a Dockerfile inside the myproject. This should contain the following lines:\nFROMpython:3.6ENV PYTHONUNBUFFERED 1RUN mkdir /configADD /config/requirements.pip /config/RUN pip install -r /config/requirements.pipRUN mkdir /src;WORKDIR/srcSo this Dockerfile starts with a Python 3.5 based image. Then the container is modified by adding the requirement.pip file in /config directory within the container and installing the packages from it.\nInstall \u0026lsquo;docker-compose\u0026rsquo; Let\u0026rsquo;s create a file called docker-compose.yml in myproject directory.\nThe docker-compose.yml file describes the services that make your app. Here we need a web service(Django+Gunicorn), A database(Postgres), and Proxy Server(Nginx). It also describes which Docker images these services will use, how they will link together, any volumes they might need mounted inside the containers. Finally, the docker-compose.yml file describes which ports these services expose. See the docker-compose.yml reference for more information on how this file works. Don\u0026rsquo;t forget to add docker-compose to your python environment by running pip install docker-compose.\nAdd configuration to \u0026lsquo;docker-compose.yml\u0026rsquo; Let\u0026rsquo;s add the following configuration to the docker-compose.yml file:\nversion:\u0026#34;2\u0026#34;services:nginx:image:nginx:latestcontainer_name:ng01ports:- \u0026#34;8000:8000\u0026#34;volumes:- ./src:/src- ./config/nginx:/etc/nginx/conf.ddepends_on:- webweb:build:.container_name:dg01command:bash -c \u0026#34;python manage.py makemigrations \u0026amp;\u0026amp; python manage.py migrate \u0026amp;\u0026amp; gunicorn mydjango.wsgi -b 0.0.0.0:8000\u0026#34;depends_on:- dbvolumes:- ./src:/srcexpose:- \u0026#34;8000\u0026#34;db:image:postgres:latestcontainer_name:ps01It says that there are three services for this project: nginx, web, db. nginx depends on web, web depends on db. db container uses postgres\u0026rsquo;s latest image from dockerhub. Default username for db is postgres and password is postgres web container is build using project\u0026rsquo;s Dockerfile. It mounts src directory into it and exposes port 8000. version is being used for which format to use to compose the docker file.\nnginx uses nginx\u0026rsquo;s latest image from dockerhub. This proxy server is accessible from port 8000. It mounts src and config directory.\nCreate NGINX config Now let\u0026rsquo;s write a nginx configuration config file named mydjango.conf inside myproject\u0026rsquo;s config folder and put it in a subdirectory named nginx.\nupstream web { ip_hash; server web:8000; } # portal server { location / { proxy_pass http://web/; } listen 8000; server_name localhost; } So what it does that, nginx acts as a reverse proxy for any connections going to django server and all connections goes through nginx to reach django server.\nProject Directory should look like this:\n── myproject ├── src │ ├── mydjango │ ├── manage.py ├── config │ ├── requirements.pip │ ├── nginx │ ├── mydjango.conf ├── Dockerfile └── docker-compose.yml Database configuration To communicate from django to postgres, we need to put database configuration in django applications settings file. It should look like this:\nDATABASES = { \u0026#39;default\u0026#39;: { \u0026#39;ENGINE\u0026#39;: \u0026#39;django.db.backends.postgresql_psycopg2\u0026#39;, \u0026#39;NAME\u0026#39;: \u0026#39;postgres\u0026#39;, \u0026#39;USER\u0026#39;: \u0026#39;postgres\u0026#39;, \u0026#39;HOST\u0026#39;: \u0026#39;db\u0026#39;, \u0026#39;PORT\u0026#39;: 5432, } } Almost done All is done. Now lets run docker-compose build in terminal within the project directory. It will build/rebuild(if necessary) all the containers. For first time running the containers, run docker-compose up -d. Lets go to browser and type: localhost:8000. We should see the django application up and running.\nStart and stop docker compose For stopping the docker, run docker-compose stop. Re-running docker, use docker-compose start.\nShell access For shell accessing.\n#Nginx docker exec -ti nginx bash #Web docker exec -ti web bash #Database docker exec -ti db bash For logs:\n#Nginx docker-compose logs nginx #Web docker-compose logs web #DB docker-compose logs db Thats it.\nExample source code You can see an working example here in my repo: https://github.com/ruddra/docker-django\nAlso another deployment example for Ruby on rails here: https://github.com/ruddra/deploy-notebook (Thanks to Akimul Islam for the source)\nIn conclusion Thats all for now. Thanks for reading. If you have any question, please post it in comment section below.\nCheers!!\n Update Serving django with gunicorn won\u0026rsquo;t allow you to serve static files with it. You need to serve static files seperately. You can follow this post for how to do serve static files using Nginx from docker.\n","description":"How easily you can deploy Django with NGINX, Postgresql, Gunicorn in Docker"},{"date_published":"2016-01-26T13:56:44Z","date_modified":"2022-07-28T22:03:00+02:00","date":"January 26, 2016","id":"https://ruddra.com/make-apple-notifications-from-rss-feed-using-python/","url":"https://ruddra.com/make-apple-notifications-from-rss-feed-using-python/","title":"Make MacOS Notifications From RSS Feed Using Python","image":"https://ruddra.com/content/images/2020/03/apple.jpg","tags":["Python","MacOS","RSS"],"content_html":"\u003cp\u003eToday we are going to see how make OSX notifications from RSS Feed of any website using Python.\u003c/p\u003e\n\u003cp\u003eSo first of all, let us see how to make a simple notification. We are going to use \u003ca href=\"https://en.wikipedia.org/wiki/AppleScript\"\u003e\u003ccode\u003eAppleScript\u003c/code\u003e\u003c/a\u003e for this.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#command-for-notification-in-applescript\"\u003eCommand for notification in AppleScript\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#start-coding-for-application\"\u003eStart coding for application\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#integrate-applescript-in-application\"\u003eIntegrate AppleScript in application\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"command-for-notification-in-applescript\"\u003eCommand for notification in AppleScript\u003c/h2\u003e\n\u003cp\u003eGo to terminal and Type:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026gt;\u0026gt;osascript -e \u003cspan class=\"s1\"\u003e\u0026#39;display notification \u0026#34;Lorem ipsum dolor sit amet\u0026#34; with title \u0026#34;Title\u0026#34;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe shall see a notification popping up in right up corner like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"732\" height=\"166\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 732 166'%3E%3C/svg%3E\"\n        data-src=\"/content/git/notification_SS_hu5b8c6b70ec54d02de143e6c6290fafc8_10554_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/notification_SS_hu5b8c6b70ec54d02de143e6c6290fafc8_10554_500x0_resize_q75_lanczos.jpg 500w,/content/git/notification_SS_hu5b8c6b70ec54d02de143e6c6290fafc8_10554_600x0_resize_q75_lanczos.jpg 600w,/content/git/notification_SS_hu5b8c6b70ec54d02de143e6c6290fafc8_10554_720x0_resize_q75_lanczos.jpg 720w'\n        alt='notification' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/notification_SS.jpg\" width=\"732\" height=\"166\" alt='notification'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eNow, we will use this command to pop up notifications using python from rss feeds.\u003c/p\u003e\n\u003ch2 id=\"start-coding-for-application\"\u003eStart coding for application\u003c/h2\u003e\n\u003cp\u003eWe are going to use \u003ca href=\"https://pypi.python.org/pypi/feedparser\"\u003epython feedparser\u003c/a\u003e library to get feed from a url. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003efeedparser\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003efeeds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efeedparser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;https://feedity.com/ruddra-com/VFZQWlFU.rss\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e([(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efeeds\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eentries\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will return a list of tuples containing urls and titles from the feed.\u003c/p\u003e\n\u003cp\u003eNow we will make an infinite loop and inside the loop we will continuously call the rss feed (will also pause for few moments, no worries) and show notifications:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efeedparser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erss_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eds\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eentries\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"integrate-applescript-in-application\"\u003eIntegrate AppleScript in application\u003c/h2\u003e\n\u003cp\u003eNow lets build the command for applescript which will put pop ups.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapple_cmd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;osascript -e \u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e{0}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eds\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eentries\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebase_cmd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;display notification \u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{0}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34; with title \u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{1}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eds\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Foobar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eapple_cmd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebase_cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats all we need. Now if we print the \u003ccode\u003eapple_cmd\u003c/code\u003e, we shall see commands like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eosascript -e \u003cspan class=\"s1\"\u003e\u0026#39;display notification \u0026#34;Foobar Title\u0026#34; with title \u0026#34;Foobar\u0026#34;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow using python\u0026rsquo;s \u003ccode\u003esubprocessor\u003c/code\u003e module, we will call these commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esubprocessor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubprocessor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePopen\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003eapple_cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eshell\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAlso there is one more thing, we need to remove duplicate entries from feed, we don\u0026rsquo;t want to see same notifications twice, or see old notifications on and on and on. So, we will check if the feed is updated like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eupdate_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efeed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdated\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe will verify if \u003ccode\u003eupdate_time\u003c/code\u003e is greater than previous iteration in while loop. Also, we will store \u003ccode\u003efeed id\u003c/code\u003e in a list so that we can check if new feed has ids which was already stored in previous iteration.\u003c/p\u003e\n\u003cp\u003eFinally, the code will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003elast_updated_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efeedparser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erss_url\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eupdated_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efeed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdated\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eupdated_time\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003elast_updated_time\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;No new feed\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003elast_updated_time\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eupdated_time\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eentry\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eentries\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003e_id\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eentry\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003e_id\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edup_ids\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Entry already exists\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003edup_ids\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ebase_cmd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;display notification \u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{0}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34; with title \u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e{1}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_notification\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erss_title\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ecmd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eapple_cmd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebase_cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePopen\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003ecmd\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eshell\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esleep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThats it, we will see popups of new notifications if feed is updated.\u003c/p\u003e\n\u003cp\u003eThe full working code is here: \u003ca href=\"https://github.com/ruddra/AppleFeedNotifier\"\u003ehttps://github.com/ruddra/AppleFeedNotifier\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eCheers!\u003c/p\u003e\n","content":"Today we are going to see how make OSX notifications from RSS Feed of any website using Python.\nSo first of all, let us see how to make a simple notification. We are going to use AppleScript for this.Table of contents\u0026nbsp;  Command for notification in AppleScript Start coding for application Integrate AppleScript in application In conclusion   \nCommand for notification in AppleScript Go to terminal and Type:\n\u0026gt;\u0026gt;osascript -e \u0026#39;display notification \u0026#34;Lorem ipsum dolor sit amet\u0026#34; with title \u0026#34;Title\u0026#34;\u0026#39; We shall see a notification popping up in right up corner like this:\n   Now, we will use this command to pop up notifications using python from rss feeds.\nStart coding for application We are going to use python feedparser library to get feed from a url. For example:\nimport feedparser feeds = feedparser.parse(\u0026#39;https://feedity.com/ruddra-com/VFZQWlFU.rss\u0026#39;) print([(x.title, x.id) for x in feeds.entries]) It will return a list of tuples containing urls and titles from the feed.\nNow we will make an infinite loop and inside the loop we will continuously call the rss feed (will also pause for few moments, no worries) and show notifications:\nwhile True: d = feedparser.parse(rss_url) for ds in d.entries: print (d.id, d.title) time.sleep(5) Integrate AppleScript in application Now lets build the command for applescript which will put pop ups.\napple_cmd = \u0026#34;osascript -e \u0026#39;{0}\u0026#39;\u0026#34; for ds in d.entries: base_cmd = \u0026#39;display notification \u0026#34;{0}\u0026#34; with title \u0026#34;{1}\u0026#34;\u0026#39;.format(ds.title, \u0026#34;Foobar\u0026#34;) apple_cmd.format(base_cmd) Thats all we need. Now if we print the apple_cmd, we shall see commands like this:\nosascript -e \u0026#39;display notification \u0026#34;Foobar Title\u0026#34; with title \u0026#34;Foobar\u0026#34;\u0026#39; Now using python\u0026rsquo;s subprocessor module, we will call these commands:\nimport subprocessor subprocessor.Popen([apple_cmd], shell=True) Also there is one more thing, we need to remove duplicate entries from feed, we don\u0026rsquo;t want to see same notifications twice, or see old notifications on and on and on. So, we will check if the feed is updated like this:\nupdate_time = d.feed.updated We will verify if update_time is greater than previous iteration in while loop. Also, we will store feed id in a list so that we can check if new feed has ids which was already stored in previous iteration.\nFinally, the code will look like this:\nlast_updated_time = None while True: d = feedparser.parse(rss_url) updated_time = d.feed.updated if updated_time == last_updated_time: print(\u0026#39;No new feed\u0026#39;) else: last_updated_time = updated_time for entry in d.entries: _id = entry.id if _id in dup_ids: print(\u0026#39;Entry already exists\u0026#39;) else: dup_ids.append(_id) base_cmd = \u0026#39;display notification \u0026#34;{0}\u0026#34; with title \u0026#34;{1}\u0026#34;\u0026#39;.format(_notification, rss_title) cmd = apple_cmd.format(base_cmd) subprocess.Popen([cmd], shell=True) time.sleep(5) time.sleep(5) In conclusion Thats it, we will see popups of new notifications if feed is updated.\nThe full working code is here: https://github.com/ruddra/AppleFeedNotifier\nCheers!\n","description":"Today we are going to see how make OSX notifications from RSS Feed of any website using Python.\nSo first of all, let us see how to make a simple notification. We are going to use AppleScript for this.Table of contents\u0026nbsp;  Command for notification in AppleScript Start coding for application Integrate AppleScript in application In conclusion"},{"date_published":"2016-01-10T15:21:42Z","date_modified":"2022-07-28T22:03:00+02:00","date":"January 10, 2016","id":"https://ruddra.com/make-csv-file-using-mysql-and-python/","url":"https://ruddra.com/make-csv-file-using-mysql-and-python/","title":"Make .CSV file using MySQL and Python","image":"https://ruddra.com/content/images/2020/03/csv.jpg","tags":["Python","CSV","MySQL"],"content_html":"\u003cp\u003eIn this blog, I am going to show how to develop an application by which we can make \u003cstrong\u003e.csv\u003c/strong\u003e files from MySQL database using Python.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#steps\"\u003eSteps\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#sql-command\"\u003eSQL command\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#run-sql-command-in-python\"\u003eRun SQL command in python\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#to-csv\"\u003eTo csv\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"steps\"\u003eSteps\u003c/h2\u003e\n\u003ch2 id=\"sql-command\"\u003eSQL command\u003c/h2\u003e\n\u003cp\u003eNow, let us start by getting data from Database. Lets say we have a DB names \u003ccode\u003ecsv_test\u003c/code\u003e and it contains a table named \u003ccode\u003etest\u003c/code\u003e with fields \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003ename\u003c/code\u003e, and for testing purpose let us have some values inserted into it like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"c1\"\u003e------+--------+\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"c1\"\u003e------+--------+\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etest_1\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etest_2\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003etest_3\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"c1\"\u003e------+--------+\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, to get all data from this table, the SQL command should be:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eSELECT\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecsv_test\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"run-sql-command-in-python\"\u003eRun SQL command in python\u003c/h2\u003e\n\u003cp\u003eWe shall run this vary command using python like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esubprocess\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esql_cmd\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;mysql -uroot -proot -e SELECT * FROM csv_test.test;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eresults\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esubprocess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echeck_output\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esql_cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003eshell\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresults\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf we run the above command, we shell find a binary string like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003etest_1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003etest_2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\t\u003c/span\u003e\u003cspan class=\"n\"\u003etest_3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eActual output will be something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sa\"\u003eb\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;id\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003ename\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003eest_1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e2\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003etest_2\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e3\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003etest_3\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we will convert this binary string to unicode string by running this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresults\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;utf-8\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd the \u003ccode\u003edata\u003c/code\u003e will be like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026#39;id\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003ename\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003eest_1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e2\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003etest_2\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e3\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003etest_3\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo, now we have the MySQL data as string. Now we shall start making \u003cstrong\u003e.csv\u003c/strong\u003e file out of it.\u003c/p\u003e\n\u003ch2 id=\"to-csv\"\u003eTo csv\u003c/h2\u003e\n\u003cp\u003eFirst, lets make an empty \u003cstrong\u003e.csv\u003c/strong\u003e file, ie:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;report_\u003c/span\u003e\u003cspan class=\"si\"\u003e{0}\u003c/span\u003e\u003cspan class=\"s1\"\u003e.csv\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estrftime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e%d\u003c/span\u003e\u003cspan class=\"s1\"\u003e-%m-%Y:%H:%M\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecsv_out\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;w\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFrom the \u003ccode\u003edata\u003c/code\u003e string, we will start making \u003cstrong\u003e.csv\u003c/strong\u003e file\u0026rsquo;s contents. Let us split the string in new lines(\u003ccode\u003e\\n\u003c/code\u003e) and loop through that list, also replace tabs(\u003ccode\u003e\\t\u003c/code\u003e) with comma(\u003ccode\u003e,\u003c/code\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecsv_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e`\u003c/span\u003e\\\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"err\"\u003e`\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ecsv_data\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e{0}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\r\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we write that \u003ccode\u003ecsv_data\u003c/code\u003e variable to \u003ccode\u003ecsv_out\u003c/code\u003e(empty \u003cstrong\u003e.csv\u003c/strong\u003e file) like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecsv_out\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewrite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecsv_data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecsv_out\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it, our work is done. We shall see a \u003cstrong\u003e.csv\u003c/strong\u003e file named \u003ccode\u003eREPORT_DD-MM-YYYY:HH:MM:SS.csv\u003c/code\u003e in the project directory.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSpecial Thanks\u003c/strong\u003e to this post: \u003ca href=\"https://redmoses.me/flask-and-shell/\"\u003ehttps://redmoses.me/flask-and-shell/\u003c/a\u003e about using MySQL and Flask togather\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSource\u003c/strong\u003e is here: \u003ca href=\"https://github.com/ruddra/mysql-python-csv\"\u003ehttps://github.com/ruddra/mysql-python-csv\u003c/a\u003e\u003c/p\u003e\n","content":"In this blog, I am going to show how to develop an application by which we can make .csv files from MySQL database using Python.Table of contents\u0026nbsp;  Steps SQL command Run SQL command in python To csv In conclusion   \nSteps SQL command Now, let us start by getting data from Database. Lets say we have a DB names csv_test and it contains a table named test with fields id and name, and for testing purpose let us have some values inserted into it like this:\n+------+--------+ |id|name|+------+--------+ |1|test_1||2|test_2||3|test_3|+------+--------+ Now, to get all data from this table, the SQL command should be:\nSELECT*FROMcsv_test.test;Run SQL command in python We shall run this vary command using python like this:\nimport subprocess try: sql_cmd = \u0026#34;mysql -uroot -proot -e SELECT * FROM csv_test.test;\u0026#34; results = subprocess.check_output( [sql_cmd], shell=True) print(results) except Exception as e: print(e) If we run the above command, we shell find a binary string like this:\nidname1test_12test_23test_3Actual output will be something like this:\nb\u0026#39;id\\tname\\n1\\t\\test_1\\n2\\ttest_2\\n3\\ttest_3\u0026#39; Now we will convert this binary string to unicode string by running this command:\ndata = results.decode(\u0026#39;utf-8\u0026#39;) And the data will be like this:\n\u0026#39;id\\tname\\n1\\t\\test_1\\n2\\ttest_2\\n3\\ttest_3\u0026#39; So, now we have the MySQL data as string. Now we shall start making .csv file out of it.\nTo csv First, lets make an empty .csv file, ie:\nfilename = \u0026#39;report_{0}.csv\u0026#39;.format(datetime.datetime.now().strftime(\u0026#39;%d-%m-%Y:%H:%M\u0026#39;)) csv_out = open(filename, \u0026#39;w\u0026#39;) From the data string, we will start making .csv file\u0026rsquo;s contents. Let us split the string in new lines(\\n) and loop through that list, also replace tabs(\\t) with comma(,):\ncsv_data = \u0026#39;\u0026#39; for item in data.split(`\\n`): csv_data += \u0026#39;{0}\\r\\n\u0026#39;.format(item.replace(\u0026#39;\\t\u0026#39;, \u0026#39;,\u0026#39;)) Now we write that csv_data variable to csv_out(empty .csv file) like this:\ncsv_out.write(csv_data) csv_out.close() Thats it, our work is done. We shall see a .csv file named REPORT_DD-MM-YYYY:HH:MM:SS.csv in the project directory.\nIn conclusion Special Thanks to this post: https://redmoses.me/flask-and-shell/ about using MySQL and Flask togather\nSource is here: https://github.com/ruddra/mysql-python-csv\n","description":"In this blog, I am going to show how to develop an application by which we can make .csv files from MySQL database using Python.Table of contents\u0026nbsp;  Steps SQL command Run SQL command in python To csv In conclusion   \nSteps SQL command Now, let us start by getting data from Database."},{"date_published":"2016-01-03T15:45:51Z","date_modified":"2022-07-28T22:03:00+02:00","date":"January 3, 2016","id":"https://ruddra.com/django-1-7-scrapy/","url":"https://ruddra.com/django-1-7-scrapy/","title":"Django 1.7 and Scrapy","image":"https://ruddra.com/content/images/2020/03/scrapy.jpg","tags":["Django","Scraping"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated. Use it at your own risk.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eToday I am going to share how to use \u003ca href=\"https://scrapy.org\"\u003eScrapy\u003c/a\u003e and \u003ca href=\"https://www.djangoproject.com/\"\u003eDjango\u003c/a\u003e together to crawl to a website and store scraped data to Database using Django.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#project-setup-django\"\u003eProject Setup: Django\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#project-setup-scrapy\"\u003eProject Setup: Scrapy\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#screenshots\"\u003eScreenshots\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"project-setup-django\"\u003eProject Setup: Django\u003c/h2\u003e\n\u003cp\u003eFirst, let us build a Django application using the following commands.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install \u003cspan class=\"nv\"\u003edjango\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.7\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edjango-admin.py startproject example_project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e example_project\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInside the \u003ccode\u003eexample_project\u003c/code\u003e directory, we will create a django app named \u003ccode\u003eapp\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py startapp app\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, we will update the \u003ccode\u003emodels.py\u003c/code\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExampleDotCom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edescription\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__str__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we shall update the \u003ccode\u003eadmin.py\u003c/code\u003e inside the \u003ccode\u003eapp\u003c/code\u003e directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eExampleDotCom\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eExampleDotCom\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUpdate \u003ccode\u003eINSTALLED_APPS\u003c/code\u003e of \u003ccode\u003esettings.py\u003c/code\u003e like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;app\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow, we will run the following commands in project directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py makemigrations\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py migrate\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py createsuperuser\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe last command will prompt to create a super user for the application. Now we will run the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epython manage.py runserver\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will start the django application.\u003c/p\u003e\n\u003cp\u003eDjango part is complete for now. Lets start the \u003cstrong\u003escrapy\u003c/strong\u003e project.\u003c/p\u003e\n\u003ch2 id=\"project-setup-scrapy\"\u003eProject Setup: Scrapy\u003c/h2\u003e\n\u003cp\u003eIn separate directory, we will create a scrapy project using the following commands:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install \u003cspan class=\"nv\"\u003eScrapy\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.0.3\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003escrapy startproject example_bot\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo use with Django application from scrapy application, we shall update its \u003ccode\u003esettings.py\u003c/code\u003e inside \u003ccode\u003eexample_bot\u003c/code\u003e project directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003esys\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDJANGO_PROJECT_PATH\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;YOUR/PATH/TO/DJANGO/PROJECT\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDJANGO_SETTINGS_MODULE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;example_project.settings\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDJANGO_PROJECT_PATH\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDJANGO_SETTINGS_MODULE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBOT_NAME\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;example_bot\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eSPIDER_MODULES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;example_bot.spiders\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo connect with django model, we need to install \u003ca href=\"http://doc.scrapy.org/en/0.24/topics/djangoitem.html\"\u003eDjangoItem\u003c/a\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epip install scrapy-djangoitem\u003cspan class=\"o\"\u003e==\u003c/span\u003e1.0.0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInside \u003ccode\u003eexample_bot\u003c/code\u003e directory, we will update the \u003ccode\u003eitems.py\u003c/code\u003e file like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003escrapy_djangoitem\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDjangoItem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eapp.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eExampleDotCom\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExampleDotComItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDjangoItem\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edjango_model\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eExampleDotCom\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we will create a crawl spider named \u003ccode\u003eexample.py\u003c/code\u003e inside \u003ccode\u003espiders\u003c/code\u003e directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003escrapy.spiders\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBaseSpider\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eexample_bot.items\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eExampleDotComItem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExampleSpider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBaseSpider\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;example\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eallowed_domains\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003estart_urls\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;http://www.example.com/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003expath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;//title/text()\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eextract\u003c/span\u003e\u003cspan class=\"p\"\u003e()[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003edescription\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003expath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;//body/div/p/text()\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eextract\u003c/span\u003e\u003cspan class=\"p\"\u003e()[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eExampleDotComItem\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edescription\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edescription\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we shall create an pipeline class like this inside \u003ccode\u003epipelines.py\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExPipeline\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eprocess_item\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espider\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we need to update the \u003ccode\u003esettings.py\u003c/code\u003e with this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eITEM_PIPELINES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;example_bot.pipelines.ExPipeline\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eProject structure will be like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── django1.7+scrapy\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   ├── example_bot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   ├── __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   ├── items.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   ├── pipelines.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   ├── settings.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   └── spiders\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │       ├── __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │       └── example.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── scrapy.cfg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── example_project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── manage.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ├── app\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── models.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   ├── admin.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    │   └── views.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    └── example_project\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        ├── __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        ├── settings.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        └── urls.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we shall run the application using the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003escrapy crawl example\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow let us return to the running django application. If everything above is done correctly, then we shall see an object of ExampleDotCom class has been created like the below screenshot in this url \u003ccode\u003ehttp://localhost:8000/admin/app/exampledotcom/\u003c/code\u003e:\u003c/p\u003e\n\u003ch2 id=\"screenshots\"\u003eScreenshots\u003c/h2\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1104\" height=\"500\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1104 500'%3E%3C/svg%3E\"\n        data-src=\"/content/git/scrap_django1_hu236236eabfe6725a242b304f04697377_53915_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/scrap_django1_hu236236eabfe6725a242b304f04697377_53915_500x0_resize_q75_lanczos.jpg 500w,/content/git/scrap_django1_hu236236eabfe6725a242b304f04697377_53915_600x0_resize_q75_lanczos.jpg 600w,/content/git/scrap_django1_hu236236eabfe6725a242b304f04697377_53915_720x0_resize_q75_lanczos.jpg 720w'\n        alt='scrap django 1' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/scrap_django1.jpg\" width=\"1104\" height=\"500\" alt='scrap django 1'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1870\" height=\"594\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1870 594'%3E%3C/svg%3E\"\n        data-src=\"/content/git/scrapy_django2_hua71a146454d27c5b7c185d8ac21000e3_64258_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/scrapy_django2_hua71a146454d27c5b7c185d8ac21000e3_64258_500x0_resize_q75_lanczos.jpg 500w,/content/git/scrapy_django2_hua71a146454d27c5b7c185d8ac21000e3_64258_600x0_resize_q75_lanczos.jpg 600w,/content/git/scrapy_django2_hua71a146454d27c5b7c185d8ac21000e3_64258_720x0_resize_q75_lanczos.jpg 720w'\n        alt='scrap django 2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/scrapy_django2.jpg\" width=\"1870\" height=\"594\" alt='scrap django 2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eThats all. Up and running django 1.7 + Scrapy project.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDrawbacks:\u003c/strong\u003e Only implemented using django 1.7\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSource:\u003c/strong\u003e \u003ca href=\"https://github.com/ruddra/django1.7-scrapy1.0.3\"\u003ehttps://github.com/ruddra/django1.7-scrapy1.0.3\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGot help and clues from this \u003ca href=\"http://stackoverflow.com/questions/19068308/access-django-models-with-scrapy-defining-path-to-django-project\"\u003eStack Overflow link\u003c/a\u003e.\u003c/p\u003e\n","content":" This post is deprecated. Use it at your own risk.\n Today I am going to share how to use Scrapy and Django together to crawl to a website and store scraped data to Database using Django.Table of contents\u0026nbsp;  Project Setup: Django Project Setup: Scrapy Screenshots   \nProject Setup: Django First, let us build a Django application using the following commands.\npip install django==1.7 django-admin.py startproject example_project cd example_project Inside the example_project directory, we will create a django app named app:\npython manage.py startapp app Then, we will update the models.py like this:\nfrom django.db import models class ExampleDotCom(models.Model): title = models.CharField(max_length=255) description = models.CharField(max_length=255) def __str__(self): return self.title Now we shall update the admin.py inside the app directory:\nfrom django.contrib import admin from app.models import ExampleDotCom admin.site.register(ExampleDotCom) Update INSTALLED_APPS of settings.py like:\nINSTALLED_APPS += (\u0026#39;app\u0026#39;,) Now, we will run the following commands in project directory:\npython manage.py makemigrations python manage.py migrate python manage.py createsuperuser The last command will prompt to create a super user for the application. Now we will run the following command:\npython manage.py runserver It will start the django application.\nDjango part is complete for now. Lets start the scrapy project.\nProject Setup: Scrapy In separate directory, we will create a scrapy project using the following commands:\npip install Scrapy==1.0.3 scrapy startproject example_bot To use with Django application from scrapy application, we shall update its settings.py inside example_bot project directory:\nimport os import sys DJANGO_PROJECT_PATH = \u0026#39;YOUR/PATH/TO/DJANGO/PROJECT\u0026#39; DJANGO_SETTINGS_MODULE = \u0026#39;example_project.settings\u0026#39; sys.path.insert(0, DJANGO_PROJECT_PATH) os.environ[\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;] = DJANGO_SETTINGS_MODULE BOT_NAME = \u0026#39;example_bot\u0026#39; SPIDER_MODULES = [\u0026#39;example_bot.spiders\u0026#39;] To connect with django model, we need to install DjangoItem like this:\npip install scrapy-djangoitem==1.0.0 Inside example_bot directory, we will update the items.py file like this:\nfrom scrapy_djangoitem import DjangoItem from app.models import ExampleDotCom class ExampleDotComItem(DjangoItem): django_model = ExampleDotCom Now we will create a crawl spider named example.py inside spiders directory:\nfrom scrapy.spiders import BaseSpider from example_bot.items import ExampleDotComItem class ExampleSpider(BaseSpider): name = \u0026#34;example\u0026#34; allowed_domains = [\u0026#34;example.com\u0026#34;] start_urls = [\u0026#39;http://www.example.com/\u0026#39;] def parse(self, response): title = response.xpath(\u0026#39;//title/text()\u0026#39;).extract()[0] description = response.xpath(\u0026#39;//body/div/p/text()\u0026#39;).extract()[0] return ExampleDotComItem(title=title, description=description) Now we shall create an pipeline class like this inside pipelines.py:\nclass ExPipeline(object): def process_item(self, item, spider): item.save() return item Now we need to update the settings.py with this:\nITEM_PIPELINES = { \u0026#39;example_bot.pipelines.ExPipeline\u0026#39;: 1000, } Project structure will be like this:\n├── django1.7+scrapy │ ├── example_bot │ │ ├── __init__.py │ │ ├── items.py │ │ ├── pipelines.py │ │ ├── settings.py │ │ └── spiders │ │ ├── __init__.py │ │ └── example.py │ └── scrapy.cfg └── example_project ├── manage.py ├── app │ ├── __init__.py │ ├── models.py │ ├── admin.py │ └── views.py └── example_project ├── __init__.py ├── settings.py └── urls.py Now we shall run the application using the following command:\nscrapy crawl example Now let us return to the running django application. If everything above is done correctly, then we shall see an object of ExampleDotCom class has been created like the below screenshot in this url http://localhost:8000/admin/app/exampledotcom/:\nScreenshots       Thats all. Up and running django 1.7 + Scrapy project.\nDrawbacks: Only implemented using django 1.7\nSource: https://github.com/ruddra/django1.7-scrapy1.0.3\nGot help and clues from this Stack Overflow link.\n","description":"Scrap data using Scrapy and store them in Database using Django."},{"date_published":"2015-09-17T21:29:09Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/make-a-blog-using-django-part-2/","url":"https://ruddra.com/make-a-blog-using-django-part-2/","title":"Make a Blog using Django Part 2","image":"https://ruddra.com/content/images/2020/04/typewritter2.jpg","tags":["Django","Python","View"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is now deprecated. Please follow the \u003ca href=\"https://docs.djangoproject.com/en/stable/intro/tutorial01/\"\u003eofficial tutorial\u003c/a\u003e for creating your first django application.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eFrom \u003ca href=\"/make-a-blog-using-django-part-1-2/\"\u003eprevious post\u003c/a\u003e, you have configured and ran django, also added admin site to the django.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo view the working source of this tutorial, check here at:\n\u003ca href=\"https://github.com/ruddra/myblog/\"\u003ehttps://github.com/ruddra/myblog/\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#create-entry-in-database\"\u003eCreate entry in database\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#templates\"\u003eTemplates\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#separating-views\"\u003eSeparating views\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"create-entry-in-database\"\u003eCreate entry in database\u003c/h2\u003e\n\u003cp\u003eNow click on the \u003cstrong\u003emyblog\u003c/strong\u003e section and click \u003ccode\u003eadd\u003c/code\u003e to add new blog.\nYou can create new tags using Tags section of the admin page or clicking the \u003ccode\u003e(+)\u003c/code\u003e button right beside the Tags section on the new blog creation page, marked with blue circle in the previous image. After successfully adding a new blog, you can see it in list view page.\u003c/p\u003e\n\u003cp\u003eCreating new tags is easy, just click on the \u003cstrong\u003eTags\u003c/strong\u003e section in the admin page and press \u003ccode\u003eadd tags\u003c/code\u003e button.\u003c/p\u003e\n\u003ch2 id=\"templates\"\u003eTemplates\u003c/h2\u003e\n\u003cp\u003eNow you have created new blogs and tags. Its time for showing them in templates.\u003c/p\u003e\n\u003cp\u003eFor making data visible in templates, you need to use views to send data to them. let’s use \u003ca href=\"https://docs.djangoproject.com/en/latest/topics/class-based-views/\"\u003eClass Based View(CBV)\u003c/a\u003e for that. \u003ca href=\"https://docs.djangoproject.com/en/latest/ref/class-based-views/generic-display/#listview\"\u003e\u003ccode\u003eListView\u003c/code\u003e\u003c/a\u003e is most appropriate for viewing all blogs in one page as it renders a page representing a list of objects. You can directly use this generic CBV in urls like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^admin/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurls\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;admin-site\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^$\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;blog_list.html\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog_list\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere, you need to create a template as well to view the data sent from this view:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;ul\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003eblog\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003eobject_list\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u0026lt;li\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eblog.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u0026lt;br/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u0026lt;p\u0026gt; \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eblog.body\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u0026lt;/p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSo now if you go to URL: 127.0.0.1:8000, you will see a list of Blogs in there.\u003c/p\u003e\n\u003cp\u003eVoila!! You can see the posts you are creating in admin site on this page.\u003c/p\u003e\n\u003ch2 id=\"separating-views\"\u003eSeparating views\u003c/h2\u003e\n\u003cp\u003eNow, for accessing each blog post separately, you can use \u003cstrong\u003eClass Based View (CBV)\u003c/strong\u003e for that. You can use \u003ca href=\"https://docs.djangoproject.com/en/latest/ref/class-based-views/generic-display/#detailview\"\u003e\u003ccode\u003eDetailView\u003c/code\u003e\u003c/a\u003e for viewing content of one myblog object. For that, you can directly use it in urls like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# ------------- Models ---------------\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emyblog.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# ------------- Generic Views --------\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views.generic.list\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views.generic.detail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDetailView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^admin/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurls\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;admin-site\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^$\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;blog_list.html\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog_list\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^details/(?P\u0026lt;pk\u0026gt;[0-9]+)/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDetailView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;blog_details.html\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;blog_details\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Why naming the urls? Check below for usage of named urls\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd update the template:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eobject.title\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/h2\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eobject.body\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;b\u0026gt;Tags:\u0026lt;/b\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e  \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003eobject.tags.all\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eitem\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;/p\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBlog details can visible to this url: 127.0.0.1:8000/details/1/ . There you should see the details of the Blog you have written before.\u003c/p\u003e\n\u003cp\u003eNow you can see all the posts and tags separately. Will do some tune-ups in next post. Cheers!!!\u003c/p\u003e\n","content":" This post is now deprecated. Please follow the official tutorial for creating your first django application.\n From previous post, you have configured and ran django, also added admin site to the django.\n To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog/\n Table of contents\u0026nbsp;  Create entry in database Templates Separating views    Create entry in database Now click on the myblog section and click add to add new blog. You can create new tags using Tags section of the admin page or clicking the (+) button right beside the Tags section on the new blog creation page, marked with blue circle in the previous image. After successfully adding a new blog, you can see it in list view page.\nCreating new tags is easy, just click on the Tags section in the admin page and press add tags button.\nTemplates Now you have created new blogs and tags. Its time for showing them in templates.\nFor making data visible in templates, you need to use views to send data to them. let’s use Class Based View(CBV) for that. ListView is most appropriate for viewing all blogs in one page as it renders a page representing a list of objects. You can directly use this generic CBV in urls like:\nurlpatterns = patterns(\u0026#39;\u0026#39;, url(r\u0026#39;^admin/\u0026#39;, include(admin.site.urls), name=\u0026#39;admin-site\u0026#39;), url(r\u0026#39;^$\u0026#39;, ListView.as_view(model = MyBlog, template_name = \u0026#39;blog_list.html\u0026#39;), name=\u0026#39;blog_list\u0026#39;), ) Here, you need to create a template as well to view the data sent from this view:\n\u0026lt;ul\u0026gt; {% for blog in object_list %}\u0026lt;li\u0026gt; {{ blog.title }}\u0026lt;br/\u0026gt; \u0026lt;p\u0026gt; {{ blog.body }}\u0026lt;/p\u0026gt; {% endfor %}\u0026lt;/ul\u0026gt; So now if you go to URL: 127.0.0.1:8000, you will see a list of Blogs in there.\nVoila!! You can see the posts you are creating in admin site on this page.\nSeparating views Now, for accessing each blog post separately, you can use Class Based View (CBV) for that. You can use DetailView for viewing content of one myblog object. For that, you can directly use it in urls like:\n# ------------- Models --------------- from myblog.models import Tag, MyBlog # ------------- Generic Views -------- from django.views.generic.list import ListView from django.views.generic.detail import DetailView urlpatterns = patterns(\u0026#39;\u0026#39;, url(r\u0026#39;^admin/\u0026#39;, include(admin.site.urls), name=\u0026#39;admin-site\u0026#39;), url(r\u0026#39;^$\u0026#39;, ListView.as_view(model = MyBlog, template_name = \u0026#39;blog_list.html\u0026#39;), name=\u0026#39;blog_list\u0026#39;), url(r\u0026#39;^details/(?P\u0026lt;pk\u0026gt;[0-9]+)/\u0026#39;, DetailView.as_view(model = MyBlog, template_name = \u0026#39;blog_details.html\u0026#39;), name=\u0026#39;blog_details\u0026#39;), # Why naming the urls? Check below for usage of named urls ) And update the template:\n\u0026lt;h2\u0026gt;{{ object.title }}\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;{{ object.body }}\u0026lt;/p\u0026gt; \u0026lt;b\u0026gt;Tags:\u0026lt;/b\u0026gt; \u0026lt;p\u0026gt; {% for item in object.tags.all %}{{ item }}{% endfor %}\u0026lt;/p\u0026gt; Blog details can visible to this url: 127.0.0.1:8000/details/1/ . There you should see the details of the Blog you have written before.\nNow you can see all the posts and tags separately. Will do some tune-ups in next post. Cheers!!!\n","description":"This post is now deprecated. Please follow the official tutorial for creating your first django application.\n From previous post, you have configured and ran django, also added admin site to the django.\n To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog/\n Table of contents\u0026nbsp;  Create entry in database Templates Separating views    Create entry in database Now click on the myblog section and click add to add new blog."},{"date_published":"2015-09-17T21:29:08Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/make-a-blog-using-django-part-1/","url":"https://ruddra.com/make-a-blog-using-django-part-1/","title":"Make a Blog using Django Part 1","image":"https://ruddra.com/content/images/2020/03/blog.jpg","tags":["Django","Python","Models"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is now deprecated. Please follow the \u003ca href=\"https://docs.djangoproject.com/en/stable/intro/tutorial01/\"\u003eofficial tutorial\u003c/a\u003e for creating your first django application.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u0026ldquo;Making a blog using django\u0026rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django\u0026rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eTo view the working source of this tutorial, check here at: \u003ca href=\"https://github.com/ruddra/myblog\"\u003ehttps://github.com/ruddra/myblog\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#requirements\"\u003eRequirements\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#intro-on-django-framework\"\u003eintro on django framework\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#project-setup\"\u003eProject setup\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-models\"\u003eCreate models\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#database-migration-and-more\"\u003eDatabase migration and more\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#admin-site\"\u003eAdmin site\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\n\u003ch2 id=\"requirements\"\u003eRequirements\u003c/h2\u003e\n\u003cp\u003eBefore jumping to the main event, see if you have these installed in your pc:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003ePython 3 installed in the computer. (Or python 2.7 if you prefer)\u003c/li\u003e\n\u003cli\u003eDjango 1.7 installed in the computer.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"intro-on-django-framework\"\u003eintro on django framework\u003c/h2\u003e\n\u003cp\u003eDjango appears to be a MVC framework, but instead of using the name \u0026lsquo;Controller\u0026rsquo;, we call it as \u0026lsquo;View\u0026rsquo; and \u0026lsquo;View\u0026rsquo; as \u0026lsquo;Template\u0026rsquo;, Also Django is not a CMS. It’s a Web framework; it’s a programming tool that lets you build Web sites. More information can be found in \u003ca href=\"https://docs.djangoproject.com/en/dev/faq/general\"\u003edjango\u0026rsquo; documentation\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eSo as we stated before, django appears to be a MVC framework. MVC is a framework for building web applications using a MVC (Model View Controller) design:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe Model represents the application core (for instance a list of database records).\u003c/li\u003e\n\u003cli\u003eThe View displays the data (the database records).(Here it is called \u0026ldquo;Template\u0026rdquo;)\u003c/li\u003e\n\u003cli\u003eThe Controller handles the input (to the database records).(Here it is called \u0026ldquo;View\u0026rdquo;)\n**(copied from here \u003ca href=\"http://www.w3schools.com/aspnet/mvc_intro.asp\"\u003ehttp://www.w3schools.com/aspnet/mvc_intro.asp\u003c/a\u003e)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eDjango manipulates data in the database using ORM(Object Relational Model). ORM saves you a lot of time by making the structure of the database, running CRUD(Create Read Update Delete) operations etc. Django ORM builds the structure of the database using the structure of the model. It means, the way you define the model, the way your database structure will be. A model is the single, definitive source of data about your data. It contains the essential fields and behaviors of the data you’re storing. Generally, each model maps to a single \u003ca href=\"https://docs.djangoproject.com/en/dev/topics/db/\"\u003edatabase table\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"project-setup\"\u003eProject setup\u003c/h2\u003e\n\u003cp\u003eNow let’s start a project named \u003cstrong\u003emyproject\u003c/strong\u003e in desired directory using this command: \u003ccode\u003edjango-admin.py startproject myproject\u003c/code\u003e. Then, create an app inside the myproject directory using \u003ccode\u003epython manage.py startapp myblog\u003c/code\u003e. So the structure should look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003emyproject/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    manage.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    myproject/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        settings.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        urls.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        wsgi.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    myblog/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        admin.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        migrations/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            __init__.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        models.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        tests.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        views.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis reusable app is going to be used for making the blog. More about \u003ca href=\"https://docs.djangoproject.com/en/latest/intro/reusable-apps/\"\u003ereusable apps\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAppend \u0026lsquo;myblog\u0026rsquo; to \u003cstrong\u003emyproject\u0026gt;myproject\u0026gt;settings.py\u003c/strong\u003e\u0026rsquo;s INSTALLED_APP like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;myblog\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-models\"\u003eCreate models\u003c/h2\u003e\n\u003cp\u003eNow we start by making a blog by making models. In this project, we are going to display Title, Body, Tags in each post. So for each content in a post, database\u0026rsquo;s table is going to need a field. So in our model, we are going to add those fields to \u003cstrong\u003emyproject\u0026gt;myblog\u0026gt;models.py\u003c/strong\u003e like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edescription\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edefault\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__str__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etitle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e20000\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etags\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eManyToManyField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__str__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etitle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe reason for making these structure is that:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003etitle:\u003c/strong\u003e It is a \u003ca href=\"https://docs.djangoproject.com/en/1.7/ref/models/fields/#django.db.models.CharField\"\u003e\u003ccode\u003eCharField\u003c/code\u003e\u003c/a\u003e(Character Field) which can take any kind of input.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ebody:\u003c/strong\u003e It is a \u003ccode\u003eCharField\u003c/code\u003e which can take any kind of input.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003etags:\u003c/strong\u003e A \u003ca href=\"https://docs.djangoproject.com/en/1.7/ref/models/fields/#django.db.models.ManyToManyField\"\u003e\u003ccode\u003eManyToManyField\u003c/code\u003e\u003c/a\u003e relation with Model Tag, because a blog can be related to multiple tags similarly a tag can be used to different blogs, hence many to many relation.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"database-migration-and-more\"\u003eDatabase migration and more\u003c/h2\u003e\n\u003cp\u003eThe model class \u003cstrong\u003eTag\u003c/strong\u003e is going to be used for making/displaying tags. Now we have made model for blog, need to use ORM for making Database structure and add aditional data(Why migration is necessary? See \u003ca href=\"https://docs.djangoproject.com/en/latest/topics/migrations/\"\u003ethe documentation\u003c/a\u003e. So for that, go to \u003cstrong\u003emyproject\u003c/strong\u003e directory where manage.py resides and run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$python\u003c/span\u003e manage.py makemigrations\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$python\u003c/span\u003e manage.py migrate\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$python\u003c/span\u003e manage.py createsuperuser --username\u003cspan class=\"o\"\u003e=\u003c/span\u003eadmin --email\u003cspan class=\"o\"\u003e=\u003c/span\u003eme@ruddra.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#it will ask for setting a password\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$python\u003c/span\u003e manage.py runserver\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# for running the server\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe third command for making a superuser in the system. The fourth command will run your project in this url: 127.0.0.1:8000(if you don\u0026rsquo;t provide any specific ip/port). Or you can run like this \u003ccode\u003epython manage.py runserver 0.0.0.0:8000\u003c/code\u003e and it will make your project run in 0.0.0.0:8000 and this is accessible from browser. The webpage will look like this when the project runs successfully:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"557\" height=\"328\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 557 328'%3E%3C/svg%3E\"\n        data-src=\"/content/git/myblog/it_worked_hu9848e48fcfb4675df7dc3e662b8e3437_37866_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/myblog/it_worked_hu9848e48fcfb4675df7dc3e662b8e3437_37866_500x0_resize_q75_lanczos.jpg 500w'\n        alt='it worked' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/myblog/it_worked.jpg\" width=\"557\" height=\"328\" alt='it worked'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eSo you have successfully ran the django site.\u003c/p\u003e\n\u003ch2 id=\"admin-site\"\u003eAdmin site\u003c/h2\u003e\n\u003cp\u003eNow the database has been made and superuser has been created, so we go the next step, creating blogs. We are going to use django\u0026rsquo;s one of the most powerful and popular feature, django\u0026rsquo;s admin site. For making admin site visible and accessible, you need to add this lines to your urls.py (\u003cstrong\u003emyproject\u0026gt;myproject\u0026gt;urls.py\u003c/strong\u003e):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf.urls\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eautodiscover\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#this line is for making model visible in admin site\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^admin/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eurls\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;admin-site\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis lines will let you access the django\u0026rsquo;s admin site using this url: 127.0.0.1:8000/admin (if you are running this project in localhost).\u003c/p\u003e\n\u003cp\u003eNow we need to modify the \u003cstrong\u003eadmin.py\u003c/strong\u003e in \u003cem\u003emyblog\u003c/em\u003e\u0026rsquo;s directory to register the app to admin site.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Location myproject\u0026gt;myblog\u0026gt;admin.py\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003emyblog.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eTag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMyBlog\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eadmin\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esite\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eregister\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTag\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow your admin site will look like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"981\" height=\"327\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 981 327'%3E%3C/svg%3E\"\n        data-src=\"/content/git/myblog/admin_init_hucba21c94169cdb2e670f307586d32e71_24808_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/myblog/admin_init_hucba21c94169cdb2e670f307586d32e71_24808_500x0_resize_q75_lanczos.jpg 500w,/content/git/myblog/admin_init_hucba21c94169cdb2e670f307586d32e71_24808_600x0_resize_q75_lanczos.jpg 600w,/content/git/myblog/admin_init_hucba21c94169cdb2e670f307586d32e71_24808_720x0_resize_q75_lanczos.jpg 720w'\n        alt='admin init' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/myblog/admin_init.jpg\" width=\"981\" height=\"327\" alt='admin init'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eSo up-to admin site, the making of blog is complete. Next part will be provided in \u003ca href=\"/make-a-blog-using-django-part-2/\"\u003enext post\u003c/a\u003e. Cheers!!\u003c/p\u003e\n","content":" This post is now deprecated. Please follow the official tutorial for creating your first django application.\n \u0026ldquo;Making a blog using django\u0026rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django\u0026rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use.\n To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog\n Table of contents\u0026nbsp;  Requirements intro on django framework Project setup Create models Database migration and more Admin site In conclusion    Requirements Before jumping to the main event, see if you have these installed in your pc:\n Python 3 installed in the computer. (Or python 2.7 if you prefer) Django 1.7 installed in the computer.  intro on django framework Django appears to be a MVC framework, but instead of using the name \u0026lsquo;Controller\u0026rsquo;, we call it as \u0026lsquo;View\u0026rsquo; and \u0026lsquo;View\u0026rsquo; as \u0026lsquo;Template\u0026rsquo;, Also Django is not a CMS. It’s a Web framework; it’s a programming tool that lets you build Web sites. More information can be found in django\u0026rsquo; documentation.\nSo as we stated before, django appears to be a MVC framework. MVC is a framework for building web applications using a MVC (Model View Controller) design:\n The Model represents the application core (for instance a list of database records). The View displays the data (the database records).(Here it is called \u0026ldquo;Template\u0026rdquo;) The Controller handles the input (to the database records).(Here it is called \u0026ldquo;View\u0026rdquo;) **(copied from here http://www.w3schools.com/aspnet/mvc_intro.asp)  Django manipulates data in the database using ORM(Object Relational Model). ORM saves you a lot of time by making the structure of the database, running CRUD(Create Read Update Delete) operations etc. Django ORM builds the structure of the database using the structure of the model. It means, the way you define the model, the way your database structure will be. A model is the single, definitive source of data about your data. It contains the essential fields and behaviors of the data you’re storing. Generally, each model maps to a single database table.\nProject setup Now let’s start a project named myproject in desired directory using this command: django-admin.py startproject myproject. Then, create an app inside the myproject directory using python manage.py startapp myblog. So the structure should look like this:\nmyproject/ manage.py myproject/ __init__.py settings.py urls.py wsgi.py myblog/ __init__.py admin.py migrations/ __init__.py models.py tests.py views.py This reusable app is going to be used for making the blog. More about reusable apps.\nAppend \u0026lsquo;myblog\u0026rsquo; to myproject\u0026gt;myproject\u0026gt;settings.py\u0026rsquo;s INSTALLED_APP like:\nINSTALLED_APPS += ( \u0026#39;myblog\u0026#39;, ) Create models Now we start by making a blog by making models. In this project, we are going to display Title, Body, Tags in each post. So for each content in a post, database\u0026rsquo;s table is going to need a field. So in our model, we are going to add those fields to myproject\u0026gt;myblog\u0026gt;models.py like:\nfrom django.db import models class Tag(models.Model): name = models.CharField(max_length=255) description = models.CharField(max_length=255, null=True, default=\u0026#39;\u0026#39;) def __str__(self): return self.name class MyBlog(models.Model): title = models.CharField(max_length=255) body = models.CharField(max_length=20000) tags = models.ManyToManyField(Tag) def __str__(self): return self.title The reason for making these structure is that:\n  title: It is a CharField(Character Field) which can take any kind of input.\n  body: It is a CharField which can take any kind of input.\n  tags: A ManyToManyField relation with Model Tag, because a blog can be related to multiple tags similarly a tag can be used to different blogs, hence many to many relation.\n  Database migration and more The model class Tag is going to be used for making/displaying tags. Now we have made model for blog, need to use ORM for making Database structure and add aditional data(Why migration is necessary? See the documentation. So for that, go to myproject directory where manage.py resides and run:\n$python manage.py makemigrations $python manage.py migrate $python manage.py createsuperuser --username=admin --email=me@ruddra.com #it will ask for setting a password $python manage.py runserver # for running the server The third command for making a superuser in the system. The fourth command will run your project in this url: 127.0.0.1:8000(if you don\u0026rsquo;t provide any specific ip/port). Or you can run like this python manage.py runserver 0.0.0.0:8000 and it will make your project run in 0.0.0.0:8000 and this is accessible from browser. The webpage will look like this when the project runs successfully:\n   So you have successfully ran the django site.\nAdmin site Now the database has been made and superuser has been created, so we go the next step, creating blogs. We are going to use django\u0026rsquo;s one of the most powerful and popular feature, django\u0026rsquo;s admin site. For making admin site visible and accessible, you need to add this lines to your urls.py (myproject\u0026gt;myproject\u0026gt;urls.py):\nfrom django.conf.urls import patterns, include, url from django.contrib import admin admin.autodiscover() #this line is for making model visible in admin site urlpatterns = patterns(\u0026#39;\u0026#39;, url(r\u0026#39;^admin/\u0026#39;, include(admin.site.urls), name=\u0026#39;admin-site\u0026#39;), ) This lines will let you access the django\u0026rsquo;s admin site using this url: 127.0.0.1:8000/admin (if you are running this project in localhost).\nNow we need to modify the admin.py in myblog\u0026rsquo;s directory to register the app to admin site.\n# Location myproject\u0026gt;myblog\u0026gt;admin.py from django.contrib import admin from django import forms from myblog.models import MyBlog, Tag admin.site.register(MyBlog) admin.site.register(Tag) Now your admin site will look like this:\n   In conclusion So up-to admin site, the making of blog is complete. Next part will be provided in next post. Cheers!!\n","description":"This post is now deprecated. Please follow the official tutorial for creating your first django application.\n \u0026ldquo;Making a blog using django\u0026rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django\u0026rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use."},{"date_published":"2015-09-17T21:15:04Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/change-column-headers-django-tables2/","url":"https://ruddra.com/change-column-headers-django-tables2/","title":"Change Column Headers in Django Tables 2","image":"https://ruddra.com/content/images/2020/03/tables.jpg","tags":["Django","Django-Tables2"],"content_html":"\u003cp\u003e\u003ca href=\"https://django-tables2.readthedocs.org/en/latest/\"\u003eDjango Tables2\u003c/a\u003e is a package which displays table directly from queryset. It shows column header based on object\u0026rsquo;s attribute name. But if someone wants to override it, how can he/she do that? Here is a easy solution.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#model-class\"\u003eModel class\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#table-class\"\u003eTable class\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#view-class\"\u003eView class\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"model-class\"\u003eModel class\u003c/h2\u003e\n\u003cp\u003eSuppose we have a model class like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSomeModel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esomevalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd we want to show table column \u003cstrong\u003esomevalue\u003c/strong\u003e to \u003cstrong\u003eoverridenvalue\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"table-class\"\u003eTable class\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSomeTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etables\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTable\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoverriden_value\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebase_columns\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;somevalue\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003everbose_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eoverriden_value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMeta\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSomeModel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003efields\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__all__\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd the Class Based View:\u003c/p\u003e\n\u003ch2 id=\"view-class\"\u003eView class\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSomeView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_context_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003econtext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_context_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;sometable\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSomeTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSomeModel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eoverriden_value\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;overriden value\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd template should render that table like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eload\u003c/span\u003e \u003cspan class=\"nv\"\u003erender_table\u003c/span\u003e \u003cspan class=\"nv\"\u003efrom\u003c/span\u003e \u003cspan class=\"nv\"\u003edjango_tables2\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003erender_table\u003c/span\u003e \u003cspan class=\"nv\"\u003esometable\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it, we shall be able to see our override table column header.\u003c/p\u003e\n","content":"Django Tables2 is a package which displays table directly from queryset. It shows column header based on object\u0026rsquo;s attribute name. But if someone wants to override it, how can he/she do that? Here is a easy solution.Table of contents\u0026nbsp;  Model class Table class View class   \nModel class Suppose we have a model class like this:\nclass SomeModel(models.Model): somevalue = models.CharField() And we want to show table column somevalue to overridenvalue\nTable class class SomeTable(tables.Table): def __init__(self, *args, overriden_value=\u0026#34;\u0026#34;,**kwargs): super().__init__(*args, **kwargs) self.base_columns[\u0026#39;somevalue\u0026#39;].verbose_name = overriden_value class Meta: model = models.SomeModel fields = \u0026#39;__all__\u0026#39; And the Class Based View:\nView class class SomeView(ListView): def get_context_data(self, **kwargs): context = super().get_context_data(**kwargs) context[\u0026#39;sometable\u0026#39;] = SomeTable(SomeModel.objects.all(), overriden_value=\u0026#34;overriden value\u0026#34;) return context And template should render that table like this:\n{% load render_table from django_tables2 %}{% render_table sometable %}Thats it, we shall be able to see our override table column header.\n","description":"A simple hack to change column headers in Django Tables 2."},{"date_published":"2015-09-17T21:15:04Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/dynamically-constructing-filters-based-on-string-input-using-sqlalchemy/","url":"https://ruddra.com/dynamically-constructing-filters-based-on-string-input-using-sqlalchemy/","title":"Dynamically construct filters based on string input using SQLAlchemy","image":"https://ruddra.com/content/images/2020/03/alchemy.jpg","tags":["Python","SQL Alchemy"],"content_html":"\u003cp\u003eHere I am going to write a dynamic filter. This filter is made for python 3. It will take query or model class and filter condition as input, It will return filtered query based on those filter condition.\u003c/p\u003e\n\u003cp\u003eThis is constructed using this \u003ca href=\"http://stackoverflow.com/questions/14845196/dynamically-constructing-filters-in-sqlalchemy\"\u003eStack Overflow answer\u003c/a\u003e.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#function\"\u003eFunction\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#usage\"\u003eUsage\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"function\"\u003eFunction\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003esqlalchemy\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_engine\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003esqlalchemy.orm\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esessionmaker\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eModelHelper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eobject\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003e_session\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nd\"\u003e@property\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_session\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nd\"\u003e@session\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esession\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_session\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esession\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_model_class\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_session\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        Override this method to assign customized session or you can add your\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        own session by DynamicFilter(m_class, filter_cond).session = session\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        Returns:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e            session object\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e        \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_session\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_session\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esome_engine\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecreate_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;postgresql://scott:tiger@localhost/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eSession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esessionmaker\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebind\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003esome_engine\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eSession\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDynamicFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eModelHelper\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"fm\"\u003e__init__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_query\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        Returns query with all the objects\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        :return:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esession\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter_query\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        Return filtered queryset based on condition.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        :param query: takes query\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        :param filter_condition: Its a list, ie: [(key,operator,value)]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        operator list:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            eq for ==\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            lt for \u0026lt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            ge for \u0026gt;=\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            in for in_\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            like for like\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e            value could be list or a string\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        :return: queryset\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e        \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_query\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_model_class\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# returns the query\u0026#39;s Model\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eraw\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eraw\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eValueError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Invalid filter: \u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Invalid filter column: \u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eop\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;in\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eisinstance\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003efilt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ein_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003efilt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ein_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eattr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"k\"\u003elambda\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003ehasattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e_\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;__\u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e__\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e))[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eop\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"ne\"\u003eIndexError\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"ne\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Invalid filter operator: \u003c/span\u003e\u003cspan class=\"si\"\u003e%s\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;null\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003efilt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003egetattr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecolumn\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003equery\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003equery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ereturn_query\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_query\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_query\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003e_filter_condition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;has_attribute\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;eq\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;attribute_value\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edynamic_filtered_query_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDynamicFilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emodel_class\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003efilter_condition\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003e_filter_condition\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edynamic_filtered_query\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edynamic_filtered_query_class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ereturn_query\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u0026ldquo;model_class\u0026rdquo; is the model class you want to run the filter upon.\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;filter_condition\u0026rdquo; the conditon you want to implement here. This is based on the following operator list:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e    eq for ==\n    lt for \u0026lt;\n    ge for \u0026gt;=\n    in for in_\n    like for like\n    value could be list or a string\n\u003c/code\u003e\u003c/pre\u003e\n","content":"Here I am going to write a dynamic filter. This filter is made for python 3. It will take query or model class and filter condition as input, It will return filtered query based on those filter condition.\nThis is constructed using this Stack Overflow answer.Table of contents\u0026nbsp;  Function Usage   \nFunction from sqlalchemy import create_engine from sqlalchemy.orm import sessionmaker class ModelHelper(object): query = None model_class = None _session = None @property def session(self): return self.get_session() @session.setter def session(self, session=None): self._session = session def get_model_class(self): return self.model_class def get_session(self): \u0026#34;\u0026#34;\u0026#34; Override this method to assign customized session or you can add your own session by DynamicFilter(m_class, filter_cond).session = session Returns: session object \u0026#34;\u0026#34;\u0026#34; if self._session: return self._session some_engine = create_engine(\u0026#39;postgresql://scott:tiger@localhost/\u0026#39;) Session = sessionmaker(bind=some_engine) return Session() class DynamicFilter(ModelHelper): def __init__(self, model_class, filter_condition, query=None): super().__init__(*args, **kwargs) self.query = query self.model_class = model_class self.filter_condition = filter_condition def get_query(self): \u0026#39;\u0026#39;\u0026#39; Returns query with all the objects :return: \u0026#39;\u0026#39;\u0026#39; if not self.query: self.query = self.session.query(self.model_class) return self.query def filter_query(self, query, filter_condition): \u0026#39;\u0026#39;\u0026#39; Return filtered queryset based on condition. :param query: takes query :param filter_condition: Its a list, ie: [(key,operator,value)] operator list: eq for == lt for \u0026lt; ge for \u0026gt;= in for in_ like for like value could be list or a string :return: queryset \u0026#39;\u0026#39;\u0026#39; if query is None: query = self.get_query() model_class = self.get_model_class() # returns the query\u0026#39;s Model for raw in filter_condition: try: key, op, value = raw except ValueError: raise Exception(\u0026#39;Invalid filter: %s\u0026#39; % raw) column = getattr(model_class, key, None) if not column: raise Exception(\u0026#39;Invalid filter column: %s\u0026#39; % key) if op == \u0026#39;in\u0026#39;: if isinstance(value, list): filt = column.in_(value) else: filt = column.in_(value.split(\u0026#39;,\u0026#39;)) else: try: attr = list(filter( lambda e: hasattr(column, e % op), [\u0026#39;%s\u0026#39;, \u0026#39;%s_\u0026#39;, \u0026#39;__%s__\u0026#39;] ))[0] % op except IndexError: raise Exception(\u0026#39;Invalid filter operator: %s\u0026#39; % op) if value == \u0026#39;null\u0026#39;: value = None filt = getattr(column, attr)(value) query = query.filter(filt) return query def return_query(self): return self.filter_query(self.get_query(), self.filter_condition) Usage _filter_condition = [(\u0026#39;has_attribute\u0026#39;, \u0026#39;eq\u0026#39;, \u0026#39;attribute_value\u0026#39;)] dynamic_filtered_query_class = DynamicFilter( model_class=models.user.User, filter_condition=_filter_condition, query=None, ) dynamic_filtered_query = dynamic_filtered_query_class.return_query() \u0026ldquo;model_class\u0026rdquo; is the model class you want to run the filter upon.\n\u0026ldquo;filter_condition\u0026rdquo; the conditon you want to implement here. This is based on the following operator list:\n eq for == lt for \u0026lt; ge for \u0026gt;= in for in_ like for like value could be list or a string  ","description":"Building a filter which takes model class/query \u0026 conditions as input, return a filtered query."},{"date_published":"2015-09-17T21:11:18Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/how-to-configure-django-tornado-in-pycharm-community-edition/","url":"https://ruddra.com/how-to-configure-django-tornado-in-pycharm-community-edition/","title":"How to configure Django and Tornado in PyCharm Community Edition","image":"https://ruddra.com/content/images/2020/04/tornado.jpg","tags":["Django","Tornado","Python","IDE"],"content_html":"\u003cp\u003eI think, Pycharm is \u003cstrong\u003eTHE\u003c/strong\u003e best IDE for developing python. But unfortunately, the professional edition is not free. But community edition is good enough for doing debugging, integrating GIT etc.\u003c/p\u003e\n\u003cp\u003eNormally its easy to use the community edition for django and tornado\u0026rsquo;s debugging/running if you know how to configure.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#django-configuration\"\u003eDjango configuration\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#tornado-configuration\"\u003eTornado configuration\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#pycharm-2016\"\u003ePyCharm 2016\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"django-configuration\"\u003eDjango configuration\u003c/h2\u003e\n\u003cp\u003eFor django\u0026rsquo;s configuration, there is 5 easy steps:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFirst:\u003c/strong\u003e Go to edit configuration and click on it(like the below pictures).\u003c!-- raw HTML omitted --\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1432\" height=\"776\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1432 776'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/11_hu62d65dc4b788ac0a1c28272d2a83aa02_53106_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/11_hu62d65dc4b788ac0a1c28272d2a83aa02_53106_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/11_hu62d65dc4b788ac0a1c28272d2a83aa02_53106_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/11_hu62d65dc4b788ac0a1c28272d2a83aa02_53106_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/11.jpg\" width=\"1432\" height=\"776\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1425\" height=\"757\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1425 757'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/22_hu14af28e1e75142b2e52d589598690759_49123_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/22_hu14af28e1e75142b2e52d589598690759_49123_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/22_hu14af28e1e75142b2e52d589598690759_49123_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/22_hu14af28e1e75142b2e52d589598690759_49123_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/22.jpg\" width=\"1425\" height=\"757\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eSecond:\u003c/strong\u003e Click on the \u003ccode\u003e(+)\u003c/code\u003e mark in top-left corner and add python configuration.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1063\" height=\"722\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1063 722'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/33_hu11bd0249a5b7664d24bc8a3e68281421_32799_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/33_hu11bd0249a5b7664d24bc8a3e68281421_32799_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/33_hu11bd0249a5b7664d24bc8a3e68281421_32799_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/33_hu11bd0249a5b7664d24bc8a3e68281421_32799_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/33.jpg\" width=\"1063\" height=\"722\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"876\" height=\"702\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 876 702'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/66_hu84e4dd6ea5a82c8645190a9bd81c648f_50720_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/66_hu84e4dd6ea5a82c8645190a9bd81c648f_50720_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/66_hu84e4dd6ea5a82c8645190a9bd81c648f_50720_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/66_hu84e4dd6ea5a82c8645190a9bd81c648f_50720_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/66.jpg\" width=\"876\" height=\"702\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eThird:\u003c/strong\u003e Click on the \u003cstrong\u003eScript\u003c/strong\u003e, and for django select the \u003cstrong\u003emanage.py\u003c/strong\u003e which resides on the project directory.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1085\" height=\"722\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1085 722'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/44_hu21182830db7e75ad4b3b52891246da45_79778_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/44_hu21182830db7e75ad4b3b52891246da45_79778_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/44_hu21182830db7e75ad4b3b52891246da45_79778_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/44_hu21182830db7e75ad4b3b52891246da45_79778_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/44.jpg\" width=\"1085\" height=\"722\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eFourth:\u003c/strong\u003e Add \u003ccode\u003erunserver\u003c/code\u003e as Scripts parameter or any other django commands.\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1280\" height=\"720\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1280 720'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/55_hu75d319d05796acae81c50c102f6c60af_71543_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/55_hu75d319d05796acae81c50c102f6c60af_71543_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/55_hu75d319d05796acae81c50c102f6c60af_71543_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/55_hu75d319d05796acae81c50c102f6c60af_71543_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/55.jpg\" width=\"1280\" height=\"720\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003e\u003cstrong\u003eFifth:\u003c/strong\u003e Click Apply and if your python interpreter is correctly configured, then clicking on the run command should run the project, and debugging will work as well.\u003c!-- raw HTML omitted --\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1248\" height=\"702\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1248 702'%3E%3C/svg%3E\"\n        data-src=\"/content/git/blog_pycharm_conf/77_hue5a23ead0b9b7f806ea24509257934ad_43614_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/blog_pycharm_conf/77_hue5a23ead0b9b7f806ea24509257934ad_43614_500x0_resize_q75_lanczos.jpg 500w,/content/git/blog_pycharm_conf/77_hue5a23ead0b9b7f806ea24509257934ad_43614_600x0_resize_q75_lanczos.jpg 600w,/content/git/blog_pycharm_conf/77_hue5a23ead0b9b7f806ea24509257934ad_43614_720x0_resize_q75_lanczos.jpg 720w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/blog_pycharm_conf/77.jpg\" width=\"1248\" height=\"702\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"tornado-configuration\"\u003eTornado configuration\u003c/h2\u003e\n\u003cp\u003eThere is only 1 Step:\u003c/p\u003e\n\u003cp\u003eJust follow the first and second step from above configuration and click the *.py file you want to run for tornado project in the \u003cstrong\u003eScript\u003c/strong\u003e, i.e. this file should contain lines like below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;__main__\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eapplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8888\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etornado\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eioloop\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIOLoop\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd save and run.\u003c/p\u003e\n\u003ch3 id=\"pycharm-2016\"\u003ePyCharm 2016\u003c/h3\u003e\n\u003cp\u003eIn 2016 edition, to add an existing virtual environment to the list of available interpreters\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eIn the Project Interpreter page, click \u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"32\" height=\"34\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 34'%3E%3C/svg%3E\"\n        data-src=\"/content/git/E7nvm_huab6eb01bc2f1649b9c33cd30df009715_901_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/E7nvm_huab6eb01bc2f1649b9c33cd30df009715_901_500x0_resize_q75_lanczos.jpg 500w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/E7nvm.jpg\" width=\"32\" height=\"34\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e icon.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the drop-down list, choose \u003cstrong\u003eAdd local\u003c/strong\u003e.\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"254\" height=\"266\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 254 266'%3E%3C/svg%3E\"\n        data-src=\"/content/git/I226A_hu1a33a2d326e6d1e02db972bf33ab274e_11154_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/I226A_hu1a33a2d326e6d1e02db972bf33ab274e_11154_500x0_resize_q75_lanczos.jpg 500w'\n        alt='pycharm' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/I226A.jpg\" width=\"254\" height=\"266\" alt='pycharm'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the Select Python Interpreter dialog box that opens, choose the desired Python executable, located inside the virtual environment folder, and click OK.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eGo to \u003ca href=\"https://www.jetbrains.com/help/pycharm/2016.1/adding-existing-virtual-environment.html\"\u003eJetbrain\u0026rsquo;s documentation\u003c/a\u003e for more information.\u003c/p\u003e\n","content":"I think, Pycharm is THE best IDE for developing python. But unfortunately, the professional edition is not free. But community edition is good enough for doing debugging, integrating GIT etc.\nNormally its easy to use the community edition for django and tornado\u0026rsquo;s debugging/running if you know how to configure.Table of contents\u0026nbsp;  Django configuration Tornado configuration  PyCharm 2016     \nDjango configuration For django\u0026rsquo;s configuration, there is 5 easy steps:\nFirst: Go to edit configuration and click on it(like the below pictures).  \n   Second: Click on the (+) mark in top-left corner and add python configuration.   \n   Third: Click on the Script, and for django select the manage.py which resides on the project directory.\n   Fourth: Add runserver as Scripts parameter or any other django commands.\n   Fifth: Click Apply and if your python interpreter is correctly configured, then clicking on the run command should run the project, and debugging will work as well.  \nTornado configuration There is only 1 Step:\nJust follow the first and second step from above configuration and click the *.py file you want to run for tornado project in the Script, i.e. this file should contain lines like below:\nif __name__ == \u0026#34;__main__\u0026#34;: application.listen(8888) tornado.ioloop.IOLoop.current().start() And save and run.\nPyCharm 2016 In 2016 edition, to add an existing virtual environment to the list of available interpreters\n  In the Project Interpreter page, click    icon.\n  In the drop-down list, choose Add local.   \n  In the Select Python Interpreter dialog box that opens, choose the desired Python executable, located inside the virtual environment folder, and click OK.\n  Go to Jetbrain\u0026rsquo;s documentation for more information.\n","description":"I think, Pycharm is THE best IDE for developing python. But unfortunately, the professional edition is not free. But community edition is good enough for doing debugging, integrating GIT etc.\nNormally its easy to use the community edition for django and tornado\u0026rsquo;s debugging/running if you know how to configure.Table of contents\u0026nbsp;  Django configuration Tornado configuration  PyCharm 2016"},{"date_published":"2015-09-17T20:56:54Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/some-useful-tools-function/","url":"https://ruddra.com/some-useful-tools-function/","title":"Some Useful Tools/Function for Django","image":"https://ruddra.com/content/images/2020/04/tool.jpg","tags":["Django","Python"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated as its based on Django 1.6 mostly.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eI am going to share some useful \u003cstrong\u003eDjango\u003c/strong\u003e tools/functions which are very useful(were for me atleast) to get things done.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#return-any-model-class-and-its-properties\"\u003eReturn any model class and its properties\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#distance-calculator\"\u003eDistance calculator\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#dynamic-relational-operations\"\u003eDynamic relational operations\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#get-week-list\"\u003eGet week list\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#get-month-list\"\u003eGet month list\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"return-any-model-class-and-its-properties\"\u003eReturn any model class and its properties\u003c/h2\u003e\n\u003cp\u003eThis method will return any model class if you have the name of the class.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_model_description\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereturn_property_list\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_models\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einclude_auto_created\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003emodel_name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ereturn_property_list\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget_trigger_properties\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor usage, let us think of an example. Let us think, we have a class name \u0026lsquo;X\u0026rsquo;, we will get the class instance using it like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eusefultools\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_model_descriptor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emodel_x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_model_descriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#will get class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emodel_x_objects\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_model_descriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#will get all the objects of this class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd for its property:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eusefultools\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eget_model_descriptor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emodel_x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_model_descriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodel_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;X\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereturn_property_list\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#will get a list of properties like [\u0026#39;a_property\u0026#39;,\u0026#39;b_property\u0026#39;]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"distance-calculator\"\u003eDistance calculator\u003c/h2\u003e\n\u003cp\u003eIf you input latitude and longitude of two places, this function will return the distance in between them. Got help from here: \u003ca href=\"http://code.activestate.com/recipes/576779-calculating-distance-between-two-geographic-points/\"\u003ehttp://code.activestate.com/recipes/576779-calculating-distance-between-two-geographic-points/\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003emath\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edistance_calculator\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elat1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elong1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elat2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elong2\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003elat1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elong1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elat2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elong2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elat1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elong1\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elat2\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elong2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edegrees_to_radians\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epi\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mf\"\u003e180.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ephi1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e90.0\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elat1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edegrees_to_radians\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ephi2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e90.0\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003elat2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edegrees_to_radians\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etheta1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elong1\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edegrees_to_radians\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etheta2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elong2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edegrees_to_radians\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ecos\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ephi1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ephi2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etheta1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003etheta2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ephi1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ephi2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003earc\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eacos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"n\"\u003ecos\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003edistance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earc\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mf\"\u003e6378.1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003edistance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will return the distance in KM.\u003c/p\u003e\n\u003ch2 id=\"dynamic-relational-operations\"\u003eDynamic relational operations\u003c/h2\u003e\n\u003cp\u003eSuppose we have a sentence like: \u003ccode\u003e'5 is greater than 9'\u003c/code\u003e and check if its true. We could use \u003ccode\u003eeval\u003c/code\u003e to dynamically converty string to python but its highly not recommended. So I tried like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecalculate_relational_operation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elhs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eget_type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elhs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"vm\"\u003e__name__\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eget_type\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;str\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003erhs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eget_type\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;float\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003erhs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003efloat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eget_type\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;int\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003erhs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;==\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;!=\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026gt;=\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;=\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelif\u003c/span\u003e \u003cspan class=\"n\"\u003eoperator\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Is\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elhs\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003erhs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will return \u003cstrong\u003eTrue\u003c/strong\u003e or \u003cstrong\u003eFalse\u003c/strong\u003e depending on the statement/input.\u003c/p\u003e\n\u003ch2 id=\"get-week-list\"\u003eGet week list\u003c/h2\u003e\n\u003cp\u003eIt will return all the weeks list from last 1 year (extendable).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003eisoweek\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eWeek\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003egenerate_week\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emax_week\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecombine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWeek\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ethisweek\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ethursday\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emin_week\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emax_week\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etimedelta\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edays\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e365\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003e_weeks\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003e_weeks\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eappend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Week\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_week\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisocalendar\u003c/span\u003e\u003cspan class=\"p\"\u003e()[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nb\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_week\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisocalendar\u003c/span\u003e\u003cspan class=\"p\"\u003e()[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e])))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emax_week\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etimedelta\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edays\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003emax_week\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"n\"\u003emin_week\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ebreak\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_weeks\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Output\u0026gt;\u0026gt; [\u0026#39;Week2 2015\u0026#39;, \u0026#39;Week1 2015\u0026#39;, \u0026#39;Week52 2014\u0026#39; ....]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"get-month-list\"\u003eGet month list\u003c/h2\u003e\n\u003cp\u003eIt will return last 12 month\u0026rsquo;s year and month number. Constructed using \u003ca href=\"http://stackoverflow.com/a/6576603/2696165\"\u003ethis Stack Overflow answer\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elocaltime\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elocaltime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emktime\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_year\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etm_mon\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)))[:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#Output\u0026gt;\u0026gt; [(2015, 2), (2015, 1), (2014, 12), (2014, 11), (2014, 10), (2014, 9), (2014, 8), (2014, 7), (2014, 6), (2014, 5), (2014, 4), (2014, 3)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats it. Thanks for reading.\u003c/p\u003e\n","content":" This post is deprecated as its based on Django 1.6 mostly.\n I am going to share some useful Django tools/functions which are very useful(were for me atleast) to get things done.Table of contents\u0026nbsp;  Return any model class and its properties Distance calculator Dynamic relational operations Get week list Get month list   \nReturn any model class and its properties This method will return any model class if you have the name of the class.\nfrom django.db import models def get_model_description(model_name=None, return_property_list=True): for item in models.get_models(include_auto_created=True): if item.__name__ == model_name: if return_property_list is True: return item.get_trigger_properties() else: return item return [] For usage, let us think of an example. Let us think, we have a class name \u0026lsquo;X\u0026rsquo;, we will get the class instance using it like this:\nfrom usefultools import get_model_descriptor model_x = get_model_descriptor(model_name=\u0026#39;X\u0026#39;) #will get class model_x_objects = get_model_descriptor(model_name=\u0026#39;X\u0026#39;).objects.all() #will get all the objects of this class And for its property:\nfrom usefultools import get_model_descriptor model_x = get_model_descriptor(model_name=\u0026#39;X\u0026#39;, return_property_list=True) #will get a list of properties like [\u0026#39;a_property\u0026#39;,\u0026#39;b_property\u0026#39;] Distance calculator If you input latitude and longitude of two places, this function will return the distance in between them. Got help from here: http://code.activestate.com/recipes/576779-calculating-distance-between-two-geographic-points/\nimport math def distance_calculator(lat1, long1, lat2, long2): lat1, long1, lat2, long2 = float(lat1), float(long1), float(lat2), float(long2) degrees_to_radians = math.pi/180.0 phi1 = (90.0 - lat1)*degrees_to_radians phi2 = (90.0 - lat2)*degrees_to_radians theta1 = long1*degrees_to_radians theta2 = long2*degrees_to_radians cos = (math.sin(phi1)*math.sin(phi2)*math.cos(theta1 - theta2) + math.cos(phi1)*math.cos(phi2)) arc = math.acos( cos ) distance = arc*6378.1 return distance It will return the distance in KM.\nDynamic relational operations Suppose we have a sentence like: '5 is greater than 9' and check if its true. We could use eval to dynamically converty string to python but its highly not recommended. So I tried like this:\ndef calculate_relational_operation(lhs, rhs, operator): get_type = type(lhs).__name__ if get_type == \u0026#39;str\u0026#39;: rhs = str(rhs) elif get_type == \u0026#39;float\u0026#39;: rhs = float(rhs) elif get_type == \u0026#39;int\u0026#39;: rhs = int(rhs) if operator == \u0026#34;==\u0026#34;: if lhs == rhs: return True return False elif operator == \u0026#34;!=\u0026#34;: if lhs != rhs: return True return False elif operator == \u0026#34;\u0026gt;\u0026#34;: if lhs \u0026gt; rhs: return True return False elif operator == \u0026#34;\u0026lt;\u0026#34;: if lhs \u0026lt; rhs: return True return False elif operator == \u0026#34;\u0026gt;=\u0026#34;: if lhs \u0026gt;= rhs: return True return False elif operator == \u0026#34;\u0026lt;=\u0026#34;: if lhs == rhs: return True return False elif operator == \u0026#34;Is\u0026#34;: if lhs is rhs: return True return False return False It will return True or False depending on the statement/input.\nGet week list It will return all the weeks list from last 1 year (extendable).\nfrom isoweek import Week def generate_week(): max_week = datetime.datetime.combine(Week.thisweek().thursday(), datetime.time(0,0)) min_week = max_week - datetime.timedelta(days=365) _weeks = list() while True: _weeks.append(\u0026#39;Week\u0026#39;+str(max_week.isocalendar()[1])+ \u0026#39; \u0026#39; +str(max_week.isocalendar()[0]))) max_week -= datetime.timedelta(days=7) if max_week \u0026lt;= min_week: break return _weeks #Output\u0026gt;\u0026gt; [\u0026#39;Week2 2015\u0026#39;, \u0026#39;Week1 2015\u0026#39;, \u0026#39;Week52 2014\u0026#39; ....] Get month list It will return last 12 month\u0026rsquo;s year and month number. Constructed using this Stack Overflow answer.\nx = 12 now = time.localtime() print([time.localtime(time.mktime((now.tm_year, now.tm_mon - n, 1, 0, 0, 0, 0, 0, 0)))[:2] for n in range(x)]) #Output\u0026gt;\u0026gt; [(2015, 2), (2015, 1), (2014, 12), (2014, 11), (2014, 10), (2014, 9), (2014, 8), (2014, 7), (2014, 6), (2014, 5), (2014, 4), (2014, 3)] Thats it. Thanks for reading.\n","description":"This post is deprecated as its based on Django 1.6 mostly.\n I am going to share some useful Django tools/functions which are very useful(were for me atleast) to get things done.Table of contents\u0026nbsp;  Return any model class and its properties Distance calculator Dynamic relational operations Get week list Get month list"},{"date_published":"2015-09-17T17:49:58Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/working-with-formset/","url":"https://ruddra.com/working-with-formset/","title":"Working with Formsets","image":"https://ruddra.com/content/images/2020/05/form.jpg","tags":["Django","Form","Formsets"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated and may not be useful.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eAs \u003ca href=\"https://docs.djangoproject.com/en/dev/topics/forms/formsets/\"\u003edjango documentation\u003c/a\u003e says:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSo here I am going to show a very simple django formset implementation example.\u003c/p\u003e\n\u003cp\u003eHere we are going to use the following model, form, template, view:\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#model\"\u003eModel\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#form\"\u003eForm\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#template\"\u003eTemplate\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#view\"\u003eView\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"model\"\u003eModel\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProduct\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equantity\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eprice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDistributor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eproducts\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodels\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eManyToManyField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProduct\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThese fairly simple models, where product is related to distributor model by a many-to-many relation.\u003c/p\u003e\n\u003ch2 id=\"form\"\u003eForm\u003c/h2\u003e\n\u003cp\u003eFirst we declare productform, then using formset factory helps to create multiple instances of product. Then we add this to distributor form like below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.forms.formsets\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eformset_factory\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eProductForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003equantity\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eprice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIntegerField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eProductFormset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eformset_factory\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProductForm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eDistributorForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eproducts\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProductFormset\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we use this form in template.\u003c/p\u003e\n\u003ch2 id=\"template\"\u003eTemplate\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34; class=\u0026#34;\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003ecsrf_token\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u0026lt;h2\u0026gt; Distributors :\u0026lt;/h2\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003efield\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003eform\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003efield.errors\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003efield.label_tag\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e : \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003efield\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eform.products.management_form\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u0026lt;h3\u0026gt; Product Instance(s)\u0026lt;/h3\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u0026lt;table id=\u0026#34;table-product\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eform\u003c/span\u003e\u003cspan class=\"nv\"\u003e.products.all\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            \u0026lt;thead\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;th\u0026gt;name\u0026lt;/th\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;th\u0026gt;quantity\u0026lt;/th\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;th\u0026gt;price\u0026lt;/th\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;/tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            \u0026lt;/thead\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            \u0026lt;tbody class=\u0026#34;product-instances\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;td\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eform.product\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;td\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eform.product\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;td\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eform.product\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;td\u0026gt; \u0026lt;input id=\u0026#34;input_add\u0026#34; type=\u0026#34;button\u0026#34; name=\u0026#34;add\u0026#34; value=\u0026#34; Add More \u0026#34; class=\u0026#34;tr_clone_add btn data_input\u0026#34;\u0026gt; \u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                \u0026lt;/tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            \u0026lt;/tbody\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u0026lt;/table\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; class=\u0026#34;button\u0026#34; value=\u0026#34;Save\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u0026lt;/form\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;script\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    var i = 1;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    $(\u0026#34;#input_add\u0026#34;).click(function() {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        $(\u0026#34;tbody tr:first\u0026#34;).clone().find(\u0026#34;.data_input\u0026#34;).each(function() {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            if ($(this).attr(\u0026#39;class\u0026#39;)== \u0026#39;tr_clone_add btn data_input\u0026#39;){\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                $(this).attr({\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    \u0026#39;id\u0026#39;: function(_, id) { return \u0026#34;remove_button\u0026#34; },\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    \u0026#39;name\u0026#39;: function(_, name) { return \u0026#34;name_remove\u0026#34; +i },\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    \u0026#39;value\u0026#39;: \u0026#39;Remove\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                }).on(\u0026#34;click\u0026#34;, function(){\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    var a = $(this).parent();\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    var b= a.parent();\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    i=i-1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    $(\u0026#39;#id_form-TOTAL_FORMS\u0026#39;).val(i);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    b.remove();\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    $(\u0026#39;.product-instances tr\u0026#39;).each(function(index, value){\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        $(this).find(\u0026#39;.data_input\u0026#39;).each(function(){\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                            $(this).attr({\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                \u0026#39;id\u0026#39;: function (_, id) {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var idData= id;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var splitV= String(idData).split(\u0026#39;-\u0026#39;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var fData= splitV[0];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var tData= splitV[2];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    return fData+ \u0026#34;-\u0026#34; +index + \u0026#34;-\u0026#34; + tData\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                },\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                \u0026#39;name\u0026#39;: function (_, name) {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var nameData= name;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var splitV= String(nameData).split(\u0026#39;-\u0026#39;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var fData= splitV[0];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    var tData= splitV[2];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                    return fData+ \u0026#34;-\u0026#34; +index + \u0026#34;-\u0026#34; + tData\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                                }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                            });\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        })\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    })\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                })\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            else{\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                $(this).attr({\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    \u0026#39;id\u0026#39;: function (_, id) {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var idData= id;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var splitV= String(idData).split(\u0026#39;-\u0026#39;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var fData= splitV[0];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var tData= splitV[2];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        return fData+ \u0026#34;-\u0026#34; +i + \u0026#34;-\u0026#34; + tData\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    },\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    \u0026#39;name\u0026#39;: function (_, name) {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var nameData= name;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var splitV= String(nameData).split(\u0026#39;-\u0026#39;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var fData= splitV[0];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        var tData= splitV[2];\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                        return fData+ \u0026#34;-\u0026#34; +i + \u0026#34;-\u0026#34; + tData\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e                });\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e            }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        }).end().appendTo(\u0026#34;tbody\u0026#34;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        $(\u0026#39;#id_form-TOTAL_FORMS\u0026#39;).val(1+i);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        i++;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    });\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;/script\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe html part is fairly simple, like using form in template. Then the JS is being used so that multiple instances of product form can be generated like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- First row of the table --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-0-name\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-0-name\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-0-quantity\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-0-quantity\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-0-price\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-0-price\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;input_add\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;button\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;add\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; Add More \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tr_clone_add btn data_input\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- Second row of the table --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;text\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-1-name\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-1-name\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-1-quantity\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-1-quantity\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;number\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-1-price\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-1-price\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;remove_button\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;button\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;remove_button1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; Remove \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;tr_clone_add btn data_input\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- more inline formset are going to rendered here --\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"view\"\u003eView\u003c/h2\u003e\n\u003cp\u003eHere values from the form are being saved to database.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDistributorForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct_instances\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProductFormset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eis_valid\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003edistributor\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDistributor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#model class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003edistributor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003edistributor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct_instances\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eitems\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct_instances\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProduct\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e#Product model class\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equantity\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;quantity\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprice\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;price\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003edistributor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproducts\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/success\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eredirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/failure\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eNotes to keep in mind:\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eFirst, need to be careful about things like:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-TOTAL_FORMS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-TOTAL_FORMS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-INITIAL_FORMS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-INITIAL_FORMS\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hidden\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;form-MAX_NUM_FORMS\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_form-MAX_NUM_FORMS\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere \u003cstrong\u003eform-TOTAL_FORMS\u003c/strong\u003e \u0026rsquo;s value should be equal to number of rows in table. The code above must exist in order to formset to work.\u003c/p\u003e\n\u003cp\u003eSecond, in \u003cstrong\u003eviews.py\u003c/strong\u003e, formset form class needs to be called, else cleaned data within the formset can\u0026rsquo;t be found.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct_instances\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eProductFormset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePOST\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats all.\u003c/p\u003e\n","content":" This post is deprecated and may not be useful.\n As django documentation says:\n A formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid.\n So here I am going to show a very simple django formset implementation example.\nHere we are going to use the following model, form, template, view:Table of contents\u0026nbsp;  Model Form Template View   \nModel class Product(models.Model): name = models.CharField(max_length=50) quantity = models.IntegerField() price = models.IntegerField() class Distributor(models.Model): name = models.CharField(max_length=100) products= models.ManyToManyField(Product) These fairly simple models, where product is related to distributor model by a many-to-many relation.\nForm First we declare productform, then using formset factory helps to create multiple instances of product. Then we add this to distributor form like below:\nfrom django import forms from django.forms.formsets import formset_factory class ProductForm(forms.Form): name = forms.CharField() quantity = forms.IntegerField() price = forms.IntegerField() ProductFormset= formset_factory(ProductForm) class DistributorForm(forms.Form): name= forms.CharField() products= ProductFormset() Now we use this form in template.\nTemplate \u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34; class=\u0026#34;\u0026#34;\u0026gt; {% csrf_token %}\u0026lt;h2\u0026gt; Distributors :\u0026lt;/h2\u0026gt; {% for field in form %}{{ field.errors }}{{ field.label_tag }}: {{ field }}{{ form.products.management_form }}\u0026lt;h3\u0026gt; Product Instance(s)\u0026lt;/h3\u0026gt; \u0026lt;table id=\u0026#34;table-product\u0026#34;\u0026gt; {% form.products.all %}\u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;name\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;quantity\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;price\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody class=\u0026#34;product-instances\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ form.product }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ form.product }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ form.product }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input id=\u0026#34;input_add\u0026#34; type=\u0026#34;button\u0026#34; name=\u0026#34;add\u0026#34; value=\u0026#34; Add More \u0026#34; class=\u0026#34;tr_clone_add btn data_input\u0026#34;\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; {% endfor %}\u0026lt;/table\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; class=\u0026#34;button\u0026#34; value=\u0026#34;Save\u0026#34;/\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;script\u0026gt; var i = 1; $(\u0026#34;#input_add\u0026#34;).click(function() { $(\u0026#34;tbody tr:first\u0026#34;).clone().find(\u0026#34;.data_input\u0026#34;).each(function() { if ($(this).attr(\u0026#39;class\u0026#39;)== \u0026#39;tr_clone_add btn data_input\u0026#39;){ $(this).attr({ \u0026#39;id\u0026#39;: function(_, id) { return \u0026#34;remove_button\u0026#34; }, \u0026#39;name\u0026#39;: function(_, name) { return \u0026#34;name_remove\u0026#34; +i }, \u0026#39;value\u0026#39;: \u0026#39;Remove\u0026#39; }).on(\u0026#34;click\u0026#34;, function(){ var a = $(this).parent(); var b= a.parent(); i=i-1 $(\u0026#39;#id_form-TOTAL_FORMS\u0026#39;).val(i); b.remove(); $(\u0026#39;.product-instances tr\u0026#39;).each(function(index, value){ $(this).find(\u0026#39;.data_input\u0026#39;).each(function(){ $(this).attr({ \u0026#39;id\u0026#39;: function (_, id) { var idData= id; var splitV= String(idData).split(\u0026#39;-\u0026#39;); var fData= splitV[0]; var tData= splitV[2]; return fData+ \u0026#34;-\u0026#34; +index + \u0026#34;-\u0026#34; + tData }, \u0026#39;name\u0026#39;: function (_, name) { var nameData= name; var splitV= String(nameData).split(\u0026#39;-\u0026#39;); var fData= splitV[0]; var tData= splitV[2]; return fData+ \u0026#34;-\u0026#34; +index + \u0026#34;-\u0026#34; + tData } }); }) }) }) } else{ $(this).attr({ \u0026#39;id\u0026#39;: function (_, id) { var idData= id; var splitV= String(idData).split(\u0026#39;-\u0026#39;); var fData= splitV[0]; var tData= splitV[2]; return fData+ \u0026#34;-\u0026#34; +i + \u0026#34;-\u0026#34; + tData }, \u0026#39;name\u0026#39;: function (_, name) { var nameData= name; var splitV= String(nameData).split(\u0026#39;-\u0026#39;); var fData= splitV[0]; var tData= splitV[2]; return fData+ \u0026#34;-\u0026#34; +i + \u0026#34;-\u0026#34; + tData } }); } }).end().appendTo(\u0026#34;tbody\u0026#34;); $(\u0026#39;#id_form-TOTAL_FORMS\u0026#39;).val(1+i); i++; }); \u0026lt;/script\u0026gt; The html part is fairly simple, like using form in template. Then the JS is being used so that multiple instances of product form can be generated like:\n\u0026lt;!-- First row of the table --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;form-0-name\u0026#34; id=\u0026#34;id_form-0-name\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;form-0-quantity\u0026#34; id=\u0026#34;id_form-0-quantity\u0026#34; /\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;form-0-price\u0026#34; id=\u0026#34;id_form-0-price\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input id=\u0026#34;input_add\u0026#34; type=\u0026#34;button\u0026#34; name=\u0026#34;add\u0026#34; value=\u0026#34; Add More \u0026#34; class=\u0026#34;tr_clone_add btn data_input\u0026#34; /\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- Second row of the table --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;form-1-name\u0026#34; id=\u0026#34;id_form-1-name\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;form-1-quantity\u0026#34; id=\u0026#34;id_form-1-quantity\u0026#34; /\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;form-1-price\u0026#34; id=\u0026#34;id_form-1-price\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input id=\u0026#34;remove_button\u0026#34; type=\u0026#34;button\u0026#34; name=\u0026#34;remove_button1\u0026#34; value=\u0026#34; Remove \u0026#34; class=\u0026#34;tr_clone_add btn data_input\u0026#34; /\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- more inline formset are going to rendered here --\u0026gt; View Here values from the form are being saved to database.\ndef post(request): form = DistributorForm(request.POST) form.product_instances = ProductFormset(request.POST) if form.is_valid(): distributor= Distributor() #model class distributor.name= form.cleaned_data(\u0026#39;name\u0026#39;) distributor.save() if form.product_instances.cleaned_data is not None: for items in form.product_instances.cleaned_data: product = Product() #Product model class product.name= item[\u0026#39;name\u0026#39;] product.quantity= item[\u0026#39;quantity\u0026#39;] product.price= item[\u0026#39;price\u0026#39;] product.save() distributor.products.add(product) return redirect(\u0026#39;/success\u0026#39;) return redirect(\u0026#39;/failure\u0026#39;) Notes to keep in mind:\nFirst, need to be careful about things like:\n\u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;form-TOTAL_FORMS\u0026#34; value=\u0026#34;1\u0026#34; id=\u0026#34;id_form-TOTAL_FORMS\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;form-INITIAL_FORMS\u0026#34; value=\u0026#34;0\u0026#34; id=\u0026#34;id_form-INITIAL_FORMS\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;form-MAX_NUM_FORMS\u0026#34; id=\u0026#34;id_form-MAX_NUM_FORMS\u0026#34; /\u0026gt; Here form-TOTAL_FORMS \u0026rsquo;s value should be equal to number of rows in table. The code above must exist in order to formset to work.\nSecond, in views.py, formset form class needs to be called, else cleaned data within the formset can\u0026rsquo;t be found.\nform.product_instances = ProductFormset(request.POST) Thats all.\n","description":"This post is deprecated and may not be useful.\n As django documentation says:\n A formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid.\n So here I am going to show a very simple django formset implementation example."},{"date_published":"2015-09-17T17:29:45Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/sample-ajax-get-post-request-in-django/","url":"https://ruddra.com/sample-ajax-get-post-request-in-django/","title":"Sample Ajax GET/POST Request in Django","image":"https://ruddra.com/content/images/2020/03/ajax.jpg","tags":["Django","View","Ajax","JS"],"content_html":"\u003cp\u003eLet us make a test scenario here:\n\u003cstrong\u003eA dropdown field which on change we are going to send a Get/Post request to Django and return response.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eLet us start coding\u0026hellip;.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#html-code\"\u003eHTML code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#create-an-ajax-request\"\u003eCreate an Ajax request\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#handle-ajax-request-in-django-view\"\u003eHandle AJAX request in django view\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"html-code\"\u003eHTML code\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eselect\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;select_dropdown\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eoption\u003c/span\u003e \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;joshua\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003ejoshua\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eoption\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eoption\u003c/span\u003e \u003cspan class=\"na\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;peter\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003epeter\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eoption\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  .... ....\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eselect\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-an-ajax-request\"\u003eCreate an Ajax request\u003c/h2\u003e\n\u003cp\u003eLet\u0026rsquo;s make an \u003ccode\u003eAjax\u003c/code\u003e request after the change in the dropdown field.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003eready\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#select_dropdown\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003echange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementById\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;select_dropdown\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eselectedIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nx\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eajax\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;your-url\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// or \u0026#34;get\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nx\"\u003eheaders\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;X-CSRFToken\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;{{ csrf_token }}\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"c1\"\u003e// for csrf token\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nx\"\u003esuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nx\"\u003ealert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"handle-ajax-request-in-django-view\"\u003eHandle AJAX request in django view\u003c/h2\u003e\n\u003cp\u003eHere on change of a post request is called. Now let\u0026rsquo;s handle the view.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.http\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eJsonResponse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;POST\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"c1\"\u003e#os request.GET()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eget_value\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebody\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Do your logic here coz you got data in `get_value`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;result\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;you made a request\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edumps\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003econtent_type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThats all.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eAbove code should work both \u003ccode\u003eGET\u003c/code\u003e and \u003ccode\u003ePOST\u003c/code\u003e methods. If you have any questions, please share in comments section below.\u003c/p\u003e\n","content":"Let us make a test scenario here: A dropdown field which on change we are going to send a Get/Post request to Django and return response.\nLet us start coding\u0026hellip;.Table of contents\u0026nbsp;  HTML code Create an Ajax request Handle AJAX request in django view In conclusion   \nHTML code \u0026lt;select id=\u0026#34;select_dropdown\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;joshua\u0026#34;\u0026gt;joshua\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;peter\u0026#34;\u0026gt;peter\u0026lt;/option\u0026gt; .... .... \u0026lt;/select\u0026gt; Create an Ajax request Let\u0026rsquo;s make an Ajax request after the change in the dropdown field.\n$(document).ready(function () { $(\u0026#34;#select_dropdown\u0026#34;).change(function () { var e = document.getElementById(\u0026#34;select_dropdown\u0026#34;); var value = e.options[e.selectedIndex].value; $.ajax({ url: \u0026#34;your-url\u0026#34;, type: \u0026#34;post\u0026#34;, // or \u0026#34;get\u0026#34;  data: value, headers: { \u0026#34;X-CSRFToken\u0026#34;: \u0026#34;{{ csrf_token }}\u0026#34; }, // for csrf token  success: function (data) { alert(data.result); }, }); }); }); Handle AJAX request in django view Here on change of a post request is called. Now let\u0026rsquo;s handle the view.\nfrom django.http import JsonResponse def post(request): if request.method == \u0026#34;POST\u0026#34;: #os request.GET() get_value= request.body # Do your logic here coz you got data in `get_value` data = {} data[\u0026#39;result\u0026#39;] = \u0026#39;you made a request\u0026#39; return HttpResponse(json.dumps(data), content_type=\u0026#34;application/json\u0026#34;) Thats all.\nIn conclusion Above code should work both GET and POST methods. If you have any questions, please share in comments section below.\n","description":"Let us make a test scenario here: A dropdown field which on change we are going to send a Get/Post request to Django and return response.\nLet us start coding\u0026hellip;.Table of contents\u0026nbsp;  HTML code Create an Ajax request Handle AJAX request in django view In conclusion"},{"date_published":"2015-09-17T17:24:52Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 17, 2015","id":"https://ruddra.com/using-intellijidea-within-an-exisiting-virtualenv/","url":"https://ruddra.com/using-intellijidea-within-an-exisiting-virtualenv/","title":"Using IntellijIdea/Pycharm Within An Exisiting Virtualenv","image":"https://ruddra.com/content/images/2020/05/idea.jpg","tags":["Django","IntellijIdea","Pycharm"],"content_html":"\u003cp\u003eTo add a virtual environment to \u003cstrong\u003eIntellij Idea\u003c/strong\u003e, You have added Python from \u003cem\u003evirtualenv\u003c/em\u003e folder to project SDK. Which means that \u003cem\u003evirtualenv\u003c/em\u003e directory\u0026rsquo;s python( for example \u003cstrong\u003evenv/bin/python2.7\u003c/strong\u003e) needs to be added to Intellij Idea project path. \u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#for-pycharm--2018\"\u003eFor PyCharm \u0026gt;= 2018\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#for-pycharm-2016-and-later\"\u003eFor Pycharm 2016 and later\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#for-older-versions\"\u003eFor older versions\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"for-pycharm--2018\"\u003eFor PyCharm \u0026gt;= 2018\u003c/h2\u003e\n\u003cp\u003eAs per \u003ca href=\"https://www.jetbrains.com/help/pycharm/creating-virtual-environment.html\"\u003edocumentation from Pycharm\u003c/a\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eIn the Project Interpreter page, click the \u003cstrong\u003ecog icon\u003c/strong\u003e and select Add.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the left-hand pane of the Add Python Interpreter dialog box, select Virtualenv Environment. The following actions depend on whether\nthe virtual environment existed before.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf Existing environment is selected:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSpecify the required interpreter: use the drop-down list, or click Select an interpreter and find one in your file system.\u003c/li\u003e\n\u003cli\u003eSelect the check-box Make available to all projects, if needed.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick OK to complete the task.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"for-pycharm-2016-and-later\"\u003eFor Pycharm 2016 and later\u003c/h2\u003e\n\u003cp\u003eTo add an existing virtual environment to the list of available interpreters\u003c/p\u003e\n\u003cp\u003eIn the Project Interpreter page,\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"254\" height=\"266\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 254 266'%3E%3C/svg%3E\"\n        data-src=\"/content/git/I226A_hu1a33a2d326e6d1e02db972bf33ab274e_11154_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/I226A_hu1a33a2d326e6d1e02db972bf33ab274e_11154_500x0_resize_q75_lanczos.jpg 500w'\n        alt='page' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/I226A.jpg\" width=\"254\" height=\"266\" alt='page'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eIn the drop-down list, choose to Add local.\nadd environment option\u003c/p\u003e\n\u003cp\u003eIn the Select Python Interpreter dialog box that opens, choose the desired Python executable, located inside the virtual environment folder, and click OK.\nGo to this link for more information.\nNow need to run the project.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"for-older-versions\"\u003eFor older versions\u003c/h2\u003e\n\u003cp\u003eThe virtualenv directory\u0026rsquo;s python( for example venv/bin/python2.7) needs to be added to IntelliJ Idea project path. Example: need to go to file\u0026gt;project structure (IntelliJ Idea)\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1057\" height=\"615\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1057 615'%3E%3C/svg%3E\"\n        data-src=\"/content/git/virtualenv/1_hu9ce38870a130c2f7c47b2711cb769e21_81025_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/virtualenv/1_hu9ce38870a130c2f7c47b2711cb769e21_81025_500x0_resize_q75_lanczos.jpg 500w,/content/git/virtualenv/1_hu9ce38870a130c2f7c47b2711cb769e21_81025_600x0_resize_q75_lanczos.jpg 600w,/content/git/virtualenv/1_hu9ce38870a130c2f7c47b2711cb769e21_81025_720x0_resize_q75_lanczos.jpg 720w'\n        alt='1' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/virtualenv/1.jpg\" width=\"1057\" height=\"615\" alt='1'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003epress (new) in Project SDK, and add new path to virtualenv\u0026rsquo;s python directory like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1063\" height=\"625\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1063 625'%3E%3C/svg%3E\"\n        data-src=\"/content/git/virtualenv/2_hu1add6cb727c757c993dc32186298d379_79520_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/virtualenv/2_hu1add6cb727c757c993dc32186298d379_79520_500x0_resize_q75_lanczos.jpg 500w,/content/git/virtualenv/2_hu1add6cb727c757c993dc32186298d379_79520_600x0_resize_q75_lanczos.jpg 600w,/content/git/virtualenv/2_hu1add6cb727c757c993dc32186298d379_79520_720x0_resize_q75_lanczos.jpg 720w'\n        alt='2' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/virtualenv/2.jpg\" width=\"1063\" height=\"625\" alt='2'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eGo to Modules\u0026gt;Dependencies and set your module SDK to Python SDK which is marked on this picture:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1095\" height=\"735\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1095 735'%3E%3C/svg%3E\"\n        data-src=\"/content/git/virtualenv/3_hu7d34d90530800edcf2f19b88345d420c_48620_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/virtualenv/3_hu7d34d90530800edcf2f19b88345d420c_48620_500x0_resize_q75_lanczos.jpg 500w,/content/git/virtualenv/3_hu7d34d90530800edcf2f19b88345d420c_48620_600x0_resize_q75_lanczos.jpg 600w,/content/git/virtualenv/3_hu7d34d90530800edcf2f19b88345d420c_48620_720x0_resize_q75_lanczos.jpg 720w'\n        alt='3' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/virtualenv/3.jpg\" width=\"1095\" height=\"735\" alt='3'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eClick on Django (option marked in next the image) and set Django project root, Settings, Manage Script like this:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1321\" height=\"721\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1321 721'%3E%3C/svg%3E\"\n        data-src=\"/content/git/virtualenv/4_hu764ebdf6bbb66d83958978305322cb3a_44960_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/virtualenv/4_hu764ebdf6bbb66d83958978305322cb3a_44960_500x0_resize_q75_lanczos.jpg 500w,/content/git/virtualenv/4_hu764ebdf6bbb66d83958978305322cb3a_44960_600x0_resize_q75_lanczos.jpg 600w,/content/git/virtualenv/4_hu764ebdf6bbb66d83958978305322cb3a_44960_720x0_resize_q75_lanczos.jpg 720w'\n        alt='4' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/virtualenv/4.jpg\" width=\"1321\" height=\"721\" alt='4'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eNow press ok and final look of the Project settings:\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1051\" height=\"624\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1051 624'%3E%3C/svg%3E\"\n        data-src=\"/content/git/virtualenv/5_hu25c598005786e10e4eb2b44bdc2ccbe8_85761_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/virtualenv/5_hu25c598005786e10e4eb2b44bdc2ccbe8_85761_500x0_resize_q75_lanczos.jpg 500w,/content/git/virtualenv/5_hu25c598005786e10e4eb2b44bdc2ccbe8_85761_600x0_resize_q75_lanczos.jpg 600w,/content/git/virtualenv/5_hu25c598005786e10e4eb2b44bdc2ccbe8_85761_720x0_resize_q75_lanczos.jpg 720w'\n        alt='5' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/virtualenv/5.jpg\" width=\"1051\" height=\"624\" alt='5'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eNow need to run the project.\u003c/p\u003e\n\u003cp\u003eMy \u003ca href=\"http://stackoverflow.com/questions/20877106/using-intellijidea-within-an-existing-virtualenv/20879661#20879661\"\u003eStack Overflow Answer is here\u003c/a\u003e.\u003c/p\u003e\n","content":"To add a virtual environment to Intellij Idea, You have added Python from virtualenv folder to project SDK. Which means that virtualenv directory\u0026rsquo;s python( for example venv/bin/python2.7) needs to be added to Intellij Idea project path. Table of contents\u0026nbsp;  For PyCharm \u0026gt;= 2018 For Pycharm 2016 and later For older versions   \nFor PyCharm \u0026gt;= 2018 As per documentation from Pycharm:\n  In the Project Interpreter page, click the cog icon and select Add.\n  In the left-hand pane of the Add Python Interpreter dialog box, select Virtualenv Environment. The following actions depend on whether the virtual environment existed before.\n  If Existing environment is selected:\n Specify the required interpreter: use the drop-down list, or click Select an interpreter and find one in your file system. Select the check-box Make available to all projects, if needed.    Click OK to complete the task.\n   For Pycharm 2016 and later To add an existing virtual environment to the list of available interpreters\nIn the Project Interpreter page,\n   In the drop-down list, choose to Add local. add environment option\nIn the Select Python Interpreter dialog box that opens, choose the desired Python executable, located inside the virtual environment folder, and click OK. Go to this link for more information. Now need to run the project.\n For older versions The virtualenv directory\u0026rsquo;s python( for example venv/bin/python2.7) needs to be added to IntelliJ Idea project path. Example: need to go to file\u0026gt;project structure (IntelliJ Idea)\n   press (new) in Project SDK, and add new path to virtualenv\u0026rsquo;s python directory like this:\n   Go to Modules\u0026gt;Dependencies and set your module SDK to Python SDK which is marked on this picture:\n   Click on Django (option marked in next the image) and set Django project root, Settings, Manage Script like this:\n   Now press ok and final look of the Project settings:\n   Now need to run the project.\nMy Stack Overflow Answer is here.\n","description":"Adding virtual environment in PyCharm/IntellijIdea for older and newer versions"},{"date_published":"2014-10-21T18:13:05Z","date_modified":"2022-07-28T22:03:00+02:00","date":"October 21, 2014","id":"https://ruddra.com/implementation-of-forgot-reset-password-feature-in-django/","url":"https://ruddra.com/implementation-of-forgot-reset-password-feature-in-django/","title":"Implementation of Forgot/Reset Password Feature in Django","image":"https://ruddra.com/content/images/2020/03/reset.jpg","tags":["Python","Django"],"content_html":"\u003cp\u003eDjango has its own implementation for \u003cstrong\u003ereset/forgot password\u003c/strong\u003e for its admin site. We are going to use that code as reference to implement similar feature for a non admin-site authentication page. Although there are tons of good packages which will allow user to use their password resetting system. But if the system isn\u0026rsquo;t too complex and doesn\u0026rsquo;t need such authentication plugins, then reusing the django\u0026rsquo;s very own implementation can be a good option.\u003c/p\u003e\n\u003cp\u003eThis implementation is going to divided into two parts. First part is sending an email with reset url, and the Second part is clicking the reset url attached in email and entering new password for reset completion.\u003c/p\u003e\n\u003cp\u003eBefore starting anything, lets look at the django\u0026rsquo;s reset/forgot password\u0026rsquo;s implementation in \u003ca href=\"https://github.com/django/django/blob/master/django/contrib/auth/forms.py\"\u003e\u003ccode\u003edjango/contrib/auth/forms.py\u003c/code\u003e\u003c/a\u003e) and \u003ca href=\"https://github.com/django/django/blob/master/django/contrib/auth/views.py\"\u003e\u003ccode\u003edjango/contrib/auth/views.py\u003c/code\u003e\u003c/a\u003e).\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#implementation-of-sending-an-email-for-forgot-password-with-reset-url\"\u003eImplementation of sending an email for forgot password with reset url\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#screenshots-password-reset-flow\"\u003eScreenshots password reset flow\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#implementation-of-clicking-the-reset-url-and-entering-new-password-for-reset-completion\"\u003eImplementation of clicking the reset url and entering new password for reset completion\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#screenshots-reset-successful\"\u003eScreenshots reset successful\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#alternative-reference-to-this-implementation\"\u003eAlternative reference to this implementation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-conclusion\"\u003eIn conclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"implementation-of-sending-an-email-for-forgot-password-with-reset-url\"\u003eImplementation of sending an email for forgot password with reset url\u003c/h2\u003e\n\u003cp\u003eWe are going to make a \u003cstrong\u003ereset password form\u003c/strong\u003e where we are going to add an text field which will take either username or email address associated with the corresponding user.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePasswordResetRequestForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eemail_or_username\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Email Or Username\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003emax_length\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e254\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe are going to make a \u003cstrong\u003eview\u003c/strong\u003e which will check the input email/username and send an email to user\u0026rsquo;s email address(implementation reference: \u003ca href=\"https://github.com/django/django/blob/master/django/contrib/auth/forms.py#L235\"\u003egithub source\u003c/a\u003e).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.auth.tokens\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003edefault_token_generator\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.utils.encoding\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eforce_bytes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.utils.http\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eurlsafe_base64_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurlsafe_base64_decode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.template\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eloader\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esend_mail\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003esettings\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eDEFAULT_FROM_EMAIL\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.views.generic\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFormView\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e.forms\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordResetRequestForm\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003emessages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.contrib.auth.models\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.db.models.query_utils\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eQ\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eResetPasswordRequestView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFormView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;account/test_template.html\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esuccess_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/account/login\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eform_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordResetRequestForm\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eform_valid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eResetPasswordRequestView\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eform_valid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;email_or_username\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eobjects\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;email\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;domain\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMETA\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;HTTP_HOST\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;site_name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;your site\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;uid\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eurlsafe_base64_encode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforce_bytes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epk\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;user\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;token\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003edefault_token_generator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s1\"\u003e\u0026#39;protocol\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003escheme\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eemail_template_name\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;registration/password_reset_email.html\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esubject\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Reset Your Password\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003eemail\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eloader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erender_to_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemail_template_name\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003esend_mail\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esubject\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDEFAULT_FROM_EMAIL\u003c/span\u003e \u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eemail\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003efail_silently\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emessages\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esuccess\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;An email has been sent to \u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34; if it is a valid user.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you see above, the code is fairly simple(although it looks long). An encoded user id has been generated here and a token by using. This user id is going to be used later to get the user, the token will be used for checking validity of the url for that user and both the token and the user id is going to be used as unique reference for reset password url. \u003cstrong\u003ec\u003c/strong\u003e is a dictionary which has user id, token and other related data etc. This dictionary is going to be blent with the template \u003ccode\u003eregistration/password_reset_email.html\u003c/code\u003e and send to the user\u0026rsquo;s email address. We will be using django\u0026rsquo;s message framework to show messages.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003emessages\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;ul class=\u0026#34;messages\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003emessage\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"nv\"\u003emessages\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u0026lt;li\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003emessage.tags\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e class=\u0026#34;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emessage.tags\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003emessage\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\u0026lt;/li\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendfor\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;/ul\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003ecsrf_token\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003eform.as_p\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34; /\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u0026lt;/form\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTwo more things before wrapping up sending email part. One, making a url for using this view.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^account/reset_password\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eResetPasswordRequestView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;reset_password\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTwo, create or edit the template inside \u003cstrong\u003eTEMPLATES\u003c/strong\u003e directory named \u003ccode\u003eregistration/password_reset_email.html\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-django\" data-lang=\"django\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eload\u003c/span\u003e \u003cspan class=\"nv\"\u003ei18n\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}{%\u003c/span\u003e \u003cspan class=\"k\"\u003eautoescape\u003c/span\u003e \u003cspan class=\"nv\"\u003eoff\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblocktrans\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003eYou\u0026#39;re receiving this email because you requested a password reset for your user account at \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003esite_name\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}{%\u003c/span\u003e\u003cspan class=\"k\"\u003eendblocktrans\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003etrans\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Please go to the following page and choose a new password:\u0026#34;\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblock\u003c/span\u003e \u003cspan class=\"nv\"\u003ereset_link\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e        \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003edomain\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}{%\u003c/span\u003e \u003cspan class=\"k\"\u003eurl\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;reset_password_confirm\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003euidb64\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003euid\u003c/span\u003e \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003etoken\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e    \u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblock\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003etrans\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Your username, in case you\u0026#39;ve forgotten:\u0026#34;\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003euser.get_username\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003etrans\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Thanks for using our site!\u0026#34;\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eblocktrans\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003eThe \u003c/span\u003e\u003cspan class=\"cp\"\u003e{{\u003c/span\u003e \u003cspan class=\"nv\"\u003esite_name\u003c/span\u003e \u003cspan class=\"cp\"\u003e}}\u003c/span\u003e\u003cspan class=\"x\"\u003e team\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendblocktrans\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"x\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e{%\u003c/span\u003e \u003cspan class=\"k\"\u003eendautoescape\u003c/span\u003e \u003cspan class=\"cp\"\u003e%}\u003c/span\u003e\u003cspan class=\"x\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow run the server and you will see forms like the screen shots below: (This screenshots look cool because django adminsite\u0026rsquo;s js/css have been used here.)\u003c/p\u003e\n\u003ch3 id=\"screenshots-password-reset-flow\"\u003eScreenshots password reset flow\u003c/h3\u003e\n\u003cp\u003eRendered template from PasswordResetRequestForm form\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"804\" height=\"418\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 804 418'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/reset-password_huab50579a67f8f09641b4297c32d8981c_22872_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/reset-password_huab50579a67f8f09641b4297c32d8981c_22872_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/reset-password_huab50579a67f8f09641b4297c32d8981c_22872_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/reset-password_huab50579a67f8f09641b4297c32d8981c_22872_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/reset-password.jpg\" width=\"804\" height=\"418\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eRendered template from PasswordResetRequestForm form with error messages\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"848\" height=\"574\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 848 574'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/invalid-username_hu19a6ca25db9caf3d97e6432d96ec978e_28269_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/invalid-username_hu19a6ca25db9caf3d97e6432d96ec978e_28269_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/invalid-username_hu19a6ca25db9caf3d97e6432d96ec978e_28269_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/invalid-username_hu19a6ca25db9caf3d97e6432d96ec978e_28269_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/invalid-username.jpg\" width=\"848\" height=\"574\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eRendered template of login form with sent email confirmation message\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"944\" height=\"848\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 944 848'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/reset-mail-sent_hu16e7969b357b05ae889fe8f209f9580c_43053_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/reset-mail-sent_hu16e7969b357b05ae889fe8f209f9580c_43053_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/reset-mail-sent_hu16e7969b357b05ae889fe8f209f9580c_43053_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/reset-mail-sent_hu16e7969b357b05ae889fe8f209f9580c_43053_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/reset-mail-sent.jpg\" width=\"944\" height=\"848\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eSent email look\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1244\" height=\"416\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1244 416'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/reset-email_hua216f340e579333e3eaf26cdf1a7fb17_48360_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/reset-email_hua216f340e579333e3eaf26cdf1a7fb17_48360_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/reset-email_hua216f340e579333e3eaf26cdf1a7fb17_48360_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/reset-email_hua216f340e579333e3eaf26cdf1a7fb17_48360_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/reset-email.jpg\" width=\"1244\" height=\"416\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"implementation-of-clicking-the-reset-url-and-entering-new-password-for-reset-completion\"\u003eImplementation of clicking the reset url and entering new password for reset completion\u003c/h2\u003e\n\u003cp\u003eFirst, lets write a \u003cstrong\u003eform\u003c/strong\u003e which will have two fields new password and retype password field.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSetPasswordForm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eForm\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eerror_messages\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s1\"\u003e\u0026#39;password_mismatch\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;The two password fields didn\u0026#39;t match.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enew_password1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;New password\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                    \u003cspan class=\"n\"\u003ewidget\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordInput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enew_password2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elabel\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;New password confirmation\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003erequired\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                    \u003cspan class=\"n\"\u003ewidget\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordInput\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eclean_new_password2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epassword1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;new_password1\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epassword2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;new_password2\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003epassword1\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003epassword2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003eraise\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eValidationError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eerror_messages\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password_mismatch\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ecode\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;password_mismatch\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003epassword2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt will take two password input and verify if they match, if those inputs match(in clean method), it will return password. Now using that form, we are going to write a view(\u003ca href=\"https://github.com/django/django/blob/731f313d604a6cc141f36d8a1ba9a75790c70154/django/contrib/auth/views.py#L192%22\"\u003ereference for implementation\u003c/a\u003e).\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePasswordResetConfirmView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFormView\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etemplate_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;account/test_template.html\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esuccess_url\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;/admin/\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eform_class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSetPasswordForm\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eform_valid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003earg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePasswordResetConfirmView\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eform_valid\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003earg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003euidb64\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;uidb64\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ekwargs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;token\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eUserModel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eget_user_model\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003etry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003euid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eurlsafe_base64_decode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euidb64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003e_default_manager\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epk\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003euid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eexcept\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ne\"\u003eTypeError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ne\"\u003eValueError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ne\"\u003eOverflowError\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eDoesNotExist\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"ow\"\u003eis\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"kc\"\u003eNone\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003edefault_token_generator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003echeck_token\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecleaned_data\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;new_password2\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eset_password\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enew_password\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esave\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003emessages\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esuccess\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Password reset has been successful.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003emessages\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eerror\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Password reset has not been unsuccessful.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eform\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eURL for this view:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eurlpatterns\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"n\"\u003epatterns\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sa\"\u003er\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;^account/reset_password_confirm/(?P\u0026lt;uidb64\u0026gt;[0-9A-Za-z]+)-(?P\u0026lt;token\u0026gt;.+)/$\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ePasswordResetConfirmView\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_view\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;reset_password_confirm\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWell \u003cstrong\u003ePasswordResetConfirmView\u003c/strong\u003e takes two parameter from urls, uidb64 and token, those were sent within email generated by \u003cstrong\u003eResetPasswordRequestView\u003c/strong\u003e. We got user id hence the user by decoding \u003cstrong\u003euid64\u003c/strong\u003e, and function \u003ccode\u003edefault_token_generator\u003c/code\u003e checks the token against the user. If they are valid, then we set new password for the user. If they are not valid, it will show an error message saying the url is no longer valid.\u003c/p\u003e\n\u003ch3 id=\"screenshots-reset-successful\"\u003eScreenshots reset successful\u003c/h3\u003e\n\u003cp\u003eRendered template for SetPasswordForm form\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"994\" height=\"608\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 994 608'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/reset-password-prompt_hu6419a9133b2b033b89fce68db4e9b4f2_30916_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/reset-password-prompt_hu6419a9133b2b033b89fce68db4e9b4f2_30916_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/reset-password-prompt_hu6419a9133b2b033b89fce68db4e9b4f2_30916_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/reset-password-prompt_hu6419a9133b2b033b89fce68db4e9b4f2_30916_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/reset-password-prompt.jpg\" width=\"994\" height=\"608\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003cp\u003eReset successful\u003c/p\u003e\n\u003cdiv class=\"page-img-container\"\u003e\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \u003cimg class=\"lozad page-image\" width=\"1098\" height=\"780\"\n        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1098 780'%3E%3C/svg%3E\"\n        data-src=\"/content/git/django-reset-password/reset-success_hu3e57b2202d120f6c8d4503b6b38af8db_37369_500x0_resize_q75_lanczos.jpg\"\n        data-srcset='/content/git/django-reset-password/reset-success_hu3e57b2202d120f6c8d4503b6b38af8db_37369_500x0_resize_q75_lanczos.jpg 500w,/content/git/django-reset-password/reset-success_hu3e57b2202d120f6c8d4503b6b38af8db_37369_600x0_resize_q75_lanczos.jpg 600w,/content/git/django-reset-password/reset-success_hu3e57b2202d120f6c8d4503b6b38af8db_37369_720x0_resize_q75_lanczos.jpg 720w'\n        alt='django reset' data-sizes=\"440w\"\u003e\n    \u003cnoscript\u003e\n        \u003cimg src=\"/content/git/django-reset-password/reset-success.jpg\" width=\"1098\" height=\"780\" alt='django reset'\u003e\n    \u003c/noscript\u003e\n    \n\u003c/div\u003e\n\u003ch2 id=\"alternative-reference-to-this-implementation\"\u003eAlternative reference to this implementation\u003c/h2\u003e\n\u003cp\u003eYou can check the \u003ca href=\"https://docs.djangoproject.com/en/2.1/topics/auth/default/#module-django.contrib.auth.views\"\u003edjango authentication views\u003c/a\u003e for your own implementation or customize them.\u003c/p\u003e\n\u003ch2 id=\"in-conclusion\"\u003eIn conclusion\u003c/h2\u003e\n\u003cp\u003eThus you implement your very own forgot or reset the password. For full project/implementation, please check/fork \u003ca href=\"https://github.com/ruddra/django-reset-password/tree/master\"\u003ethis repository\u003c/a\u003e. If you have any questions, please share in the comment section below.\u003c/p\u003e\n","content":"Django has its own implementation for reset/forgot password for its admin site. We are going to use that code as reference to implement similar feature for a non admin-site authentication page. Although there are tons of good packages which will allow user to use their password resetting system. But if the system isn\u0026rsquo;t too complex and doesn\u0026rsquo;t need such authentication plugins, then reusing the django\u0026rsquo;s very own implementation can be a good option.\nThis implementation is going to divided into two parts. First part is sending an email with reset url, and the Second part is clicking the reset url attached in email and entering new password for reset completion.\nBefore starting anything, lets look at the django\u0026rsquo;s reset/forgot password\u0026rsquo;s implementation in django/contrib/auth/forms.py) and django/contrib/auth/views.py).Table of contents\u0026nbsp;  Implementation of sending an email for forgot password with reset url  Screenshots password reset flow   Implementation of clicking the reset url and entering new password for reset completion  Screenshots reset successful   Alternative reference to this implementation In conclusion   \nImplementation of sending an email for forgot password with reset url We are going to make a reset password form where we are going to add an text field which will take either username or email address associated with the corresponding user.\nfrom django import forms class PasswordResetRequestForm(forms.Form): email_or_username = forms.CharField(label=(\u0026#34;Email Or Username\u0026#34;), max_length=254) We are going to make a view which will check the input email/username and send an email to user\u0026rsquo;s email address(implementation reference: github source).\nfrom django.contrib.auth.tokens import default_token_generator from django.utils.encoding import force_bytes from django.utils.http import urlsafe_base64_encode, urlsafe_base64_decode from django.template import loader from django.core.mail import send_mail from settings import DEFAULT_FROM_EMAIL from django.views.generic import FormView from .forms import PasswordResetRequestForm from django.contrib import messages from django.contrib.auth.models import User from django.db.models.query_utils import Q class ResetPasswordRequestView(FormView): template_name = \u0026#34;account/test_template.html\u0026#34; success_url = \u0026#39;/account/login\u0026#39; form_class = PasswordResetRequestForm def form_valid(self, *args, **kwargs): form = super(ResetPasswordRequestView, self).form_valid(*args, **kwargs) data= form.cleaned_data[\u0026#34;email_or_username\u0026#34;] user= User.objects.filter(Q(email=data)|Q(username=data)).first() if user: c = { \u0026#39;email\u0026#39;: user.email, \u0026#39;domain\u0026#39;: self.request.META[\u0026#39;HTTP_HOST\u0026#39;], \u0026#39;site_name\u0026#39;: \u0026#39;your site\u0026#39;, \u0026#39;uid\u0026#39;: urlsafe_base64_encode(force_bytes(user.pk)), \u0026#39;user\u0026#39;: user, \u0026#39;token\u0026#39;: default_token_generator.make_token(user), \u0026#39;protocol\u0026#39;: self.request.scheme, } email_template_name=\u0026#39;registration/password_reset_email.html\u0026#39; subject = \u0026#34;Reset Your Password\u0026#34; email = loader.render_to_string(email_template_name, c) send_mail(subject, email, DEFAULT_FROM_EMAIL , [user.email], fail_silently=False) messages.success(self.request, \u0026#39;An email has been sent to \u0026#39; + data +\u0026#34; if it is a valid user.\u0026#34;) return form As you see above, the code is fairly simple(although it looks long). An encoded user id has been generated here and a token by using. This user id is going to be used later to get the user, the token will be used for checking validity of the url for that user and both the token and the user id is going to be used as unique reference for reset password url. c is a dictionary which has user id, token and other related data etc. This dictionary is going to be blent with the template registration/password_reset_email.html and send to the user\u0026rsquo;s email address. We will be using django\u0026rsquo;s message framework to show messages.\n{% if messages %}\u0026lt;ul class=\u0026#34;messages\u0026#34;\u0026gt; {% for message in messages %}\u0026lt;li\u0026gt;{% if message.tags %}class=\u0026#34;{{ message.tags }}\u0026#34;{% endif %}\u0026gt;{{ message }}\u0026lt;/li\u0026gt; {% endfor %}{% endif %}\u0026lt;/ul\u0026gt; \u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %}{{ form.as_p }}\u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34; /\u0026gt; \u0026lt;/form\u0026gt; Two more things before wrapping up sending email part. One, making a url for using this view.\nurlpatterns = patterns( url(r\u0026#39;^account/reset_password\u0026#39;, ResetPasswordRequestView.as_view(), name=\u0026#34;reset_password\u0026#34;), ) Two, create or edit the template inside TEMPLATES directory named registration/password_reset_email.html.\n{% load i18n %}{% autoescape off %}{% blocktrans %}You\u0026#39;re receiving this email because you requested a password reset for your user account at {{ site_name }}{%endblocktrans %}{% trans \u0026#34;Please go to the following page and choose a new password:\u0026#34; %}{% block reset_link %}{{ domain }}{% url \u0026#39;reset_password_confirm\u0026#39; uidb64=uid token=token %}{% endblock %}{% trans \u0026#34;Your username, in case you\u0026#39;ve forgotten:\u0026#34; %}{{ user.get_username }}{% trans \u0026#34;Thanks for using our site!\u0026#34; %}{% blocktrans %}The {{ site_name }}team{% endblocktrans %}{% endautoescape %}Now run the server and you will see forms like the screen shots below: (This screenshots look cool because django adminsite\u0026rsquo;s js/css have been used here.)\nScreenshots password reset flow Rendered template from PasswordResetRequestForm form\n   Rendered template from PasswordResetRequestForm form with error messages\n   Rendered template of login form with sent email confirmation message\n   Sent email look\n   Implementation of clicking the reset url and entering new password for reset completion First, lets write a form which will have two fields new password and retype password field.\nclass SetPasswordForm(forms.Form): error_messages = { \u0026#39;password_mismatch\u0026#39;: (\u0026#34;The two password fields didn\u0026#39;t match.\u0026#34;), } new_password1 = forms.CharField(label=(\u0026#34;New password\u0026#34;), required=True, widget=forms.PasswordInput) new_password2 = forms.CharField(label=(\u0026#34;New password confirmation\u0026#34;), required=True, widget=forms.PasswordInput) def clean_new_password2(self): password1 = self.cleaned_data.get(\u0026#39;new_password1\u0026#39;) password2 = self.cleaned_data.get(\u0026#39;new_password2\u0026#39;) if password1 != password2: raise forms.ValidationError( self.error_messages[\u0026#39;password_mismatch\u0026#39;], code=\u0026#39;password_mismatch\u0026#39;, ) return password2 It will take two password input and verify if they match, if those inputs match(in clean method), it will return password. Now using that form, we are going to write a view(reference for implementation).\nclass PasswordResetConfirmView(FormView): template_name = \u0026#34;account/test_template.html\u0026#34; success_url = \u0026#39;/admin/\u0026#39; form_class = SetPasswordForm def form_valid(self, *arg, **kwargs): form = super(PasswordResetConfirmView, self).form_valid(*arg, **kwargs) uidb64=self.kwargs[\u0026#39;uidb64\u0026#39;] token=self.kwargs[\u0026#39;token\u0026#39;] UserModel = get_user_model() try: uid = urlsafe_base64_decode(uidb64) user = User._default_manager.get(pk=uid) except (TypeError, ValueError, OverflowError, User.DoesNotExist): user = None if user is not None and default_token_generator.check_token(user, token): new_password= form.cleaned_data[\u0026#39;new_password2\u0026#39;] user.set_password(new_password) user.save() messages.success(self.request, \u0026#39;Password reset has been successful.\u0026#39;) else: messages.error(self.request, \u0026#39;Password reset has not been unsuccessful.\u0026#39;) return form URL for this view:\nurlpatterns += patterns( url(r\u0026#39;^account/reset_password_confirm/(?P\u0026lt;uidb64\u0026gt;[0-9A-Za-z]+)-(?P\u0026lt;token\u0026gt;.+)/$\u0026#39;, PasswordResetConfirmView.as_view(), name=\u0026#39;reset_password_confirm\u0026#39;), ) Well PasswordResetConfirmView takes two parameter from urls, uidb64 and token, those were sent within email generated by ResetPasswordRequestView. We got user id hence the user by decoding uid64, and function default_token_generator checks the token against the user. If they are valid, then we set new password for the user. If they are not valid, it will show an error message saying the url is no longer valid.\nScreenshots reset successful Rendered template for SetPasswordForm form\n   Reset successful\n   Alternative reference to this implementation You can check the django authentication views for your own implementation or customize them.\nIn conclusion Thus you implement your very own forgot or reset the password. For full project/implementation, please check/fork this repository. If you have any questions, please share in the comment section below.\n","description":"A DYI reset/forgot password implementation based on Django's source code in Django."},{"date_published":"2014-09-01T18:03:07Z","date_modified":"2022-07-28T22:03:00+02:00","date":"September 1, 2014","id":"https://ruddra.com/perodic-tasks-by-celery-3-1-example/","url":"https://ruddra.com/perodic-tasks-by-celery-3-1-example/","title":"Perodic Tasks By Celery 3.1 Example","image":"https://ruddra.com/content/images/2020/03/celery.jpg","tags":["Django","Celery","DevOps"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated. It is no longer compatible with latest Celery versions.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eI am assuming you have read celery docs from \u003ca href=\"http://celery.readthedocs.org/en/latest/index.html\"\u003eCelery Documentation\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eAs we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example. But I am going to avoid theoretical knowledge here because you can read them in celery documentation.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#install-celery\"\u003eInstall celery\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-brokers\"\u003eConfiguring brokers\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#making-periodic-task\"\u003eMaking periodic task\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"install-celery\"\u003eInstall celery\u003c/h2\u003e\n\u003cp\u003eFirst install celery: \u003ccode\u003epip install django-celery\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"configuring-brokers\"\u003eConfiguring brokers\u003c/h2\u003e\n\u003cp\u003eWe are using django database as Broker. For detail understanding, check here: \u003ca href=\"http://celery.readthedocs.org/en/latest/getting-started/brokers/django.html\"\u003ehttp://celery.readthedocs.org/en/latest/getting-started/brokers/django.html\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"making-periodic-task\"\u003eMaking periodic task\u003c/h2\u003e\n\u003cp\u003eHere is the project structure we are going to use:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -settings.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -manage.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -app1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -views.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -models.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -app2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -views.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -models.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLets say, we want to add periodic task to \u003cstrong\u003eapp1\u003c/strong\u003e. So structure of the project will be like this:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -settings.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -manage.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -app1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -__init__py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -celery.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -tasks.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -views.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -models.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    -app2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -views.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        -models.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNo need to panic to see two new .py files. They will be created in time. 😄\u003c/p\u003e\n\u003cp\u003eNow, we need to add celery configuration in:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003esettings.py\u003c/strong\u003e:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBROKER_URL\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;pyamqp://guest:guest@wlocalhost:5672//\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e#read docs\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eCELERY_IMPORTS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;app1.tasks\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecelery.schedules\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003ecrontab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003etimedelta\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eCELERYBEAT_SCHEDULE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;schedule-name\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"s1\"\u003e\u0026#39;task\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;app1.tasks.email_sending_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# We are going to create a email_sending_method later in this post.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"s1\"\u003e\u0026#39;schedule\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etimedelta\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAs you can see, \u003cstrong\u003etask\u003c/strong\u003e in \u003cstrong\u003eCELERYBEAT__SCHEDULE\u003c/strong\u003e is name as \u003cstrong\u003eapp1.tasks.email\u003c/strong\u003e\u003cem\u003esending\u003c/em\u003e\u003cstrong\u003emethod\u003c/strong\u003e because in next section we are making a \u003cstrong\u003eemail\u003c/strong\u003e_sending\u003cstrong\u003emethod\u003c/strong\u003e method which going to send an email every 30 seconds.\u003c/p\u003e\n\u003cp\u003eAnd in installed apps, we need to add \u003cstrong\u003edjcelery\u003c/strong\u003e :-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;djcelery\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we shall add a \u003cstrong\u003ecelery.py\u003c/strong\u003e file in \u003cstrong\u003eapp1\u003c/strong\u003e directory:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eos\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecelery\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eCelery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.conf\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenviron\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetdefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;settings\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCelery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;app1.email_sending_method\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econfig_from_object\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;django.conf:settings\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eautodiscover_tasks\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003elambda\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003esettings\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eINSTALLED_APPS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eCELERY_RESULT_BACKEND\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;djcelery.backends.database:DatabaseBackend\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@app\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etask\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebind\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edebug_task\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Request: \u003c/span\u003e\u003cspan class=\"si\"\u003e{0!r}\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand update the \u003ccode\u003e__init__.py\u003c/code\u003e file within the directory:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecelery\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ecelery_app\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow we are going to add a \u003cstrong\u003etasks.py\u003c/strong\u003e which is actually going to be executed while running celery.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003e__future__\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eabsolute_import\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003edatetime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003ecelery.task.base\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eperiodic_task\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003edjango.core.mail\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esend_mail\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@periodic_task\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erun_every\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003edatetime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etimedelta\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eseconds\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eemail_sending_method\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esend_mail\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;subject\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;body\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;from_me@admin.com\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;to_me@admin.com\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"n\"\u003efail_silently\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"kc\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd respective credentials/configurations for sending mail, and then run this piece of code in command prompt:-\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecelery -A app1 worker -B -l info\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd that should do the trick, we will get mails after every 30 seconds.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePS: Although there might a key-error, but it won\u0026rsquo;t occur any problems.\u003c/strong\u003e\u003c/p\u003e\n","content":" This post is deprecated. It is no longer compatible with latest Celery versions.\n I am assuming you have read celery docs from Celery Documentation.\nAs we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example. But I am going to avoid theoretical knowledge here because you can read them in celery documentation.Table of contents\u0026nbsp;  Install celery Configuring brokers Making periodic task   \nInstall celery First install celery: pip install django-celery.\nConfiguring brokers We are using django database as Broker. For detail understanding, check here: http://celery.readthedocs.org/en/latest/getting-started/brokers/django.html\nMaking periodic task Here is the project structure we are going to use:-\nproject -settings.py -manage.py -app1 -views.py -models.py -app2 -views.py -models.py Lets say, we want to add periodic task to app1. So structure of the project will be like this:-\nproject -settings.py -manage.py -app1 -__init__py -celery.py -tasks.py -views.py -models.py -app2 -views.py -models.py No need to panic to see two new .py files. They will be created in time. 😄\nNow, we need to add celery configuration in:\nsettings.py:-\nfrom __future__ import absolute_import BROKER_URL = \u0026#39;pyamqp://guest:guest@wlocalhost:5672//\u0026#39; #read docs CELERY_IMPORTS = (\u0026#39;app1.tasks\u0026#39;, ) from celery.schedules import crontab from datetime import timedelta CELERYBEAT_SCHEDULE = { \u0026#39;schedule-name\u0026#39;: { \u0026#39;task\u0026#39;: \u0026#39;app1.tasks.email_sending_method\u0026#39;, # We are going to create a email_sending_method later in this post. \u0026#39;schedule\u0026#39;: timedelta(seconds=30), }, } As you can see, task in CELERYBEAT__SCHEDULE is name as app1.tasks.emailsendingmethod because in next section we are making a email_sendingmethod method which going to send an email every 30 seconds.\nAnd in installed apps, we need to add djcelery :-\nINSTALLED_APPS = ( ... \u0026#39;djcelery\u0026#39; ) Now we shall add a celery.py file in app1 directory:-\nfrom __future__ import absolute_import import os from celery import Celery import django from django.conf import settings os.environ.setdefault(\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;, \u0026#39;settings\u0026#39;) app = Celery(\u0026#39;app1.email_sending_method\u0026#39;) app.config_from_object(\u0026#39;django.conf:settings\u0026#39;) app.autodiscover_tasks(lambda: settings.INSTALLED_APPS) app.conf.update( CELERY_RESULT_BACKEND=\u0026#39;djcelery.backends.database:DatabaseBackend\u0026#39;, ) @app.task(bind=True) def debug_task(self): print(\u0026#39;Request: {0!r}\u0026#39;.format(self.request)) and update the __init__.py file within the directory:-\nfrom __future__ import absolute_import from celery import app as celery_app Now we are going to add a tasks.py which is actually going to be executed while running celery.\nfrom __future__ import absolute_import import datetime from celery.task.base import periodic_task from django.core.mail import send_mail @periodic_task(run_every=datetime.timedelta(seconds=30)) def email_sending_method(): send_mail(\u0026#39;subject\u0026#39;, \u0026#39;body\u0026#39;, \u0026#39;from_me@admin.com\u0026#39; , [\u0026#39;to_me@admin.com\u0026#39;], fail_silently=False) Add respective credentials/configurations for sending mail, and then run this piece of code in command prompt:-\ncelery -A app1 worker -B -l info And that should do the trick, we will get mails after every 30 seconds.\nPS: Although there might a key-error, but it won\u0026rsquo;t occur any problems.\n","description":"This post is deprecated. It is no longer compatible with latest Celery versions.\n I am assuming you have read celery docs from Celery Documentation.\nAs we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example."},{"date_published":"2014-07-04T17:34:00Z","date_modified":"2022-07-28T22:03:00+02:00","date":"July 4, 2014","id":"https://ruddra.com/syncdb-vs-migration/","url":"https://ruddra.com/syncdb-vs-migration/","title":"Syncdb vs Migration","image":"https://ruddra.com/content/images/2020/05/migratory_birds.jpg","tags":["Django","Models"],"content_html":"\u003cp\u003eWhile surfing through Stack Overflow, I find a common question among Django users that, database not working properly; fields attribute changed, yet not working etc. Clearly because most of them used syncdb after altering fields. Well, lets make some things clear here about django \u003cstrong\u003esyncdb\u003c/strong\u003e and \u003cstrong\u003emigration\u003c/strong\u003e.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-syncdb\"\u003eWhat is \u0026lsquo;syncdb\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#what-is-migration\"\u003eWhat is \u0026lsquo;migration\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#what-if-you-mess-up-in-production-server-with-syncdb-and-migration\"\u003eWhat if you mess-up in production server with \u0026lsquo;syncdb\u0026rsquo; and \u0026lsquo;migration\u0026rsquo;\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"what-is-syncdb\"\u003eWhat is \u0026lsquo;syncdb\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003esyncdb\u003c/strong\u003e is a command which is executed in django shell to create tables for first time for apps which are added to \u003cstrong\u003eINSTALLED_APPS\u003c/strong\u003e of \u003cem\u003esettings.py\u003c/em\u003e. Need to keep in mind about two key words: \u0026lsquo;First Time\u0026rsquo; and \u0026lsquo;Newly Added Apps\u0026rsquo;. Because \u003cstrong\u003esyncdb\u003c/strong\u003e only works on models of those apps for first time to create initial tables in database. So once \u003cstrong\u003esyncdb\u003c/strong\u003e is executed, not model field altering, because if anyone does that, it will not work. Its clearly mentioned in \u003ca href=\"https://docs.djangoproject.com/en/1.6/ref/django-admin/#syncdb\"\u003edjango\u0026rsquo;s documentation\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003esyncdb will only create tables for models which have not yet been installed. It will never issue ALTER TABLE statements to match changes made to a model class after installation. Changes to model classes and database schemas often involve some form of ambiguity and, in those cases, Django would have to guess at the correct changes to make. There is a risk that critical data would be lost in the process.\nIf you have made changes to a model and wish to alter the database tables to match, use the sql command to display the new SQL structure and compare that to your existing table schema to work out the changes.\nSo what if you need to change model field? No worries, migration is here to save you.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"what-is-migration\"\u003eWhat is \u0026lsquo;migration\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003eMigration is a process to reconstruct database schema according to altered model fields. From \u003ca href=\"https://docs.djangoproject.com/en/dev/topics/migrations/\"\u003eDjango 1.7 documentation\u003c/a\u003e:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eSo, after using \u003cstrong\u003esyncdb\u003c/strong\u003e, if you need to alter model fields, then go ahead, and after that you have to migrate database. If you are using django \u0026lt;=1.6, then you can use \u003ca href=\"http://south.aeracode.org/\"\u003eDjango South\u003c/a\u003e. If django is above 1.6, it has its own \u003ca href=\"https://docs.djangoproject.com/en/stable/topics/migrations/\"\u003edatabase migration\u003c/a\u003e process.\u003c/p\u003e\n\u003cp\u003eAnd of course, if you use \u003cstrong\u003eSouth\u003c/strong\u003e to migrate, you have to use \u003cstrong\u003esyncdb\u003c/strong\u003e before executing migration, because if you don\u0026rsquo;t, initial database tables(including auth, auth_group_permission, django_admin_log etc) will not be created.\u003c/p\u003e\n\u003ch2 id=\"what-if-you-mess-up-in-production-server-with-syncdb-and-migration\"\u003eWhat if you mess-up in production server with \u0026lsquo;syncdb\u0026rsquo; and \u0026lsquo;migration\u0026rsquo;\u003c/h2\u003e\n\u003cp\u003eIf you end up doing \u003cstrong\u003esyncdb\u003c/strong\u003e initially but need to change database, what should be done?\u003c/p\u003e\n\u003cp\u003eEasy solution, keep the models in same state as it was during initial \u003cstrong\u003esyncdb\u003c/strong\u003e command. Then run \u003ccode\u003epython manage.py schemamigration your_app_label --initial\u003c/code\u003e\u003cstrong\u003e(in django \u0026lt;=1.6)\u003c/strong\u003e or \u003ccode\u003epython manage.py makemigration your_app_label\u003c/code\u003e\u003cstrong\u003e(django \u0026gt;=1.7)\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eAfter that, run \u003ccode\u003epython manage.py migrate your_app_label --fake\u003c/code\u003e\u003cstrong\u003e(in django \u0026lt;=1.6)\u003c/strong\u003e or \u003ccode\u003epython manage.py migrate your_app_label --fake-initial\u003c/code\u003e \u003cstrong\u003e(django \u0026gt;=1.7)\u003c/strong\u003e. It will put a fake migration in the database which will occur no change in tables.\u003c/p\u003e\n\u003cp\u003eThen change models and run \u003ccode\u003epython manage.py migrate your_app_label\u003c/code\u003e\u003c/p\u003e\n\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003e\u003cstrong\u003ePS:\u003c/strong\u003e \u003cem\u003esyncdb is deprecated from django 1.7, which will reduce the hassle of using syncdb and migration separately.\u003c/em\u003e\u003c/p\u003e\u003c/blockquote\u003e\n","content":"While surfing through Stack Overflow, I find a common question among Django users that, database not working properly; fields attribute changed, yet not working etc. Clearly because most of them used syncdb after altering fields. Well, lets make some things clear here about django syncdb and migration.Table of contents\u0026nbsp;  What is \u0026lsquo;syncdb\u0026rsquo; What is \u0026lsquo;migration\u0026rsquo; What if you mess-up in production server with \u0026lsquo;syncdb\u0026rsquo; and \u0026lsquo;migration\u0026rsquo;   \nWhat is \u0026lsquo;syncdb\u0026rsquo; syncdb is a command which is executed in django shell to create tables for first time for apps which are added to INSTALLED_APPS of settings.py. Need to keep in mind about two key words: \u0026lsquo;First Time\u0026rsquo; and \u0026lsquo;Newly Added Apps\u0026rsquo;. Because syncdb only works on models of those apps for first time to create initial tables in database. So once syncdb is executed, not model field altering, because if anyone does that, it will not work. Its clearly mentioned in django\u0026rsquo;s documentation:\n syncdb will only create tables for models which have not yet been installed. It will never issue ALTER TABLE statements to match changes made to a model class after installation. Changes to model classes and database schemas often involve some form of ambiguity and, in those cases, Django would have to guess at the correct changes to make. There is a risk that critical data would be lost in the process. If you have made changes to a model and wish to alter the database tables to match, use the sql command to display the new SQL structure and compare that to your existing table schema to work out the changes. So what if you need to change model field? No worries, migration is here to save you.\n What is \u0026lsquo;migration\u0026rsquo; Migration is a process to reconstruct database schema according to altered model fields. From Django 1.7 documentation:\nSo, after using syncdb, if you need to alter model fields, then go ahead, and after that you have to migrate database. If you are using django \u0026lt;=1.6, then you can use Django South. If django is above 1.6, it has its own database migration process.\nAnd of course, if you use South to migrate, you have to use syncdb before executing migration, because if you don\u0026rsquo;t, initial database tables(including auth, auth_group_permission, django_admin_log etc) will not be created.\nWhat if you mess-up in production server with \u0026lsquo;syncdb\u0026rsquo; and \u0026lsquo;migration\u0026rsquo; If you end up doing syncdb initially but need to change database, what should be done?\nEasy solution, keep the models in same state as it was during initial syncdb command. Then run python manage.py schemamigration your_app_label --initial(in django \u0026lt;=1.6) or python manage.py makemigration your_app_label(django \u0026gt;=1.7).\nAfter that, run python manage.py migrate your_app_label --fake(in django \u0026lt;=1.6) or python manage.py migrate your_app_label --fake-initial (django \u0026gt;=1.7). It will put a fake migration in the database which will occur no change in tables.\nThen change models and run python manage.py migrate your_app_label\nPS: syncdb is deprecated from django 1.7, which will reduce the hassle of using syncdb and migration separately.\n ","description":"Putting a stop to an age old argument between syncdb and migration in Django."},{"date_published":"2014-04-29T10:44:30Z","date_modified":"2022-07-28T22:03:00+02:00","date":"April 29, 2014","id":"https://ruddra.com/richtext-editor-in-django-admin-site/","url":"https://ruddra.com/richtext-editor-in-django-admin-site/","title":"RichText Editor in Django Admin Site","image":"https://ruddra.com/content/images/2020/04/rich.jpg","tags":["Django","CKEditor"],"content_html":"\u003cp\u003eI wanted to add a rich text editor within \u003cem\u003edjango\u003c/em\u003e administrator. It is not that hard to add a rich text editor, as there are editors like \u003ca href=\"https://ckeditor.com\"\u003eCKeditor\u003c/a\u003e, \u003ca href=\"http://www.tinymce.com\"\u003eTinymce\u003c/a\u003e.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#download-ckeditor-file\"\u003eDownload ckeditor file\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#writing-formspy\"\u003eWriting forms.py\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#generated-text\"\u003eGenerated text\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"download-ckeditor-file\"\u003eDownload ckeditor file\u003c/h2\u003e\n\u003cp\u003eThere are multiple plugins for django like \u003ca href=\"https://github.com/dwaiter/django-ckeditor\"\u003edjango-ckeditor\u003c/a\u003e or \u003ca href=\"https://github.com/aljosa/django-tinymce\"\u003edjango-tinymce\u003c/a\u003e etc. It seemed very complicated to use for me. So what I did here is that I have downloaded \u003ca href=\"http://ckeditor.com/\"\u003eckeditor\u003c/a\u003e standard edition and extracted it in my Static folder and loaded the js file within \u003cstrong\u003etemplates\u0026gt;admin\u0026gt;base.html\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eNow, using firebug, I retrieved the textarea \u003cem\u003ename/id/class\u003c/em\u003e in which I wanted to add ckeditor using firebug (or from chrome/firefox: inspect elements). This process is simple, just load the page where your textarea(or any type of field) resides, open firebug and inspect that place.For example: lets say the model field I want to modify is named \u003ccode\u003eblogbody\u003c/code\u003e. So the element\u0026rsquo;s name in admin site was \u003ccode\u003eid_blogbody\u003c/code\u003e(auto generated). In case of using a form, the input will be like following:\u003c/p\u003e\n\u003ch2 id=\"writing-formspy\"\u003eWriting forms.py\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eblogbody\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eCharField\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ewidget\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eforms\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTextInput\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eattrs\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;id\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;id_blogbody\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"generated-text\"\u003eGenerated text\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003einput\u003c/span\u003e \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id_blogbody\u0026#34;\u003c/span\u003e \u003cspan class=\"err\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen go to base.html and add this script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eCKEDITOR\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;name_or_id_or_class_of_the_textfield\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e//in this example CKEDITOR.replace( \u0026#39;#id_blogbody\u0026#39; )\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003escript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow reload the page from admin site and a textfield with rich text editor will be generated!\u003c/p\u003e\n","content":"I wanted to add a rich text editor within django administrator. It is not that hard to add a rich text editor, as there are editors like CKeditor, Tinymce.Table of contents\u0026nbsp;  Download ckeditor file Writing forms.py Generated text   \nDownload ckeditor file There are multiple plugins for django like django-ckeditor or django-tinymce etc. It seemed very complicated to use for me. So what I did here is that I have downloaded ckeditor standard edition and extracted it in my Static folder and loaded the js file within templates\u0026gt;admin\u0026gt;base.html.\nNow, using firebug, I retrieved the textarea name/id/class in which I wanted to add ckeditor using firebug (or from chrome/firefox: inspect elements). This process is simple, just load the page where your textarea(or any type of field) resides, open firebug and inspect that place.For example: lets say the model field I want to modify is named blogbody. So the element\u0026rsquo;s name in admin site was id_blogbody(auto generated). In case of using a form, the input will be like following:\nWriting forms.py blogbody= forms.CharField( widget=forms.TextInput(attrs={\u0026#39;id\u0026#39;: \u0026#39;id_blogbody\u0026#39;}) ) Generated text \u0026lt;input id=\u0026#34;id_blogbody\u0026#34; ... /\u0026gt; Then go to base.html and add this script:\n\u0026lt;script\u0026gt; CKEDITOR.replace(\u0026#34;name_or_id_or_class_of_the_textfield\u0026#34;); //in this example CKEDITOR.replace( \u0026#39;#id_blogbody\u0026#39; ) \u0026lt;/script\u0026gt; Now reload the page from admin site and a textfield with rich text editor will be generated!\n","description":"I wanted to add a rich text editor within django administrator. It is not that hard to add a rich text editor, as there are editors like CKeditor, Tinymce.Table of contents\u0026nbsp;  Download ckeditor file Writing forms.py Generated text   \nDownload ckeditor file There are multiple plugins for django like django-ckeditor or django-tinymce etc."},{"date_published":"2013-12-16T10:51:47Z","date_modified":"2022-07-28T22:03:00+02:00","date":"December 16, 2013","id":"https://ruddra.com/django-translation-using-po-file/","url":"https://ruddra.com/django-translation-using-po-file/","title":"Django Translation Using .PO File","image":"https://ruddra.com/content/images/2020/04/translation.jpg","tags":["Python","Django"],"content_html":"\n\u003cblockquote class=\"caution\"\u003e\u003cp\u003eThis post is deprecated. Please follow the \u003ca href=\"https://docs.djangoproject.com/en/3.0/topics/i18n/translation/\"\u003eofficial documentation\u003c/a\u003e.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWhen comes to using multiple languages in one single site, \u003cem\u003eDjango\u003c/em\u003e is very handy. You can use .po file to do your translation for you.\u003cdiv class=\"toc\"\u003e\n    \u003cinput id=\"_toc\" type=\"checkbox\" name=\"_toc\"\u003e\u003clabel class=\"collapse\" for=\"_toc\"\u003eTable of contents\u0026nbsp;\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"\u003e\u003cpolyline class=\"chevron-down\" points=\"6 10 14 18 22 10\"\u003e\u003c/polyline\u003e\u003cpolyline class=\"chevron-up\" points=\"22 18 14 10 6 18\"\u003e\u003c/svg\u003e\u003c/label\u003e\n    \u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#how-to-do-that\"\u003eHow to do that\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003ch2 id=\"how-to-do-that\"\u003eHow to do that\u003c/h2\u003e\n\u003cp\u003eProcess is very simple: First create .po file. To make .po file I would suggest to use \u003cstrong\u003epoedit\u003c/strong\u003e or \u003cstrong\u003eRosetta\u003c/strong\u003e. Here is another option that is using django\u0026rsquo;s very own Localisation. Second create a folder name locale within tour django project and add the language named (for example: \u003cstrong\u003eru__RU\u003c/strong\u003e for Russian language) within locale. Within \u003cstrong\u003eru___RU\u003c/strong\u003e folder, create another folder named \u0026lsquo;LC__MESSAGES\u0026rsquo;. There save the \u003cstrong\u003e.po\u003c/strong\u003e file you have created. Save the \u003cstrong\u003e.po\u003c/strong\u003e file in name \u003cstrong\u003edjango.po\u003c/strong\u003e. File Map:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eProject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── locale\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   ├── ru_RU\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │   └── LC_MESSAGES\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   │        └── django.po\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── en_GB\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│       └── LC_MESSAGES\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│           └── django.po\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow run this command: \u003ccode\u003edjango-admin.py compilemessages\u003c/code\u003e to generate \u003cstrong\u003e.mo\u003c/strong\u003e file(django.mo). Third comes to final touch. in Language settings in your \u003cstrong\u003esettings.py\u003c/strong\u003e add \u003cstrong\u003eru_RU\u003c/strong\u003e like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eLANGUAGES\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;en-us\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;English\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;ru_RU\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Russian\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eLANGUAGE_CODE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;en-us\u0026#39;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;ru_RU\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd locale path :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eLOCALE_PATHS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eos\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePROJECT_PATH\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;../locale\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand finally add a middleware in in \u003cstrong\u003eMIDDLEWARE_CLASSES\u003c/strong\u003e or \u003cstrong\u003eMIDDLEWARES\u003c/strong\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026#39;django.middleware.locale.LocaleMiddleware\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat should the trick.\u003c/p\u003e\n","content":" This post is deprecated. Please follow the official documentation.\n When comes to using multiple languages in one single site, Django is very handy. You can use .po file to do your translation for you.Table of contents\u0026nbsp;  How to do that   \nHow to do that Process is very simple: First create .po file. To make .po file I would suggest to use poedit or Rosetta. Here is another option that is using django\u0026rsquo;s very own Localisation. Second create a folder name locale within tour django project and add the language named (for example: ru__RU for Russian language) within locale. Within ru___RU folder, create another folder named \u0026lsquo;LC__MESSAGES\u0026rsquo;. There save the .po file you have created. Save the .po file in name django.po. File Map:\nProject ├── locale │ ├── ru_RU │ │ └── LC_MESSAGES │ │ └── django.po │ └── en_GB │ └── LC_MESSAGES │ └── django.po Now run this command: django-admin.py compilemessages to generate .mo file(django.mo). Third comes to final touch. in Language settings in your settings.py add ru_RU like this:\nLANGUAGES = ( (\u0026#39;en-us\u0026#39;, \u0026#39;English\u0026#39;), (\u0026#39;ru_RU\u0026#39;, \u0026#39;Russian\u0026#39;), ) LANGUAGE_CODE = \u0026#39;en-us\u0026#39; \u0026#39;ru_RU\u0026#39; Add locale path :\nLOCALE_PATHS = ( os.path.join(PROJECT_PATH, \u0026#39;../locale\u0026#39;), ) and finally add a middleware in in MIDDLEWARE_CLASSES or MIDDLEWARES.\n\u0026#39;django.middleware.locale.LocaleMiddleware\u0026#39; That should the trick.\n","description":"This post is deprecated. Please follow the official documentation.\n When comes to using multiple languages in one single site, Django is very handy. You can use .po file to do your translation for you.Table of contents\u0026nbsp;  How to do that   \nHow to do that Process is very simple: First create ."}]}