<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>View on Ruddra</title><link>https://ruddra.com/tags/view/</link><description>Recent content in View on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Sep 2015 21:29:09 +0000</lastBuildDate><atom:link href="https://ruddra.com/tags/view/index.xml" rel="self" type="application/rss+xml"/><item><title>Make a Blog using Django Part 2</title><link>https://ruddra.com/make-a-blog-using-django-part-2/</link><pubDate>Thu, 17 Sep 2015 21:29:09 +0000</pubDate><guid>https://ruddra.com/make-a-blog-using-django-part-2/</guid><description>This post is now deprecated. Please follow the official tutorial for creating your first django application.
From previous post, you have configured and ran django, also added admin site to the django.
To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog/
Table of contents&amp;nbsp; Create entry in database Templates Separating views Create entry in database Now click on the myblog section and click add to add new blog.</description></item><item><title>Sample Ajax GET/POST Request in Django</title><link>https://ruddra.com/sample-ajax-get-post-request-in-django/</link><pubDate>Thu, 17 Sep 2015 17:29:45 +0000</pubDate><guid>https://ruddra.com/sample-ajax-get-post-request-in-django/</guid><description>Let us make a test scenario here: A dropdown field which on change we are going to send a Get/Post request to Django and return response.
Let us start coding&amp;hellip;.Table of contents&amp;nbsp; HTML code Create an Ajax request Handle AJAX request in django view In conclusion</description></item></channel></rss>