<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django Models on Ruddra</title><link>https://ruddra.com/tags/django-models/</link><description>Recent content in Django Models on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Sep 2015 21:29:08 +0000</lastBuildDate><atom:link href="https://ruddra.com/tags/django-models/index.xml" rel="self" type="application/rss+xml"/><item><title>Make a Blog using Django Part 1</title><link>https://ruddra.com/posts/make-a-blog-using-django-part-1/</link><pubDate>Thu, 17 Sep 2015 21:29:08 +0000</pubDate><guid>https://ruddra.com/posts/make-a-blog-using-django-part-1/</guid><description>This post is now deprecated. Please follow the official tutorial for creating your first django application.
&amp;ldquo;Making a blog using django&amp;rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django&amp;rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use.</description></item><item><title>Syncdb vs Migration</title><link>https://ruddra.com/posts/syncdb-vs-migration/</link><pubDate>Fri, 04 Jul 2014 17:34:00 +0000</pubDate><guid>https://ruddra.com/posts/syncdb-vs-migration/</guid><description>While surfing through Stackoverflow, I find a common question among Django users that, database not working properly; fields attribute changed, yet not working etc. Clearly because most of them used syncdb after altering fields. Well, lets make some things clear here about django syncdb and migration. Table of contents ï¸Ž What is &amp;lsquo;syncdb&amp;rsquo; What is &amp;lsquo;migration&amp;rsquo; What if you mess-up in production server with &amp;lsquo;syncdb&amp;rsquo; and &amp;lsquo;migration&amp;rsquo;</description></item></channel></rss>