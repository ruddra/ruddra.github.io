<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipeline on Ruddra</title><link>https://ruddra.com/tags/pipeline/<description>Recent content in Pipeline on Ruddra</description><generator>Hugo -- gohugo.io</generator><lastbuilddate>Fri, 06 Mar 2020 00:59:54 +0600</lastbuilddate><atom:link href="https://ruddra.com/tags/pipeline/index.xml" rel="self" type="application/rss+xml"><item><title>Hugo: Deploy Static Site using GitHub Actions</title><link>https://ruddra.com/posts/hugo-deploy-static-page-using-github-actions/<pubdate>Fri, 06 Mar 2020 00:59:54 +0600</pubdate><guid>https://ruddra.com/posts/hugo-deploy-static-page-using-github-actions/</guid><description>If you are using Hugo to generate static pages, you are familiar with CLI commands which are to build the static pages in your local machine and make push to your &amp;lt;username&amp;gt;.github.io repository. When it comes to using Hugo for blogging, compared to platforms like Medium or WordPress, it is very painful because you do not have any web interface to make changes whenever you want or wherever you want.</description></item><item><title>Writing Jenkins Pipeline For OpenShift Deployment: Part Two</title><link>https://ruddra.com/posts/openshift-python-jenkins-pipeline-two/<pubdate>Sat, 11 Aug 2018 20:41:04 +0000</pubdate><guid>https://ruddra.com/posts/openshift-python-jenkins-pipeline-two/</guid><description>In previous article, we covered step 1-5 which would prepare the code and make sure it is ready to be deployed to OpenShift. Now we are going to use the next steps to deploy that code.Table of contents&amp;nbsp; Step 6: create build configuration in OpenShift Step 7: build image Step 8: deploy to OpenShift in DEV Step 9: promote image to STAGE Step 10: deploy to OpenShift in STAGE Step 11: scale in STAGE Conclusion</description></item><item><title>Writing Jenkins Pipeline For OpenShift Deployment: Part One</title><link>https://ruddra.com/posts/openshift-python-jenkins-pipeline-one/<pubdate>Sat, 11 Aug 2018 19:41:04 +0000</pubdate><guid>https://ruddra.com/posts/openshift-python-jenkins-pipeline-one/</guid><description>Pipeline is a set of instructions, which will be executed as per given sequence and produce a output. Jenkins Pipeline is simply writing these instructions in Jenkins. These pipelines can be written in Groovy. In previous post we have defined deployment structure and made necessary preparations for deployment of a python+gunicorn+nginx+jenkins based project.</description></item><item><title>Deploy Django to OpenShift Using Jenkins Pipeline(CI/CD)</title><link>https://ruddra.com/posts/django-openshift-pipeline/<pubdate>Sun, 22 Jul 2018 17:51:20 +0000</pubdate><guid>https://ruddra.com/posts/django-openshift-pipeline/</guid><description>Using Jenkins pipeline, you can easily automate your deployments in openshift. In this post, we are going to use this powerful tool to deploy a Django project. But before we start, one thing I need to mention is that, this project has been tested on in Minishift 1.2.0, OpenShift v3.9.0 and Kubernetes v1.</description></item></channel></rss>