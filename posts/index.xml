<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ruddra</title>
    <link>https://ruddra.com/posts/</link>
    <description>Recent content in Posts on Ruddra</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 14 Feb 2020 01:00:00 +0600</lastBuildDate>
    
	<atom:link href="https://ruddra.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Maintain Authentication Layer from Redux Middleware Using React Router</title>
      <link>https://ruddra.com/posts/reactjs-maintain-auth-layer-from-redux-middleware-router/</link>
      <pubDate>Fri, 14 Feb 2020 01:00:00 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/reactjs-maintain-auth-layer-from-redux-middleware-router/</guid>
      <description>Maintaining authentication layer in ReactJS can be painful. Back in the old days(even now-a-days), you needed to override every componentDidMount method in class based components to see if the user is authenticated. In the latest ReactJS, there are hooks(specially useEffect) where you need to write these checks. Either way, some codes will be redundant.</description>
    </item>
    
    <item>
      <title>Use Docker for Accessing Database in AWS CodeBuild</title>
      <link>https://ruddra.com/posts/aws-codebuild-use-database/</link>
      <pubDate>Fri, 31 Jan 2020 19:08:29 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/aws-codebuild-use-database/</guid>
      <description>AWS CodeBuild is an extraordinary tool for building your code. Recently I have been using it to build projects and store docker images in AWS ECR. During those CodeBuild processes, I needed Database for running tests. As the need of the Database was for a limited time and I didn&amp;rsquo;t want to pay extra for it(that is why I did not use AWS RDS), I decided to create database using docker inside CodeBuild.</description>
    </item>
    
    <item>
      <title>Basic Networking in Docker</title>
      <link>https://ruddra.com/posts/networking-with-docker/</link>
      <pubDate>Wed, 15 Jan 2020 00:50:56 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/networking-with-docker/</guid>
      <description>We already know that Docker is used for containerization. But networking in docker makes it even better tool for deployment. You can make standalone deployments in containers and communicate between them, or make containers act as host, or even assign mac addresses to containers and act them as devices. It does not matter which host machine you are in, you can make dockers communicate in-between them.</description>
    </item>
    
    <item>
      <title>Implement Newsletter Subscription Using Staticman</title>
      <link>https://ruddra.com/posts/implement-newsletters-using-staticman/</link>
      <pubDate>Thu, 12 Dec 2019 00:12:08 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/implement-newsletters-using-staticman/</guid>
      <description>In this article, I am going to share how you can set up a newsletter subscription using Staticman. No need to use third party newsletter subscription services.
Collecting data in static sites or serverless sites(with POST request) is a hassle because you don&amp;rsquo;t have a server to receive POST requests and store data.</description>
    </item>
    
    <item>
      <title>Tips on Using Volume, Entrypoint and Ignore Files in Docker</title>
      <link>https://ruddra.com/posts/docker-volume-entrypoint-ignorefile/</link>
      <pubDate>Sat, 09 Nov 2019 00:56:04 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/docker-volume-entrypoint-ignorefile/</guid>
      <description>Have you worked with Docker before? Do you think you have trouble with it, like when you are developing an application, you need to build every time to see the results, or thinking of the best way to load data in DB, or may be you are annoyed because there are lots of markdown files, screenshots etc that are taking a lot of space in your container.</description>
    </item>
    
    <item>
      <title>Tips on Using Docker Compose, Build Argument and Environment Variable</title>
      <link>https://ruddra.com/posts/docker-compose-arg-env/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/docker-compose-arg-env/</guid>
      <description>Imagine, you have some microservices and you want to use one&amp;rsquo;s API from another, how can you do that if all of them are running in different docker container? Docker Compose has a solution for you.
Suppose you want to deploy a project in test, stage and production environment with same Dockerfile for all of them through a single Dockerfile.</description>
    </item>
    
    <item>
      <title>Tips on Writing Dockerfile, Reduce Sizes and Build Time of Docker Image</title>
      <link>https://ruddra.com/posts/docker-write-dockerfile-and-reduce-size-build-time-for-image/</link>
      <pubDate>Fri, 08 Nov 2019 00:15:22 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/docker-write-dockerfile-and-reduce-size-build-time-for-image/</guid>
      <description>For the past couple of years, I have been creating Dockerfile for different projects. based on those experiences I am going to share some tips on writing docker files to communication between containers.
*FYI: before reading this article, please read the article from official docker blog site to learn about best practices for creating Dockerfile.</description>
    </item>
    
    <item>
      <title>Manjaro KDE Virtual Desktop Management and Visual Improvement Shortcuts</title>
      <link>https://ruddra.com/posts/manjaro-kde-plasma-workspace-visual-improvements/</link>
      <pubDate>Wed, 30 Oct 2019 02:40:51 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/manjaro-kde-plasma-workspace-visual-improvements/</guid>
      <description>For the past couple of days, I am testing out Manjaro linux. Most of the time, I was working with KDE Plasma Edition. In my opinion, it is the most beautiful desktop environment from Manjaro official distributions.
I am a fan of Ubuntu Unity workspaces and wanted to use similar features in KDE plasma as well.</description>
    </item>
    
    <item>
      <title>Manjaro Tips and Tricks</title>
      <link>https://ruddra.com/posts/manjaro-tricks-and-tips/</link>
      <pubDate>Mon, 14 Oct 2019 01:32:28 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/manjaro-tricks-and-tips/</guid>
      <description>Recently I tried out Manjaro operating system, and did some experiment with XFCE and KDE desktop environments. Here I am going to share some tips and tricks to setup Manjaro in you machine.
This article is part of a series based on Manjaro. Tips shared here are applicable for all Manjaro desktop distributions.</description>
    </item>
    
    <item>
      <title>Django Access URL Arguments Through Middleware</title>
      <link>https://ruddra.com/posts/django-store-url-argument-through-middleware/</link>
      <pubDate>Wed, 02 Oct 2019 22:06:21 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/django-store-url-argument-through-middleware/</guid>
      <description>Lets say you have an API which is being used by many stores. Now for a specific store ABC, they want to have a different response format. So how would you make this implementation generic without making different views for store ABC? Simple, use middleware.||||||||||
How it works First update the url like this:</description>
    </item>
    
    <item>
      <title>Build and Configure Plugins Inside Solr Using Docker</title>
      <link>https://ruddra.com/posts/solr-docker-plugin-install/</link>
      <pubDate>Tue, 01 Oct 2019 00:16:34 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/solr-docker-plugin-install/</guid>
      <description>Adding a plugin to Solr is relatively simple process. In this article, we are going to see how to add a plugin by creating a jar file using a docker container, then add that to a Solr which also runs inside docker container.||||||||||
Building the plugin Workflow for building the plugin Steps for building a Solr plugin inside Solr docker file are like this:</description>
    </item>
    
    <item>
      <title>Use VS Code Inside Docker Container for Development</title>
      <link>https://ruddra.com/posts/vscode-remote-docker-development/</link>
      <pubDate>Tue, 06 Aug 2019 18:54:21 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/vscode-remote-docker-development/</guid>
      <description>VS Code is the popular IDE at the moment. You can use it for developing applications in almost any programming language. In addition to that, you can do remote development in Docker,VM etc. In this post, we are going to discuss about how to use Docker Environment in VS Code.</description>
    </item>
    
    <item>
      <title>Django Serialize ForeignKeyField, ManyToManyField, Instance and Property Method</title>
      <link>https://ruddra.com/posts/django-serialize-foreignkey-m2m-property-instance-fields/</link>
      <pubDate>Thu, 13 Jun 2019 23:12:26 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/django-serialize-foreignkey-m2m-property-instance-fields/</guid>
      <description>Django’s serialization framework provides a mechanism for “translating” Django models into other formats. Usually they are in json, yaml, XML, GeoJSON etc text based formats.
Here, we are going to supercharge these serializers to do more things, even try to render properties and instance methods.
This article will be useful to you if you are:</description>
    </item>
    
    <item>
      <title>Deploy Django App in Sub Directory Using OpenShift</title>
      <link>https://ruddra.com/posts/deploy-django-subpath-openshift/</link>
      <pubDate>Wed, 24 Apr 2019 20:36:44 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/deploy-django-subpath-openshift/</guid>
      <description>When you are using OpenShift, you will be using routes to expose a route from a service. Let&amp;rsquo;s say you want to expose a path in example.com/dummy. When you do that for a django application(without any reverse proxy server), it usually becomes a problem, because the sub directory does not work well with Django&amp;rsquo;s urls.</description>
    </item>
    
    <item>
      <title>Install MySQL and MySQLClient(Python) in MacOS</title>
      <link>https://ruddra.com/posts/install-mysqlclient-macos/</link>
      <pubDate>Fri, 19 Apr 2019 23:59:43 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/install-mysqlclient-macos/</guid>
      <description>Connecting to MySQL from Python in MacOS is a very problemtic and painful process. In this post, we are going to see how to install MySQL and connect it from a Python Application using mysqlclient.||||||||||
Steps Step one: install &amp;lsquo;brew&amp;rsquo; You need to install Homebrew in you local machine. You can do it by:</description>
    </item>
    
    <item>
      <title>Create Proxy Object in Python</title>
      <link>https://ruddra.com/posts/python-proxy-object/</link>
      <pubDate>Fri, 12 Apr 2019 01:06:22 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/python-proxy-object/</guid>
      <description>Lets say you have been using a class named ClassA, objects created from that class has been used in many places. Now you have a requirement that you need to make a simillar class ClassB, which has almost simillar functionality. Objects of ClassA and ClassB will have simillar method signatures, and could be swapable.</description>
    </item>
    
    <item>
      <title>Do Extra in S3 Using Django Storage and Boto3</title>
      <link>https://ruddra.com/posts/aws-boto3-useful-functions/</link>
      <pubDate>Sat, 06 Apr 2019 01:49:10 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/aws-boto3-useful-functions/</guid>
      <description>Today, I am going to write about few useful snippets/functionalities which I have used for Amazon S3 or any S3 compitable storage using Boto3 and Django Storage. FYI, this post focuses on using S3 with Django.
So without further ado, let us begin. ||||||||||
Configuring S3 When using django storage, you don&amp;rsquo;t need to put configurations like ~/.</description>
    </item>
    
    <item>
      <title>Django: Save Unknown Object in Database</title>
      <link>https://ruddra.com/posts/django-save-unknown-object-in-database/</link>
      <pubDate>Sun, 10 Feb 2019 00:38:04 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/django-save-unknown-object-in-database/</guid>
      <description>Suppose you are dealing with a poorly written API, which returns different type of objects at different scenarios. For example, sometimes it returns a string(ie. abcd), sometimes it returns a list(ie. [1,2,3,4]), or maybe None. Now, you are suppose to save that data, which you can&amp;rsquo;t predict. As you can&amp;rsquo;t predict the data type of object, you can&amp;rsquo;t design your Django Model accordingly.</description>
    </item>
    
    <item>
      <title>Django: Ordering by Linked List for Model Objects</title>
      <link>https://ruddra.com/posts/django-model-linked-list/</link>
      <pubDate>Sat, 26 Jan 2019 14:58:58 +0600</pubDate>
      
      <guid>https://ruddra.com/posts/django-model-linked-list/</guid>
      <description>Linked list is a data structure where each object has points to next. In django, linked list can provide an interesting solution when it comes to custom ordering/grouping issues.
Lets think of an example like this= you are making a blog site, and you have made a Post Model like this:</description>
    </item>
    
    <item>
      <title>Django: Changing User Model in Mid-Project</title>
      <link>https://ruddra.com/posts/django-custom-user-migration-mid-phase-project/</link>
      <pubDate>Thu, 03 Jan 2019 02:00:00 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/django-custom-user-migration-mid-phase-project/</guid>
      <description>Every now and then I see some questions pop up in StackOverflow with title:
 ValueError: Related model &amp;lsquo;app.User&amp;rsquo; cannot be resolved
 This is a very common issue and pops up when the user tries to run the migration. So, lets talk more about what is this problem and how can we solve it.</description>
    </item>
    
    <item>
      <title>Testing for Django Rest Framework with Factory Boy and Faker</title>
      <link>https://ruddra.com/posts/tdd-drf-factory-boy-faker/</link>
      <pubDate>Sat, 22 Dec 2018 02:00:00 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/tdd-drf-factory-boy-faker/</guid>
      <description>“I&amp;rsquo;m not a great programmer; I&amp;rsquo;m just a good programmer with great habits.” ― Kent Beck
 Test Driven Development - in short TDD is a practice where you write the tests first then the actual code. It makes the code less vulnerable and it makes a testable software rather than writing the software, then test it.</description>
    </item>
    
    <item>
      <title>Bye Bye Ghost, Hello Hugo</title>
      <link>https://ruddra.com/posts/moving-to-hugo/</link>
      <pubDate>Fri, 21 Dec 2018 23:00:00 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/moving-to-hugo/</guid>
      <description>“The Only Thing That Is Constant Is Change -” ― Heraclitus
 This blog site has changed quite a lot since the begining. I initially developed it as a Django application. It was part of my learning process, and I hosted it in a private shared server.
But unfortunatly, good days came to an end, I had to give up that hosting for costing.</description>
    </item>
    
    <item>
      <title>Control Application Flow from Redux Middleware using React Router 4</title>
      <link>https://ruddra.com/posts/control-application-flow-from-redux-middleware/</link>
      <pubDate>Fri, 12 Oct 2018 17:25:38 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/control-application-flow-from-redux-middleware/</guid>
      <description>While developing application in ReactJs with Redux and React Router 4, what I felt is that, there is no direct relationship between application&amp;rsquo;s state and routing. We needed to create those connections inside Components. In each component, we needed to check application state and based on that we made decisions where to go next(if needed).</description>
    </item>
    
    <item>
      <title>Migration From Ghost 1.25.2 to 2.2</title>
      <link>https://ruddra.com/posts/migration-from-ghost-1-2-to-2-2/</link>
      <pubDate>Thu, 11 Oct 2018 14:21:22 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/migration-from-ghost-1-2-to-2-2/</guid>
      <description>This post is no longer valid as I have moved to Hugo :)
 ||||||||||
Verdict I have just migrated the site from Ghost 1.25.2 to 2.2. As every growth comes with some inevitable pain, thus you can expect a lot of things are broken.
Here all the URLS have been updated.</description>
    </item>
    
    <item>
      <title>Automated Deployment to OpenShift Using Jenkins and Webhook</title>
      <link>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three/</link>
      <pubDate>Sun, 12 Aug 2018 16:45:42 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-three/</guid>
      <description>The last post was about defining the pipelines. Now it is time to execute them. Also, at the end, we are going to show how to integrate webhook in your repository, so that for a specific event(like Push, Pull request merge etc) it will trigger the pipelines to automatically deploy the latest code to servers.</description>
    </item>
    
    <item>
      <title>Writing Jenkins Pipeline For OpenShift Deployment</title>
      <link>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two/</link>
      <pubDate>Sat, 11 Aug 2018 19:41:04 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-two/</guid>
      <description>Pipeline is a set of instructions, which will be executed as per given sequence and produce a output. Jenkins Pipeline is simply writing these instructions in Jenkins. These pipelines can be written in Groovy.
In previous post we have defined deployment structure and made necessary preparations for deployment of a python+gunicorn+nginx+jenkins based project.</description>
    </item>
    
    <item>
      <title>Deploy A Python App to OpenShift: Planning and Preparations</title>
      <link>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-one/</link>
      <pubDate>Sat, 11 Aug 2018 15:09:01 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/openshift-python-gunicorn-nginx-jenkins-pipelines-part-one/</guid>
      <description>Deploying a Python application to OpenShift is fairly easy. Write a Dockerfile and run oc new-app /path/to/Dockerfile, that&amp;rsquo;s it!! But if you want implement a full fledged modern CI/CD using Jenkins and openshift, you need to do little more than that. So let&amp;rsquo;s dive into it.
We will explain about the whole process in three articles:</description>
    </item>
    
    <item>
      <title>Deploy Django to OpenShift Using Jenkins Pipeline(CI/CD)</title>
      <link>https://ruddra.com/posts/django-openshift-pipeline/</link>
      <pubDate>Sun, 22 Jul 2018 17:51:20 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/django-openshift-pipeline/</guid>
      <description>Using Jenkins pipeline, you can easily automate your deployments in openshift. In this post, we are going to use this powerful tool to deploy a Django project. But before we start, one thing I need to mention is that, this project has been tested on in Minishift 1.2.0, OpenShift v3.9.0 and Kubernetes v1.</description>
    </item>
    
    <item>
      <title>Boilerplate For Angular 1.X and Django(Powered by Webpack2, Docker, Yarn, DRF)</title>
      <link>https://ruddra.com/posts/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/</link>
      <pubDate>Sun, 29 Apr 2018 10:00:52 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/boilerplate-django-with-angularjs-powered-by-webpack2-yarn-docker-drf/</guid>
      <description>This post is deprecated. Use it at your own risk
 Simple and clean boilerplate for using django and angular 1.x togather, with basic structure comes built-in. ||||||||||
Tech Stack  Python3 Django 1.11.6, Django Rest Framework Webpack 2 JavaScript(ES6)/AngularJS 1.x Yarn  Prerequisite  Require Yarn. How to install Yarn: https://yarnpkg.</description>
    </item>
    
    <item>
      <title>Migration from Ghost 0.11 to 1.XX Using Docker</title>
      <link>https://ruddra.com/posts/migrating-from-ghost-11-to-1-xx-using-docker/</link>
      <pubDate>Sun, 29 Apr 2018 07:37:24 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/migrating-from-ghost-11-to-1-xx-using-docker/</guid>
      <description>Ghost had formulated lots changes when they released version 1.XX. So, when you try to upgrade from 0.11 to 1.XX, you can follow the following steps.||||||||||
Steps FYI, you can also use the following steps if you want run Ghost in Docker and import your existing settings. Just Skip Step 1, 2, 7, 8.</description>
    </item>
    
    <item>
      <title>[Travel] Bandarban: In Search of Waterfalls</title>
      <link>https://ruddra.com/posts/bandarban-nafakhum-amiakhum-satbhaikhum/</link>
      <pubDate>Fri, 27 Apr 2018 16:18:35 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/bandarban-nafakhum-amiakhum-satbhaikhum/</guid>
      <description>Bandarban is a heaven for trekking for Bangladeshi people. There are lots of hills around the district, and there are some amazing waterfall as well. I visited three amazing waterfalls named Nafakhum, AmiaKhum, Satbhaikhum. Khum means waterfall in Marma language.||||||||||
Thanchi captured on the way to Thanchi
Again we went to Bandarban town and from there we took a Chander Gari(A four wheel drive car) to Thanchi Upazila.</description>
    </item>
    
    <item>
      <title>[Travel] Bandarban: Journey to Keokradong</title>
      <link>https://ruddra.com/posts/bandarban-journey-to-keokaradong/</link>
      <pubDate>Thu, 26 Apr 2018 16:26:30 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/bandarban-journey-to-keokaradong/</guid>
      <description>Bandarban is a beautiful district of Bangladesh. You will see lots of amazing mountains which are part of Arakan range. Keokradong is the 3rd highest pick**(after Tajingdong and Saka Haphong, references are here) of Bangladesh, which is situated in Bandarbans. So today I am going to share my experience visiting there.</description>
    </item>
    
    <item>
      <title>[Travel] Journey to the Land of Thunder Dragon</title>
      <link>https://ruddra.com/posts/journey-to-bhutan/</link>
      <pubDate>Wed, 25 Apr 2018 18:20:01 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/journey-to-bhutan/</guid>
      <description>I went to Bhutan on September, 2015. It was my best trip ever, really ever. From Dhaka, we went there by DRUK AIR. We(me and two of my friends) landed in Paro Airport. It was really wonderful airport, it was small but clean and organised. After getting out of the plan, a chilling air struck us, and instantly we knew, we gonna like this country.</description>
    </item>
    
    <item>
      <title>Deploy Django to OpenShift 3 Powered by MySQL and Gunicorn</title>
      <link>https://ruddra.com/posts/deploy-django-to-openshift-3/</link>
      <pubDate>Sat, 24 Feb 2018 13:32:11 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/deploy-django-to-openshift-3/</guid>
      <description>If you want to use OpenShift for deploying Django, you can follow this post and simply do that. You don&amp;rsquo;t need to learn Kubernetes. We will use docker file only. No other fancy stuff.
Also, before starting, I am also hoping you are little bit familiar with OpenShift 3 and oc tools.</description>
    </item>
    
    <item>
      <title>Use VS Code for Python and Django Development</title>
      <link>https://ruddra.com/posts/vs-code-for-python-development/</link>
      <pubDate>Wed, 26 Jul 2017 16:13:17 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/vs-code-for-python-development/</guid>
      <description>Visual Studio Code is an editor developed by Microsoft. I have been using this editor for Python development for a few months now. Previously I have been using Pycharm Community Edition for development, but I had to switch to an editor which was less resource consuming than Pycharm, hence I found VS Code.</description>
    </item>
    
    <item>
      <title>Ubuntu Hacks: Launching Chrome Apps at Startup</title>
      <link>https://ruddra.com/posts/ubuntu-protip-launching-chrome-apps-at-startup/</link>
      <pubDate>Wed, 19 Jul 2017 16:12:47 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/ubuntu-protip-launching-chrome-apps-at-startup/</guid>
      <description>Chrome apps are really handy when you don&amp;rsquo;t want to overhaul your system with apps for every little purpose. Starting those apps at startup can be used instead of manually starting them every time you want to use them. Like starting the messenger at startup of the system. To do that.</description>
    </item>
    
    <item>
      <title>Play With Pillow</title>
      <link>https://ruddra.com/posts/play-with-pillow/</link>
      <pubDate>Sun, 28 May 2017 14:35:59 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/play-with-pillow/</guid>
      <description>Who hasn&amp;rsquo;t heard PIL? It&amp;rsquo;s an image processing library made by python (Python Image Library). Pillow is an extension of it.||||||||||
Installation So installing pillow is really easy:
pip install pillow Now we are going to do some image processing cool stuff:
First Load Image:
from PIL import Image, ImageOps img = Image.</description>
    </item>
    
    <item>
      <title>Python: Selenium with PhantomJs to capture Screenshots</title>
      <link>https://ruddra.com/posts/python-selenium-with-phantomjs-to-capture-screenshots/</link>
      <pubDate>Tue, 21 Mar 2017 15:45:11 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/python-selenium-with-phantomjs-to-capture-screenshots/</guid>
      <description>PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.
And
Selenium is a portable software-testing framework for web applications. Selenium provides a record/playback tool for authoring tests without the need to learn a test scripting language (Selenium IDE)</description>
    </item>
    
    <item>
      <title>Documentation Of Django Encrypt File</title>
      <link>https://ruddra.com/posts/documentation-of-django-encrypt-file/</link>
      <pubDate>Fri, 24 Feb 2017 18:52:20 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/documentation-of-django-encrypt-file/</guid>
      <description>This is no longer maintained. Use it at your own risk.
 Django Encrypt File is a simple Library which can be used to encrypt uploaded files and store them.||||||||||
Installation Use pip to install it:
pip install djangoencryptfile Or
pip install https://github.com/ruddra/django-encrypt-file/tarball/0.7 Basic usage from djangoencryptfile import EncryptionService from django.</description>
    </item>
    
    <item>
      <title>Docker: Use Celery in Django(Redis as Broker)</title>
      <link>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</link>
      <pubDate>Mon, 14 Nov 2016 15:43:31 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/docker-do-stuff-using-celery-using-redis-as-broker/</guid>
      <description>In previous two posts, we have deployed Django with Postgres, Nginx, now its time to do some async stuff using Celery. In this post, I will do the magic tricks first, explain them later.||||||||||
Add &amp;lsquo;Celery&amp;rsquo; to django To add celery, we need make a container for celery. We can re-use the Dockerfile of django for making celery&amp;rsquo;s container like this:</description>
    </item>
    
    <item>
      <title>Serve Static Files by Nginx from Django using Docker</title>
      <link>https://ruddra.com/posts/serve-static-files-by-nginx-from-django-using-docker/</link>
      <pubDate>Wed, 02 Nov 2016 17:24:56 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/serve-static-files-by-nginx-from-django-using-docker/</guid>
      <description>This is more of a follow up post of my previous blog.
Before I start, I am assuming you have successfully deployed django using docker &amp;amp; nginx, but having some problems serving static files.||||||||||
Steps No worries, its easy. Just follow these steps:
1. In your django settings.py file, add static file directory i.</description>
    </item>
    
    <item>
      <title>Deploy Django, Gunicorn, NGINX, Postgresql using Docker</title>
      <link>https://ruddra.com/posts/docker-django-nginx-postgres/</link>
      <pubDate>Tue, 09 Aug 2016 13:47:22 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/docker-django-nginx-postgres/</guid>
      <description>This post mainly based on this blog: https://docs.docker.com/compose/django/.
I will be extending this post by serving django+gunicorn using Nginx, also I will using Postgresql docker container to use it as database.||||||||||
Steps Let us checkout to the following steps.
Create django project Let&amp;rsquo;s make an empty directory named myproject and add another folder inside name it src.</description>
    </item>
    
    <item>
      <title>Make MacOS Notifications From RSS Feed Using Python</title>
      <link>https://ruddra.com/posts/make-apple-notifications-from-rss-feed-using-python/</link>
      <pubDate>Tue, 26 Jan 2016 13:56:44 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/make-apple-notifications-from-rss-feed-using-python/</guid>
      <description>Today we are going to see how make OSX notifications from RSS Feed of any website using Python.
So first of all, let us see how to make a simple notification. We are going to use AppleScript for this.||||||||||
Command for notification in AppleScript Go to terminal and Type:
&amp;gt;&amp;gt;osascript -e &amp;#39;display notification &amp;#34;Lorem ipsum dolor sit amet&amp;#34; with title &amp;#34;Title&amp;#34;&amp;#39; We shall see a notification popping up in right up corner like this:</description>
    </item>
    
    <item>
      <title>Make .CSV file using MySQL and Python</title>
      <link>https://ruddra.com/posts/make-csv-file-using-mysql-and-python/</link>
      <pubDate>Sun, 10 Jan 2016 15:21:42 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/make-csv-file-using-mysql-and-python/</guid>
      <description>In this blog, I am going to show how to develop an application by which we can make .csv files from MySQL database using Python.||||||||||
Steps SQL command Now, let us start by getting data from Database. Lets say we have a DB names csv_test and it contains a table named test with fields id and name, and for testing purpose let us have some values inserted into it like this:</description>
    </item>
    
    <item>
      <title>Django 1.7 and Scrapy</title>
      <link>https://ruddra.com/posts/django-1-7-scrapy/</link>
      <pubDate>Sun, 03 Jan 2016 15:45:51 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/django-1-7-scrapy/</guid>
      <description>This post is depricated. Use it at your own risk.
 Today I am going to share how to use Scrapy and Django together to crawl to a website and store scraped data to Database using Django.||||||||||
Project setup Django First, let us build a Django application using the following commands.</description>
    </item>
    
    <item>
      <title>Make a Blog using Django Part 2</title>
      <link>https://ruddra.com/posts/make-a-blog-using-django-part-2/</link>
      <pubDate>Thu, 17 Sep 2015 21:29:09 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/make-a-blog-using-django-part-2/</guid>
      <description>This post is now depricated. Please follow the official tutorial for creating your first django application.
 From previous post, you have configured and ran django, also added admin site to the django.
 To view the working source of this tutorial, check here at: https://github.com/ruddra/myblog/
 ||||||||||
Create entry in database Now click on the myblog section and click add to add new blog.</description>
    </item>
    
    <item>
      <title>Make a Blog using Django Part 1</title>
      <link>https://ruddra.com/posts/make-a-blog-using-django-part-1/</link>
      <pubDate>Thu, 17 Sep 2015 21:29:08 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/make-a-blog-using-django-part-1/</guid>
      <description>This post is now deprecated. Please follow the official tutorial for creating your first django application.
 &amp;ldquo;Making a blog using django&amp;rdquo; - is probably the most made tutorial of Django. This post is no different. But I made this in my own way using some of django&amp;rsquo;s built-in features so that less coding is required and making it more understandable with minimum packages to use.</description>
    </item>
    
    <item>
      <title>Change Column Headers in Django Tables 2</title>
      <link>https://ruddra.com/posts/change-column-headers-django-tables2/</link>
      <pubDate>Thu, 17 Sep 2015 21:15:04 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/change-column-headers-django-tables2/</guid>
      <description>Django Tables2 is a package which displays table directly from queryset. It shows column header based on object&amp;rsquo;s attribute name. But if someone wants to override it, how can he/she do that? Here is a easy solution.||||||||||
Model class Suppose we have a model class like this:
class SomeModel(models.Model): somevalue = models.</description>
    </item>
    
    <item>
      <title>Dynamically constructing filters based on string input using SQLAlchemy</title>
      <link>https://ruddra.com/posts/dynamically-constructing-filters-based-on-string-input-using-sqlalchemy/</link>
      <pubDate>Thu, 17 Sep 2015 21:15:04 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/dynamically-constructing-filters-based-on-string-input-using-sqlalchemy/</guid>
      <description>Here I am going to write a dynamic filter. This filter is made for python 3. It will take query or model class and filter condition as input, It will return filtered query based on those filter condition.
This is constructed using this SO answer.||||||||||
Function class DynamicFilter(ModelHelper): def __init__(self, query=None, model_class=None, filter_condition=None): super().</description>
    </item>
    
    <item>
      <title>How to configure Django and Tornado in PyCharm Community Edition</title>
      <link>https://ruddra.com/posts/how-to-configure-django-tornado-in-pycharm-community-edition/</link>
      <pubDate>Thu, 17 Sep 2015 21:11:18 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/how-to-configure-django-tornado-in-pycharm-community-edition/</guid>
      <description>I think, Pycharm is THE best IDE for developing python. But unfortunately, the professional edition is not free. But community edition is good enough for doing debugging, integrating GIT etc.
Normally its easy to use the community edition for django and tornado&amp;rsquo;s debugging/running if you know how to configure.||||||||||
Django configuration For django&amp;rsquo;s configuration, there is 5 easy steps:</description>
    </item>
    
    <item>
      <title>Some Useful Tools/Function for Django</title>
      <link>https://ruddra.com/posts/some-useful-tools-function/</link>
      <pubDate>Thu, 17 Sep 2015 20:56:54 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/some-useful-tools-function/</guid>
      <description>This post is depricated as its based on Django 1.6 mostly.
 I am going to share some useful Django tools/functions which are very useful(were for me atleast) to get things done.||||||||||
Return any model class and its properties This method will return any model class if you have the name of the class.</description>
    </item>
    
    <item>
      <title>Perodic Tasks By Celery 3.1 Example</title>
      <link>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</link>
      <pubDate>Thu, 17 Sep 2015 18:03:07 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/perodic-tasks-by-celery-3-1-example/</guid>
      <description>This post is depricated. Please see the latest documentation(current celery is running version 4.2)
 I am assuming you have read celery docs from Celery Documentation
As we know, celery can be used as a scheduler for executing asynchronous tasks in periodic cycles. Here I am going to share to do that with a code example.</description>
    </item>
    
    <item>
      <title>Working with Formset</title>
      <link>https://ruddra.com/posts/working-with-formset/</link>
      <pubDate>Thu, 17 Sep 2015 17:49:58 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/working-with-formset/</guid>
      <description>This post is depricated and may not be useful.
 As documentation says:
 A formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid.
 So here I am going to show a very simple django formset implementation example.</description>
    </item>
    
    <item>
      <title>Sample Ajax GET/POST Request in Django</title>
      <link>https://ruddra.com/posts/sample-ajax-get-post-request-in-django/</link>
      <pubDate>Thu, 17 Sep 2015 17:29:45 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/sample-ajax-get-post-request-in-django/</guid>
      <description>Let us make a test scenario here: A dropdown field which on change we are going to send a Get/Post request to Django and return response.
Let us start coding&amp;hellip;.||||||||||
HTML code &amp;lt;select id=&amp;#34;select_dropdown&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;joshua&amp;#34;&amp;gt;joshua&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;peter&amp;#34;&amp;gt;peter&amp;lt;/option&amp;gt; .... .... &amp;lt;/select&amp;gt; Create an Ajax request Let&amp;rsquo;s make an Ajax request after the change in the dropdown field.</description>
    </item>
    
    <item>
      <title>Using IntellijIdea/Pycharm Within An Exisiting Virtualenv</title>
      <link>https://ruddra.com/posts/using-intellijidea-within-an-exisiting-virtualenv/</link>
      <pubDate>Thu, 17 Sep 2015 17:24:52 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/using-intellijidea-within-an-exisiting-virtualenv/</guid>
      <description>To add a virtual environment to Intellij Idea, You have added virtualenv folder&amp;rsquo;s python to project SDK. Which means that virtualenv directory&amp;rsquo;s python( for example venv/bin/python2.7) needs to be added to Intellij Idea project path. ||||||||||
For PyCharm &amp;gt;= 2018 As per documentation from Pycharm:
  In the Project Interpreter page, click the cog icon and select Add.</description>
    </item>
    
    <item>
      <title>Implementation of Forgot/Reset Password Feature in Django</title>
      <link>https://ruddra.com/posts/implementation-of-forgot-reset-password-feature-in-django/</link>
      <pubDate>Tue, 21 Oct 2014 18:13:05 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/implementation-of-forgot-reset-password-feature-in-django/</guid>
      <description>This post is deprecated in favour of django authentication views
 Django has its own implementation for reset/forgot password for its admin site. We are going to use that piece of code as reference to implement similar feature for a non admin-site authentication page. Although there are tons of good packages which will allow user to use their password reseting system.</description>
    </item>
    
    <item>
      <title>Syncdb vs Migration</title>
      <link>https://ruddra.com/posts/syncdb-vs-migration/</link>
      <pubDate>Fri, 04 Jul 2014 17:34:00 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/syncdb-vs-migration/</guid>
      <description>While surfing through Stackoverflow, I find a common question among Django users that, database not working properly; fields attribute changed, yet not working etc. Clearly because most of them used syncdb after altering fields. Well, lets make some things clear here about django syncdb and migration.||||||||||
What is &amp;lsquo;syncdb&amp;rsquo; syncdb is a command which is executed in django shell to create tables for first time for apps which are added to INSTALLED_APPS of settings.</description>
    </item>
    
    <item>
      <title>RichText Editor in Django Admin Site</title>
      <link>https://ruddra.com/posts/richtext-editor-in-django-admin-site/</link>
      <pubDate>Tue, 29 Apr 2014 10:44:30 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/richtext-editor-in-django-admin-site/</guid>
      <description>I wanted to add a rich text editor within django administrator. It is not that hard to add a rich text editor, as there are editors like CKeditor, Tinymce.||||||||||
Download ckeditor file There are multiple plugins for django like django-ckeditor or django-tinymce etc. It seemed very complicated to use for me.</description>
    </item>
    
    <item>
      <title>Django Translation Using .PO File</title>
      <link>https://ruddra.com/posts/django-translation-using-po-file/</link>
      <pubDate>Mon, 16 Dec 2013 10:51:47 +0000</pubDate>
      
      <guid>https://ruddra.com/posts/django-translation-using-po-file/</guid>
      <description>When comes to using multiple languages in one single site, Django is very handy. You can use .po file to do your translation for you.||||||||||
How to do that Process is very simple: First create .po file. To make .po file I would suggest to use poedit or Rosetta. Here is another option that is using django&amp;rsquo;s very own Localisation.</description>
    </item>
    
  </channel>
</rss>